from flask import request, jsonify
from flask_restx import Namespace, Resource, fields
from database.supabase_db import db
import uuid
import logging
from modules.response_handler import APIResponse

logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

auth_bp = Namespace('Authentication',
                        description='Authentication management operations')

user_model = auth_bp.model(
    'User', {
        'user_uuid': fields.String(description='User UUID'),
        'username': fields.String(description='User name'),
        'phone': fields.String(description='User phone'),
        'email': fields.String(description='User email'),
        'password': fields.Raw(description='User password'),
        'picture': fields.String(description='User picture')
    })

restaurant_model = auth_bp.model(
    'Restaurant', {
        'restaurant_uuid': fields.String(description='Restaurant UUID'),
        'restaurant_name': fields.String(description='Restaurant name'),
        'address': fields.String(description='Restaurant address'),
        'city': fields.String(description='Restaurant city'),
        'country': fields.String(description='Restaurant country'),
        'postcode': fields.String(description='Restaurant postcode'),
        'country_code': fields.String(description='Restaurant country code'),
        'currency': fields.String(description='Restaurant currency'),
        'phone': fields.String(description='Restaurant phone'),
        'email': fields.String(description='Restaurant email'),
        'latitude': fields.Float(description='Restaurant latitude'),
        'longitude': fields.Float(description='Restaurant longitude'),
        'logo_url': fields.String(description='Restaurant logo URL')
    })


@auth_bp.route("/v2")
class Authentication(Resource):

    @auth_bp.doc('get_auth')
    def get(self):
        pass

    @auth_bp.doc('create_auth')
    @auth_bp.expect(user_model)
    def post(self):
        """Create a new document"""
        pass