(Files content cropped to 300k characters, download full ingest to see more)
================================================
File: /README.md
================================================
<a name="readme-top"></a>

<!-- PROJECT LOGO -->
<br />
<div align="center">
  <a href="https://github.com/PeckishAI/frontend-api">
    <img src="logo.png" alt="Logo" width="210" height="65">
  </a>

<h3 align="center">Peckish Front-end</h3>

  <p align="center">
    Suppliers & Restaurants applications
    <br />
    <a href="https://iampeckish.com/"><strong>See website Â»</strong></a>
    <br />
    <br />
  </p>
</div>

<!-- TABLE OF CONTENTS -->
<details>
  <summary>Table of Contents</summary>
  <ol>
    <li>
      <a href="#about-the-project">About The Project</a>
    </li>
    <li>
      <a href="#getting-started">Getting Started</a>
      <ul>
        <li><a href="#prerequisites">Prerequisites</a></li>
        <li><a href="#installation">Installation</a></li>
        <li><a href="#tools-configuration">Tools configuration</a></li>
      </ul>
    </li>
    <li><a href="#running-the-app">Running the App</a></li>
    <li><a href="#building-the-app">Building the App</a></li>
    <li><a href="#contribution">Contribution</a></li>
  </ol>
</details>

## About

This repository is a mono-repository (using Turborepo) that contains the applications for suppliers and restaurants. They are built with React in Typescript. You can use Javascript or Typescript file, I recommand you to use Typescript to simplify developpement and avoid runtime errors.

<!-- GETTING STARTED -->

## Getting Started

Follow those steps to set-up the project on your computer.

### Prerequisites

Before setting up and running the project, ensure you have the following prerequisites installed on your system:

- **Node.js** (and npm): Of course you need to have npm in order to set-up the project.

- **Yarn**: I recommand you to use yarn as package manager. You can install Yarn globally using npm with the following command: `npm install -g yarn`.

### Installation

1. Clone the repository on your computer
2. Install dependencies using `yarn install` in root of the project
3. That's all !

### Tools configuration

The project uses Prettier and ESLint to ensure a good code style and consistent code formatting

It's not mandatory to install them but it's highly recommanded.
There's a VSCode extension for those.

**Prettier** :

1. Install extension [here](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)
2. Go to `Files > Preferences > Settings`
3. Search for the `Default Formatter` parameter and select `Prettier`
4. Search also `Format On Save` and check it

**ESLint** :

1. Install extension [here](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)
2. Ready to use

If you get some inconsistent errors and you don't know how to use eslint, do not hesitate to ask Jules.

## Running the App

You can start the both application using one command :
`yarn dev`

But you can also launch each project separatly using `yarn dev` inside the desired app folder or by using `yarn dev --filter app_name` from the root folder.

## Building the App

To build all the apps : `yarn build`

To build a specific app : `yarn build --filter app_name` or by using `yarn build` inside the desired app folder.

## Contribution

When you need to create a component that need to be shared by the both apps follow this steps :

1. Go inside the `packages/ui` folder
2. Create your component in the right folder
3. Inside the root `index.ts` import it and add it in the export line
4. That's all ! The component should be accessible in your app and all the change you made on it will be reflected directly

<p align="right">(<a href="#readme-top">back to top</a>)</p>


================================================
File: /auth.Dockerfile
================================================
# build environment
FROM node:20-alpine as react-build
WORKDIR /build
COPY . .

# Given by --build-arg on the cloudbuild task
ARG VITE_CONFIG_MODE

RUN yarn
RUN yarn build --filter authentification

# server environment
FROM nginx:alpine
COPY nginx.conf /etc/nginx/conf.d/configfile.template

COPY --from=react-build /build/apps/authentification/dist /usr/share/nginx/html
# COPY --from=react-build /build/dist /usr/share/nginx/html

ENV PORT $PORT
ENV HOST 0.0.0.0
EXPOSE $PORT
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

================================================
File: /nginx.conf
================================================
server {
    listen       $PORT;
    #  server_name  localhost;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri /index.html;
    }

    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";
}

================================================
File: /package.json
================================================
{
  "private": true,
  "name": "peckish-frontend",
  "scripts": {
    "build": "dotenv -- turbo run build",
    "dev": "dotenv -- turbo run dev",
    "lint": "turbo run lint",
    "format": "prettier --write \"**/*.{ts,tsx,md}\"",
    "depcheck": "depcheck && turbo run depcheck",
    "postinstall": "manypkg check | manypkg fix"
  },
  "packageManager": "yarn@1.22.17",
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "dependencies": {
    "@manypkg/cli": "latest",
    "@types/node": "^20.4.7",
    "@typescript-eslint/eslint-plugin": "^6.2.0",
    "@typescript-eslint/parser": "^6.2.0",
    "depcheck": "^1.4.3",
    "dotenv-cli": "^7.3.0",
    "eslint": "^8.46.0",
    "eslint-config-prettier": "^8.9.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-react": "^7.28.0",
    "eslint-plugin-react-hooks": "^4.3.0",
    "eslint-plugin-storybook": "^0.6.13",
    "prettier": "^3.0.0",
    "tsconfig": "*",
    "turbo": "^1.10.12"
  }
}


================================================
File: /restaurant.Dockerfile
================================================
# build environment
FROM node:20-alpine as react-build
WORKDIR /build
COPY . .

# Given by --build-arg on the cloudbuild task
ARG VITE_CONFIG_MODE

RUN yarn
RUN yarn build --filter restaurant

# server environment
FROM nginx:alpine
COPY nginx.conf /etc/nginx/conf.d/configfile.template

COPY --from=react-build /build/apps/restaurant/dist /usr/share/nginx/html
# COPY --from=react-build /app/dist /usr/share/nginx/html

ENV PORT $PORT
ENV HOST 0.0.0.0
EXPOSE $PORT
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

================================================
File: /storybook.Dockerfile
================================================
# build environment
FROM node:20-alpine as react-build
WORKDIR /build
COPY . .

RUN yarn
RUN yarn build --filter docs

# server environment
FROM nginx:alpine
COPY nginx.conf /etc/nginx/conf.d/configfile.template

COPY --from=react-build /build/apps/docs/storybook-static /usr/share/nginx/html

ENV PORT $PORT
ENV HOST 0.0.0.0
EXPOSE $PORT
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

================================================
File: /supplier.Dockerfile
================================================
# build environment
FROM node:20-alpine as react-build
WORKDIR /build
COPY . .

# Given by --build-arg on the cloudbuild task
ARG VITE_CONFIG_MODE

RUN yarn
RUN yarn build --filter supplier

# server environment
FROM nginx:alpine
COPY nginx.conf /etc/nginx/conf.d/configfile.template

COPY --from=react-build /build/apps/supplier/dist /usr/share/nginx/html
# COPY --from=react-build /app/dist /usr/share/nginx/html

ENV PORT $PORT
ENV HOST 0.0.0.0
EXPOSE $PORT
CMD sh -c "envsubst '\$PORT' < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

================================================
File: /tsconfig.json
================================================
{
  "extends": "tsconfig/vite.json",
  "include": ["."],
  "exclude": ["**/dist", "node_modules"]
}


================================================
File: /turbo.json
================================================
{
  "$schema": "https://turbo.build/schema.json",
  "pipeline": {
    "build": {
      "dependsOn": ["^build"],
      "outputs": ["dist/**", "storybook-static/**"]
    },
    "lint": {},
    "dev": {
      "cache": false,
      "persistent": true
    },
    "storybook:dev": {
      "cache": false,
      "persistent": true
    },
    "depcheck": {}
  }
}


================================================
File: /.depcheckrc
================================================
ignores: ["tsconfig", "prettier", "typescript"]


================================================
File: /.dockerignore
================================================
**/node_modules

================================================
File: /.eslintrc.js
================================================
/** @type {import("eslint").Linter.Config} */
module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  parser: '@typescript-eslint/parser',
  extends: [
    'prettier',
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:storybook/recommended',
  ],
  plugins: ['@typescript-eslint', 'react', 'prettier'],
  parserOptions: {
    sourceType: 'module',
    ecmaVersion: 2021,
    project: 'tsconfig.json',
  },
  rules: {
    'prettier/prettier': [
      'error',
      {
        endOfLine: 'auto',
      },
    ],
    'react/react-in-jsx-scope': 'off',
  },
  ignorePatterns: ['vite.config.ts', '.eslintrc.js'],
};


================================================
File: /.prettierrc
================================================
{
  "arrowParens": "always",
  "tabWidth": 2,
  "trailingComma": "es5",
  "bracketSameLine": true,
  "bracketSpacing": true,
  "singleQuote": true,
  "useTabs": false,
  "semi": true,
  "printWidth": 80
}

================================================
File: /apps/authentification/README.md
================================================
# React + TypeScript + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:

- Configure the top-level `parserOptions` property like this:

```js
   parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: ['./tsconfig.json', './tsconfig.node.json'],
    tsconfigRootDir: __dirname,
   },
```

- Replace `plugin:@typescript-eslint/recommended` to `plugin:@typescript-eslint/recommended-type-checked` or `plugin:@typescript-eslint/strict-type-checked`
- Optionally add `plugin:@typescript-eslint/stylistic-type-checked`
- Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and add `plugin:react/recommended` & `plugin:react/jsx-runtime` to the `extends` list


================================================
File: /apps/authentification/cloudbuild.yaml
================================================
steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--build-arg=VITE_CONFIG_MODE=${_VITE_CONFIG_MODE}'
      - '-t'
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - .
      - '-f'
      - auth.Dockerfile
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - >-
        --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
      - '--port=8000'
    id: Deploy
    entrypoint: gcloud
images:
  - >-
    $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _DEPLOY_REGION: europe-west1
  _TRIGGER_ID: abd71837-929b-41bd-adf4-ed704963c118
  _AR_HOSTNAME: europe-west1-docker.pkg.dev
  _PLATFORM: managed
  _SERVICE_NAME: api-gateway


================================================
File: /apps/authentification/index.html
================================================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script type="text/javascript" src="https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js"></script>

    <title>Peckish - Sign In</title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800&display=swap');
    </style>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=MuseoModerno:wght@900&display=swap');
    </style>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>


================================================
File: /apps/authentification/package.json
================================================
{
  "name": "authentification",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview",
    "depcheck": "depcheck"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.3.1",
    "@peckishai/user-management": "*",
    "@react-oauth/google": "^0.11.1",
    "axios": "^1.4.0",
    "i18next": "^23.4.4",
    "i18next-browser-languagedetector": "^7.1.0",
    "js-cookie": "^3.0.5",
    "react": "^18.2.0",
    "react-apple-login": "^1.1.6",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.46",
    "react-i18next": "^13.1.2",
    "react-icons": "^4.10.1",
    "react-router-dom": "^6.15.0",
    "shared-config": "*",
    "shared-translation": "*",
    "shared-ui": "*",
    "zod": "^3.22.2",
    "zustand": "^4.4.1"
  },
  "devDependencies": {
    "@types/js-cookie": "^3.0.3",
    "@types/react": "^18.2.15",
    "@types/react-dom": "^18.2.7",
    "@vitejs/plugin-react-swc": "^3.3.2",
    "eslint": "^8.46.0",
    "tsconfig": "*",
    "typescript": "^5.0.2",
    "vite": "^5.4.8"
  }
}


================================================
File: /apps/authentification/tsconfig.json
================================================
{
  "extends": "tsconfig/vite.json",
  "include": ["src"]
}

================================================
File: /apps/authentification/vite.config.ts
================================================
import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react-swc';

// https://vitejs.dev/config/
export default defineConfig({
  server: {
    port: 5123,
    headers: {
      'Cross-Origin-Opener-Policy': 'same-origin-allow-popups',
    },
  },
  plugins: [react()],
  css: {
    preprocessorOptions: {
      scss: {
        api: 'modern',
      },
    },
  },
});


================================================
File: /apps/authentification/.gitignore
================================================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


================================================
File: /apps/authentification/src/index.scss
================================================
.Auth {
  width: 100vw;
  height: 100vh;
  display: flex;

  .form-section {
    position: relative;
    width: 50%;
    background-color: var(--navbarColor);
    padding: 40px 75px;
    display: flex;
    flex-direction: column;
    justify-content: center;

    .company-name {
      font-size: 2.3rem;
      justify-content: center;
      display: flex;
      margin-bottom: 20px
    }

    .title {
      margin-bottom: 10px;
    }
    .description {
      margin-bottom: 40px;
    }

    .form-error {
      color: var(--errorColor);
      font-size: 0.8rem;
      margin-bottom: 20px;
    }
    .inputs-container {
      // max-width: 80%;
      display: flex;
      flex-direction: column;
      row-gap: 20px;

      .password-row {
        display: flex;
        column-gap: 20px;

        .LabeledInput {
          flex: 1;
        }
      }
      .remember-me-container {
        display: flex;
        justify-content: space-between;
        align-items: center;

        .forget-password-button{
          cursor: pointer;
          font-size: 0.9rem;
        }
      }     
    }

    .or {
      display: flex;
      text-align: center;
      border: 0px rgba(0, 0, 0, 0.04);

      span {
        display: inline-block;
        padding-left: 15px;
        padding-right: 15px;
        color: rgba(0, 0, 0, 0.54);
      }

      &::before,
      &::after {
        content: '';
        position: relative;
        width: 100%;
        border-top: thin solid rgba(0, 0, 0, 0.12);
        top: 50%;
      }
    }

    .submit {
      font-size: 0.9rem;
      height: var(--input-large-height);
      border-radius: 5px;
    }

    .google-button {
      cursor: pointer;
      height: var(--input-large-height);
      background-color: white;
      border-radius: 5px;
      border: none;
      font-size: 0.9rem;

      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
      transition: 200ms ease-in-out;

      &:hover {
        background-color: #e2e2e2;
      }
    }

    .apple-button {
      cursor: pointer;
      height: var(--input-large-height);
      background-color: black;
      color: white;
      border-radius: 5px;
      border: none;
      font-size: 0.9rem;

      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
      transition: 200ms ease-in-out;

      &:hover {
        color: rgb(194, 194, 194);
      }
    }

    .create-account {
      text-align: center;
      font-size: 0.9rem;
      margin-top: 5px;

      a {
        cursor: pointer;
        color: var(--primaryColor);
      }
    }

    .choice-row {
      display: flex;
      gap: 20px;
      justify-content: space-evenly;
      margin-top: 25px;
      .choice-card {
        flex-basis: 0;
        flex-grow: 1;
        min-width: 0;
        max-width: 200px;

        display: flex;
        flex-direction: column;
        align-items: center;

        padding: 20px;
        background-color: var(--backgroundColor);
        border-radius: 10px;
        // box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        // box-shadow: 0 0 5px #000;
        box-shadow: rgba(0, 0, 0, 0.08) 0px 4px 12px;
        transition: all 200ms;
        cursor: pointer;

        &:hover {
          // box-shadow: none;
          // transform: scaleZ(100);
          transform: translateY(-5px);
        }

        .icon {
          width: 45px;
          height: 45px;
          color: var(--primaryColor);
          margin-bottom: 10px;
        }
        .title {
          font-weight: 600;
          font-size: 1rem;
        }
        .description {
          font-style: italic;
          font-size: 0.75rem;
          margin-bottom: 0;
          text-align: center;
        }
      }
    }
  }

  .loading-fullscreen {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f6f1f19a;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .image-section {
    width: 50%;
    background-color: var(--primaryColor);
  }

  @media screen and (max-width: 800px) {
    .form-section {
      position: absolute;
      width: 80%;
      border-radius: 10px;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      .title {
        font-size: 1.5rem;
      }
    }
    .image-section {
      width: 100%;
    }
  }

  @media screen and (max-width: 500px) {
    .form-section {
      padding: 30px 30px;

      .title {
        font-size: 1.3rem;
      }
      .description {
        font-size: 0.9rem;
        margin-bottom: 20px;
      }
    }
    // .image-section {
    // }

    .choice-row {
      flex-direction: column;
    }
  }
}


================================================
File: /apps/authentification/src/main.tsx
================================================
import React from 'react';
import ReactDOM from 'react-dom/client';
import { SignIn } from './pages/SignIn.js';
import { GoogleOAuthProvider } from '@react-oauth/google';
import { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';
import { SignUp } from './pages/SignUp';
import { TitleRoute } from './pages/TitleRoute.js';
import { ChooseUsage } from './pages/ChooseUsage';
import { GLOBAL_CONFIG } from 'shared-config';
import './translation/i18n';
import './index.scss';
import { Logout } from './pages/Logout.js';
import { FromHandler } from './pages/FromHandler.js';
import { userService } from '@peckishai/user-management';
import { ResetPassword } from './pages/ResetPassword.js';
import { EmailResetPassword } from './pages/EmailResetPassword.js';

const GOOGLE_CLIENT_ID = GLOBAL_CONFIG.GOOGLE_CLIENT_ID;

userService.setConfig(GLOBAL_CONFIG);

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}>
      <BrowserRouter>
        <Routes>
          <Route path="/" element={<FromHandler />}>
            <Route index element={<Navigate to={'sign-in'} replace />} />
            <Route path="logout" element={<Logout />} />
            <Route path="/" element={<TitleRoute />}>
              <Route path="sign-in" element={<SignIn />} />
              <Route path="/reset-password" element={<ResetPassword />} />
              <Route
                path="/email-reset-password"
                element={<EmailResetPassword />}
              />
              <Route path="sign-up" element={<SignUp />} />
              <Route path="choose-usage" element={<ChooseUsage />} />
              <Route path="*" element={<Navigate to="/sign-in" replace />} />
            </Route>
          </Route>
        </Routes>
      </BrowserRouter>
    </GoogleOAuthProvider>
  </React.StrictMode>
);


================================================
File: /apps/authentification/src/vite-env.d.ts
================================================
/// <reference types="vite/client" />


================================================
File: /apps/authentification/src/components/AppleButton.tsx
================================================
import AppleLogin from 'react-apple-login';
import authService, { LogInResult } from '../services/auth.service';
import { useTranslation } from 'react-i18next';
import { FaApple } from 'react-icons/fa';
import { GLOBAL_CONFIG } from 'shared-config';

type Props = {
  type: 'sign-in' | 'sign-up';
  handleRequest: (apiCall: Promise<LogInResult>) => void;
  setErrorMessage: (message: string) => void;
};

export const AppleButton = (props: Props) => {
  const { t } = useTranslation(['error', 'common']);

  return (
    <AppleLogin
      // redirectURI="https://a21d-178-132-215-44.ngrok-free.app/sign-in"
      redirectURI={GLOBAL_CONFIG.authentificationUrl + '/sign-in'}
      clientId={GLOBAL_CONFIG.APPLE_CLIENT_ID}
      scope="email name"
      usePopup
      responseMode="query"
      callback={(res) => {
        if (res.error) {
          console.log('Error apple login', res.error);

          switch (res.error.error) {
            case 'popup_closed_by_user':
              props.setErrorMessage(t('error:apple-auth.aborted'));
              break;
            default:
              props.setErrorMessage(t('error:apple-auth.failed'));
              break;
          }
          return;
        }

        props.handleRequest(
          authService.appleLogIn(
            res.authorization.id_token,
            res?.user?.name ?? null
          )
        );
      }}
      render={(renderProps) => (
        <button
          type="button"
          disabled={renderProps.disabled}
          onClick={renderProps.onClick}
          className="apple-button">
          <FaApple
            size={20}
            style={{
              marginBottom: 3,
            }}
          />
          {t(`common:${props.type}-apple`)}
        </button>
      )}
    />
  );
};


================================================
File: /apps/authentification/src/components/GoogleButton.tsx
================================================
import { useGoogleLogin } from '@react-oauth/google';
import authService, { LogInResult } from '../services/auth.service';
import { useTranslation } from 'react-i18next';
import { FcGoogle } from 'react-icons/fc';

type Props = {
  type: 'sign-in' | 'sign-up';
  handleRequest: (apiCall: Promise<LogInResult>) => void;
  setErrorMessage: (message: string) => void;
};

export const GoogleButton = (props: Props) => {
  const { t } = useTranslation(['error', 'common']);

  const googleLogin = useGoogleLogin({
    onSuccess: (res) => {
      if (props.type === 'sign-in') {
        props.handleRequest(authService.googleLogIn(res.access_token));
      } else {
        props.handleRequest(authService.googleRegister(res.access_token));
      }
    },
    onNonOAuthError: () => {
      props.setErrorMessage(t('error:google-auth.aborted'));
    },
    onError: () => {
      props.setErrorMessage(t('error:google-auth.failed'));
    },
  });

  return (
    <button
      type="button"
      className="google-button"
      onClick={() => googleLogin()}>
      <FcGoogle size={20} />
      {t(`common:${props.type}-google`)}
    </button>
  );
};


================================================
File: /apps/authentification/src/components/TranslationHandler.tsx
================================================
// import { useEffect } from 'react';
// import { Outlet, useNavigate, useParams } from 'react-router-dom';
// import { availableLanguages } from '../translation/i18n';

// export const TranslationHandler = () => {
//   const { lang } = useParams();
//   const navigate = useNavigate();
//   console.log('langue', lang);

//   useEffect(() => {
//     if (!lang || !availableLanguages.includes(lang)) navigate('/en');
//   }, [lang, navigate]);

//   return <Outlet />;
// };


================================================
File: /apps/authentification/src/hooks/usei18nNavigate.tsx
================================================
// import { useTranslation } from 'react-i18next';
// import {
//   NavigateFunction,
//   NavigateOptions,
//   To,
//   useNavigate,
// } from 'react-router-dom';

// export const useI18nNavigate = (): NavigateFunction => {
//   const navigate = useNavigate();
//   const { i18n } = useTranslation();

//   const customNavigate = (path: To | number, options?: NavigateOptions) => {
//     if (typeof path === 'string' && path.startsWith('/'))
//       navigate(`/${i18n.language}${path}`, options);
//     else if (typeof path === 'number') {
//       navigate(path);
//     } else navigate(path, options);
//   };

//   return customNavigate;
// };


================================================
File: /apps/authentification/src/pages/ChooseUsage.tsx
================================================
import { useState } from 'react';

import authService from '../services/auth.service';
import { isAxiosError } from 'axios';
import { useTranslation } from 'react-i18next';
import { BsBoxes } from 'react-icons/bs';
import { GiCook } from 'react-icons/gi';
import { Navigate, useLocation } from 'react-router-dom';
import { Lottie } from 'shared-ui';
import { handleAuthentification } from '../utils';

export const ChooseUsage = () => {
  const { t } = useTranslation(['error', 'common']);
  const [loading, setLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');

  const { state } = useLocation();

  const handleChoice = (type: 'supplier' | 'restaurant') => () => {
    if (loading) return;
    setLoading(true);

    authService
      .chooseUsage(type, state.access_token)
      .then(() => {
        handleAuthentification(state.access_token, type);
      })
      .catch((err) => {
        if (isAxiosError(err) && err.response) {
          switch (err.response.status) {
            case 400:
              setErrorMessage(t('error:choose-usage.bad-args'));
              break;
            case 500:
              setErrorMessage(t('error:unknown-error'));
              break;
          }
        }
      })
      .finally(() => setLoading(false));
  };

  if (!state || !state.access_token || state.user.client_type) {
    return <Navigate to={'/'} />;
  }

  return (
    <main className="Auth">
      <div className="image-section">
        <img />
      </div>
      <div className="form-section">
        <h1 className="company-name">peckish</h1>

        <h1 className="title">{t('common:choose-usage.title')}</h1>
        <p className="description">{t('common:choose-usage.description')}</p>
        {errorMessage && <p className="form-error">{errorMessage}</p>}

        <div className="choice-row">
          <div className="choice-card" onClick={handleChoice('supplier')}>
            <BsBoxes className="icon" />
            <p className="title">{t('common:choose-usage.supplier.name')}</p>
            <p className="description">
              {t('common:choose-usage.supplier.description')}
            </p>
          </div>
          <div className="choice-card" onClick={handleChoice('restaurant')}>
            <GiCook className="icon" />
            <p className="title">{t('common:choose-usage.restaurant.name')}</p>
            <p className="description">
              {t('common:choose-usage.restaurant.description')}
            </p>
          </div>
        </div>
      </div>
      {loading && (
        <div className="loading-fullscreen">
          <Lottie width={'150px'} type="loading" />
        </div>
      )}
    </main>
  );
};


================================================
File: /apps/authentification/src/pages/EmailResetPassword.tsx
================================================
import { useState } from 'react';
import { Button, LabeledInput } from 'shared-ui';
import { useForm } from 'react-hook-form';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';
import { useNavigate } from 'react-router-dom';
import { isAxiosError } from 'axios';
import { useTranslation } from 'react-i18next';
import authService from '../services/auth.service';
import { MdAlternateEmail } from 'react-icons/md';

const RequestResetSchema = z.object({
  email: z
    .string()
    .email({ message: 'error:invalid-email' })
    .min(1, { message: 'error:email-required' }),
});

type RequestResetForm = z.infer<typeof RequestResetSchema>;

export const EmailResetPassword = () => {
  const { t } = useTranslation(['error', 'common']);
  const [loading, setLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');
  const navigate = useNavigate();

  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm<RequestResetForm>({
    resolver: zodResolver(RequestResetSchema),
  });

  const handleResetRequest = async (data: RequestResetForm) => {
    setLoading(true);
    try {
      await authService.emailResetPassword(data.email);
      setErrorMessage(t('error:check-email'));

      setTimeout(() => {
        navigate('/sign-in');
      }, 5000);
    } catch (err) {
      if (isAxiosError(err) && err.response) {
        switch (err.response.status) {
          case 400:
            setErrorMessage(t('error:user-not-found'));
            break;
        }
      }
    } finally {
      setLoading(false);
    }
  };

  const onSubmit = handleSubmit((data) => {
    if (isSubmitting) return;
    handleResetRequest(data);
  });

  return (
    <main className="Auth">
      <div className="image-section">
        <img />
      </div>
      <div className="form-section">
        <h1 className="company-name">peckish</h1>
        <h1 className="title">{t('common:request-reset.title')}</h1>
        <p className="description">{t('common:request-reset.description')}</p>
        {errorMessage && <p className="form-error">{errorMessage}</p>}
        <form className="inputs-container" onSubmit={onSubmit}>
          <LabeledInput
            placeholder={t('common:email')}
            type="email"
            autoComplete="email"
            icon={<MdAlternateEmail size={16} />}
            {...register('email')}
            error={errors.email?.message}
          />

          <Button
            type="primary"
            actionType="submit"
            value={t('common:request-reset.request-reset')}
            className="submit"
            loading={loading}
          />
          <Button
            type="secondary"
            actionType="button"
            value={t('common:request-reset.go-back')}
            className="back"
            onClick={() => navigate('/sign-in')}
          />
        </form>
      </div>
    </main>
  );
};


================================================
File: /apps/authentification/src/pages/FromHandler.tsx
================================================
import { useEffect } from 'react';
import { Outlet, useSearchParams } from 'react-router-dom';
import { useFromStore } from '../utils/FromContext';

export const FromHandler = () => {
  const [searchParams] = useSearchParams();
  const { setFrom } = useFromStore();

  useEffect(() => {
    const from = searchParams.get('from');
    if (from) {
      setFrom(from);
      console.log('FROM', searchParams.get('from'));
    }
  }, [searchParams, setFrom]);

  return <Outlet />;
};


================================================
File: /apps/authentification/src/pages/Logout.tsx
================================================
import { Navigate } from 'react-router-dom';
import { userSession } from '@peckishai/user-management';

export const Logout = () => {
  userSession.clear();

  return <Navigate to={'/'} />;
};


================================================
File: /apps/authentification/src/pages/ResetPassword.tsx
================================================
import { useState } from 'react';
import { FaLock } from 'react-icons/fa';
import { Button, LabeledInput } from 'shared-ui';
import { useForm } from 'react-hook-form';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';
import { useLocation, useNavigate } from 'react-router-dom';
import { isAxiosError } from 'axios';
import { useTranslation } from 'react-i18next';
import authService from '../services/auth.service';

const ResetPasswordSchema = z
  .object({
    password: z.string().min(1, { message: 'error:password-required' }),
    confirmPassword: z
      .string()
      .min(1, { message: 'error:confirm-password-required' }),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: 'error:passwords-must-match',
    path: ['confirmPassword'],
  });

type ResetPasswordForm = z.infer<typeof ResetPasswordSchema>;

export const ResetPassword = () => {
  const { t } = useTranslation(['error', 'common']);
  const [loading, setLoading] = useState(false);
  const location = useLocation();
  const navigate = useNavigate();
  const token = new URLSearchParams(location.search).get('token');

  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm<ResetPasswordForm>({
    resolver: zodResolver(ResetPasswordSchema),
  });

  const handlePasswordReset = async (data: ResetPasswordForm) => {
    setLoading(true);
    try {
      await authService.resetPassword(token, data.password);
      navigate('/sign-in');
    } catch (err) {
      if (isAxiosError(err) && err.response) {
        console.log('error', err.response);
      }
    } finally {
      setLoading(false);
    }
  };

  const onSubmit = handleSubmit((data) => {
    if (isSubmitting) return;
    handlePasswordReset(data);
  });

  return (
    <main className="Auth">
      <div className="image-section">
        <img />
      </div>
      <div className="form-section">
        <h1 className="company-name">peckish</h1>

        <h1 className="title">{t('common:reset-password.title')}</h1>
        <p className="description">{t('common:reset-password.description')}</p>

        <form className="inputs-container" onSubmit={onSubmit}>
          <LabeledInput
            placeholder={t('common:password')}
            type="password"
            autoComplete="new-password"
            icon={<FaLock size={16} />}
            {...register('password')}
            error={errors.password?.message}
          />
          <LabeledInput
            placeholder={t('common:confirm-password')}
            type="password"
            autoComplete="new-password"
            icon={<FaLock size={16} />}
            {...register('confirmPassword')}
            error={errors.confirmPassword?.message}
          />

          <Button
            type="primary"
            actionType="submit"
            value={t('common:reset-password')}
            className="submit"
            loading={loading}
          />
        </form>
      </div>
    </main>
  );
};


================================================
File: /apps/authentification/src/pages/SignIn.tsx
================================================
import { useState } from 'react';
import { MdAlternateEmail } from 'react-icons/md';
import { FaLock } from 'react-icons/fa';
import { Button, LabeledInput, Checkbox } from 'shared-ui';
import { useForm } from 'react-hook-form';
import authService, { LogInResult } from '../services/auth.service';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';
import { Link, useNavigate } from 'react-router-dom';
import { isAxiosError } from 'axios';
import { useTranslation } from 'react-i18next';
import { handleAuthentification } from '../utils';
import { GoogleButton } from '../components/GoogleButton';
import { AppleButton } from '../components/AppleButton';

const SignInSchema = z.object({
  email: z
    .string()
    .min(1, { message: 'email-required' })
    .email('error:valid-email'),
  password: z.string().min(1, { message: 'error:password-required' }),
});

type SignInForm = z.infer<typeof SignInSchema>;

export const SignIn = () => {
  const { t } = useTranslation(['error', 'common']);
  const [rememberMe, setRememberMe] = useState(false);
  const [loading, setLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');
  const navigate = useNavigate();

  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm<SignInForm>({
    resolver: zodResolver(SignInSchema),
  });

  const handleLogin = async (apiCall: Promise<LogInResult>) => {
    setLoading(true);

    return apiCall
      .then((res) => {
        console.log('Login success => token ', res.data.access_token);
        if (!res.data.user.client_type) {
          navigate('/choose-usage', {
            state: res.data,
          });
        } else {
          handleAuthentification(
            res.data.access_token,
            res.data.user.client_type
          );
        }
      })
      .catch((err) => {
        if (isAxiosError(err) && err.response) {
          switch (err.response.status) {
            case 404:
              setErrorMessage(t('error:sign-in.account-not-found'));
              break;
            case 401:
              setErrorMessage(t('error:sign-in.bad-credentials'));
              break;
            case 400:
              setErrorMessage(t('error:unknown-error'));
              break;
          }
        }
      })
      .finally(() => setLoading(false));
  };

  const onSubmit = handleSubmit((data) => {
    if (isSubmitting) return;
    return handleLogin(authService.logIn(data.email, data.password));
  });

  return (
    <main className="Auth">
      <div className="image-section">
        <img />
      </div>
      <div className="form-section">
        <h1 className="company-name">peckish</h1>

        <h1 className="title">{t('common:sign-in.title')}</h1>
        <p className="description">{t('common:sign-in.description')}</p>
        {errorMessage && <p className="form-error">{errorMessage}</p>}

        <form className="inputs-container" onSubmit={onSubmit}>
          <LabeledInput
            placeholder={t('common:email')}
            type="text"
            autoComplete="email"
            icon={<MdAlternateEmail size={16} />}
            {...register('email')}
            error={errors.email?.message}
          />
          <LabeledInput
            placeholder={t('common:password')}
            type="password"
            autoComplete="current-password"
            icon={<FaLock size={16} />}
            {...register('password')}
            error={errors.password?.message}
          />
          <div className="remember-me-container">
            <Checkbox
              label={t('common:remember-me')}
              checked={rememberMe}
              onCheck={setRememberMe}
            />
            <div
              className="forget-password-button"
              onClick={() => navigate('/email-reset-password')}>
              {t('common:forgot-password')}
            </div>
          </div>

          <Button
            type="primary"
            actionType="submit"
            value={t('common:sign-in')}
            className="submit"
            loading={loading}
          />

          <div className="or">
            <span>{t('common:or')}</span>
          </div>

          <GoogleButton
            type="sign-in"
            handleRequest={handleLogin}
            setErrorMessage={setErrorMessage}
          />

          <AppleButton
            type="sign-in"
            handleRequest={handleLogin}
            setErrorMessage={setErrorMessage}
          />

          <p className="create-account">
            {t('common:sign-in.create-account')}{' '}
            <Link to={'/sign-up'}>{t('common:sign-up')}</Link>
          </p>
        </form>
      </div>
    </main>
  );
};


================================================
File: /apps/authentification/src/pages/SignUp.tsx
================================================
import { useState } from 'react';
import { MdAlternateEmail } from 'react-icons/md';
import { FaLock, FaUser } from 'react-icons/fa';
import { Button, LabeledInput, Checkbox } from 'shared-ui';
import { useForm } from 'react-hook-form';
import authService, { LogInResult } from '../services/auth.service';
import { z } from 'zod';
import { zodResolver } from '@hookform/resolvers/zod';
import { Link, useNavigate } from 'react-router-dom';
import { isAxiosError } from 'axios';
import { Trans, useTranslation } from 'react-i18next';
import { GoogleButton } from '../components/GoogleButton';
import { AppleButton } from '../components/AppleButton';

const SignUpSchema = z
  .object({
    name: z.string().min(1, { message: 'valid-email' }),
    email: z
      .string()
      .min(1, { message: 'email-required' })
      .email('valid-email'),
    password: z.string().min(8, { message: 'password-length' }),
    // .refine(
    //   (value) => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$/.test(value),
    //   'Password must have 1 number, 1 uppercase letter, and be 8 characters long'
    // ),
    confirmPassword: z
      .string()
      .min(1, { message: 'confirm-password-required' }),
    acceptTos: z.literal<boolean>(true, {
      errorMap: () => ({ message: 'accept-tos' }),
    }),
  })
  .refine((data) => data.password === data.confirmPassword, {
    message: 'password-dont-match',
    path: ['confirmPassword'],
  });

type SignUpForm = z.infer<typeof SignUpSchema>;

export const SignUp = () => {
  const { t } = useTranslation(['common', 'error']);
  const [loading, setLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState('');
  const navigate = useNavigate();

  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm<SignUpForm>({
    resolver: zodResolver(SignUpSchema),
  });

  const handleRegister = (apiCall: Promise<LogInResult>) => {
    setLoading(true);

    return apiCall
      .then((res) => {
        // console.log('Register success token ', res.data.access_token);
        navigate('/choose-usage', {
          state: res.data,
        });
      })
      .catch((err) => {
        if (isAxiosError(err) && err.response) {
          switch (err.response.status) {
            case 409:
              setErrorMessage(t('error:sign-up.already-taken'));
              break;
            case 400:
              setErrorMessage(t('error:unknown-error'));
              break;
          }
        }
      })
      .finally(() => setLoading(false));
  };

  const onSubmit = handleSubmit((data) => {
    if (isSubmitting) return;
    return handleRegister(
      authService.register(data.name, data.email, data.password)
    );
  });

  return (
    <main className="Auth">
      <div className="image-section">
        <img />
      </div>
      <div className="form-section">
        <h1 className="company-name">peckish</h1>

        <h1 className="title">{t('common:sign-up.title')}</h1>
        <p className="description">{t('common:sign-up.description')}</p>
        {errorMessage && <p className="form-error">{errorMessage}</p>}

        <form className="inputs-container" onSubmit={onSubmit}>
          <GoogleButton
            type="sign-up"
            handleRequest={handleRegister}
            setErrorMessage={setErrorMessage}
          />

          <AppleButton
            type="sign-up"
            handleRequest={handleRegister}
            setErrorMessage={setErrorMessage}
          />

          <div className="or">
            <span>{t('common:or')}</span>
          </div>

          <LabeledInput
            placeholder={t('common:name')}
            type="text"
            autoComplete="name"
            icon={<FaUser size={16} />}
            {...register('name')}
            error={errors.name?.message}
          />

          <LabeledInput
            placeholder={t('common:email')}
            type="text"
            autoComplete="email"
            icon={<MdAlternateEmail color="var(--primaryColor)" size={16} />}
            {...register('email')}
            error={errors.email?.message}
          />
          <div className="password-row">
            <LabeledInput
              placeholder={t('common:password')}
              type="password"
              autoComplete="new-password"
              icon={<FaLock size={16} />}
              {...register('password')}
              error={errors.password?.message}
            />
            <LabeledInput
              placeholder={t('common:confirm-password')}
              type="password"
              autoComplete="off"
              icon={<FaLock size={16} />}
              {...register('confirmPassword', {
                required: 'This field is required',
              })}
              error={errors.confirmPassword?.message}
            />
          </div>

          <Checkbox
            label={
              <Trans
                i18nKey="sign-up.tos-checkbox"
                components={{
                  tosLink: (
                    <a
                      href="https://iampeckish.com/terms-conditions"
                      target="_blank"
                      rel="noreferrer"
                    />
                  ),
                  privacyLink: (
                    <a
                      href="https://iampeckish.com/privacy-policy"
                      target="_blank"
                      rel="noreferrer"
                    />
                  ),
                }}
              />
            }
            {...register('acceptTos')}
            error={errors.acceptTos?.message}
          />

          <Button
            type="primary"
            actionType="submit"
            value={t('common:sign-up')}
            className="submit"
            loading={loading}
          />

          <p className="create-account">
            {t('common:sign-up.already-register')}{' '}
            <Link to={'/sign-in'}>{t('common:sign-in')}</Link>
          </p>
        </form>
      </div>
    </main>
  );
};


================================================
File: /apps/authentification/src/pages/TitleRoute.tsx
================================================
import { useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import { Outlet, useLocation } from 'react-router-dom';
import { handleAuthentification } from '../utils';
import { userSession } from '@peckishai/user-management';

export const TitleRoute = () => {
  const { t } = useTranslation(['routes']);
  const { pathname } = useLocation();

  useEffect(() => {
    // Convert path to dot notation (ex :user.profile)
    let path = pathname;
    if (pathname.slice(-1) === '/') {
      path = pathname.slice(0, -1);
    }
    if (pathname.charAt(0) === '/') {
      path = path.substring(1);
    }
    path = path.replaceAll('/', '.');

    // Get possible translation
    const title = t(path as unknown as TemplateStringsArray, {
      defaultValue: '',
    });
    document.title = title !== '' ? `Peckish - ${title}` : 'Peckish';
  }, [t, pathname]);

  // Redirect if already logged in
  // TODO: get clientType to redirect to good app
  const token = userSession.get();

  if (token) handleAuthentification(token, 'restaurant');

  return <Outlet />;
};


================================================
File: /apps/authentification/src/services/auth.service.ts
================================================
import axios from 'axios';
import { GLOBAL_CONFIG } from 'shared-config';
import { User } from '@peckishai/user-management';

const apiClient = axios.create({
  baseURL: GLOBAL_CONFIG.apiUrl + '/auth',
});

type ApiResult<T> = {
  data: T;
  message: string;
};

export type LogInResult = ApiResult<{
  access_token: string;
  user: User;
}>;

const logIn = async (email: string, password: string): Promise<LogInResult> => {
  const res = await apiClient.post<LogInResult>('/sign-in', {
    email,
    password,
  });

  return res.data;
};

const resetPassword = async (
  token: string | null,
  password: string
): Promise<void> => {
  if (!token) throw new Error('Token is required');
  await apiClient.post('/reset-password', {
    token,
    password,
  });
};

const emailResetPassword = async (email: string): Promise<void> => {
  if (!email) throw new Error('email is required');
  await apiClient.post('/forget-password', {
    email,
  });
};

const googleLogIn = async (accessToken: string): Promise<LogInResult> => {
  const res = await apiClient.post<LogInResult>('/google/sign-in', {
    access_token: accessToken,
  });

  return res.data;
};

const register = async (
  name: string,
  // phone: string,
  email: string,
  password: string
): Promise<LogInResult> => {
  const res = await apiClient.post<LogInResult>('/sign-up', {
    email,
    password,
    name,
  });

  return res.data;
};

const googleRegister = async (accessToken: string): Promise<LogInResult> => {
  const res = await apiClient.post<LogInResult>('/google/sign-up', {
    access_token: accessToken,
  });

  return res.data;
};

const chooseUsage = async (
  usageType: 'supplier' | 'restaurant',
  accessToken: string
): Promise<LogInResult> => {
  const res = await apiClient.post<LogInResult>(
    '/usage',
    {
      usage_type: usageType,
    },
    {
      headers: {
        Authorization: `Bearer ${accessToken}`,
      },
    }
  );

  return res.data;
};

const appleLogIn = async (
  identityToken: string,
  name: {
    firstName: string;
    lastName: string;
  } | null
): Promise<LogInResult> => {
  const res = await apiClient.post<LogInResult>('/apple/sign-in', {
    identity_token: identityToken,
    name: name ? `${name.firstName} ${name.lastName}` : null,
  });

  return res.data;
};

export default {
  logIn,
  register,
  googleLogIn,
  googleRegister,
  chooseUsage,
  appleLogIn,
  resetPassword,
  emailResetPassword,
};


================================================
File: /apps/authentification/src/translation/i18n.ts
================================================
import i18next, { addRessources } from 'shared-translation';

import en from './en';
import fr from './fr';

export const resources = {
  fr,
  en,
} as const;

addRessources(resources);

export default i18next;


================================================
File: /apps/authentification/src/translation/i18next.d.ts
================================================
import { resources } from './i18n';
import { TranslationTyping } from 'shared-translation';

declare module 'i18next' {
  interface CustomTypeOptions extends TranslationTyping {
    resources: TranslationTyping['resources'] & (typeof resources)['en'];
  }
}


================================================
File: /apps/authentification/src/translation/en/common.json
================================================
{
  "sign-in.title": "Welcome back!",
  "sign-in.description": "Enter your email and password to log in to Peckish",
  "sign-in.create-account": "Don't have an account ?",

  "reset-password.title":"Reset Your Password",
  "reset-password.description":"Enter your choice password and confirm password",
  
  "request-reset.title":"Need a new password?",
  "request-reset.description":"Please provide your email address and we'll send you instructions on how to change your password.",
  "request-reset.request-reset":"Reset Password",
  "request-reset.go-back":"Go back to Login",
  "request-reset.check-email":"Please check your email",

  "sign-up.title": "Sign Up!",
  "sign-up.description": "Register to start using Peckish",
  "sign-up.already-register": "Already have an account ?",
  "sign-up.tos-checkbox": "Accept <tosLink>Terms and Conditions</tosLink> and <privacyLink>Privacy Policy</privacyLink>",

  "choose-usage.title": "Who are you ?",
  "choose-usage.description": "For what purposes you want to use Peckish.",
  "choose-usage.supplier.name": "Suppplier",
  "choose-usage.supplier.description": "Analyse my market share",
  "choose-usage.restaurant.name": "Restaurant",
  "choose-usage.restaurant.description": "Enhanced stock management",

  "remember-me": "Remember me",
  "forgot-password":"Forgot Password?",
  "sign-in": "Sign In",
  "reset-password":"Confirm",
  "sign-in-google": "Sign In with Google",
  "sign-in-apple": "Continue with Apple",
  "sign-up": "Create an account",
  "sign-up-google": "Sign Up with Google",
  "sign-up-apple": "Sign Up with Apple"
}


================================================
File: /apps/authentification/src/translation/en/error.json
================================================
{
  "email-required": "Email is required",
  "valid-email": "Must be a valid email",
  "password-required": "Password is required",
  "password-length": "Password must be 8 character long",
  "confirm-password-required": "Confirm password is required",
  "password-dont-match": "Passwords don't match",
  "accept-tos": "You must accept the terms & conditions",

  "user-not-found":"User not found",
  "check-email":"Please check your email",
  "unknown-error": "An error occured while sign-in. Please try again",

  "sign-in.account-not-found": "Account not found, please create one first.",
  "sign-in.bad-credentials": "Bad credentials",

  "sign-up.already-taken": "An account with this email already exists.",

  "choose-usage.bad-args": "The choice failed, please try again.",

  "google-auth.aborted": "Google authentification aborted.",
  "google-auth.failed": "Google authentification failed.",

  "apple-auth.aborted": "Apple authentification aborted.",
  "apple-auth.failed": "Apple authentification failed."
}


================================================
File: /apps/authentification/src/translation/en/index.ts
================================================
import common from './common.json';
import error from './error.json';
import routes from './routes.json';

export default {
  common,
  error,
  routes,
};


================================================
File: /apps/authentification/src/translation/en/routes.json
================================================
{
  "sign-in": "Sign In",
  "sign-up": "Register",
  "choose-usage": "Usage"
}


================================================
File: /apps/authentification/src/translation/fr/common.json
================================================
{
  "sign-in.title": "Content de vous revoir!",
  "sign-in.description": "Entrez votre email et votre mot de passe pour vous connecter Ã  Peckish",
  "sign-in.create-account": "Vous n'avez pas de compte ?",

  "reset-password.title":"RÃ©initialisez votre mot de passe",
  "reset-password.description":"Entrez le mot de passe de votre choix et confirmez le mot de passe",

  "sign-up.title": "CrÃ©er un compte",
  "sign-up.description": "Inscrivez-vous pour commencer Ã  utiliser Peckish",
  "sign-up.already-register": "Vous avez dÃ©jÃ  un compte ?",
  "sign-up.tos-checkbox": "Accepter les <tosLink>Conditions GÃ©nÃ©rales d'Utilisation</tosLink> et la <privacyLink>Politique de ConfidentialitÃ©</privacyLink>",

  "request-reset.title":"Besoin d'un nouveau mot de passe ?",
  "request-reset.description":"Veuillez fournir votre adresse e-mail et nous vous enverrons des instructions sur la faÃ§on de modifier votre mot de passe.",
  "request-reset.request-reset":"rÃ©initialiser le mot de passe",
  "request-reset.go-back":"Revenir Ã  la connexion",
  "request-reset.check-email":"Revenir Ã  la connexion",

  "choose-usage.title": "Qui Ãªtes vous ?",
  "choose-usage.description": "Ã quelles fins souhaitez-vous utiliser Peckish.",
  "choose-usage.supplier.name": "Fournisseur",
  "choose-usage.supplier.description": "Analyser mes parts de marchÃ©",
  "choose-usage.restaurant.name": "Restaurant",
  "choose-usage.restaurant.description": "Gestion de stock amÃ©liorÃ©e",

  "remember-me": "Se souvenir de moi",
  "forgot-password":"Mot de passe oubliÃ©?",
  "sign-in": "Se connecter",
  "reset-password":"Confirmer",
  "sign-in-google": "Connexion avec Google",
  "sign-in-apple": "Continuer avec Apple",
  "sign-up": "CrÃ©er un compte",
  "sign-up-google": "CrÃ©er un compte avec Google",
  "sign-up-apple": "CrÃ©er un compte avec Apple"
}


================================================
File: /apps/authentification/src/translation/fr/error.json
================================================
{
  "email-required": "L'adresse e-mail est requise",
  "valid-email": "Doit Ãªtre une adresse e-mail valide",
  "password-required": "Le mot de passe est requis",
  "password-length": "Le mot de passe doit comporter 8 caractÃ¨res",
  "confirm-password-required": "La confirmation du mot de passe est requise",
  "password-dont-match": "Les mots de passe ne correspondent pas",
  "accept-tos": "Vous devez accepter les termes et conditions",

  "user-not-found":"Utilisateur non trouvÃ©",
  "check-email":"Merci de consulter vos emails",
  "unknown-error": "Une erreur inconnue est survenue. Veuillez rÃ©essayer.",

  "sign-in.account-not-found": "Compte introuvable, veuillez en crÃ©er un d'abord.",
  "sign-in.bad-credentials": "Identifiants incorrects",

  "sign-up.already-taken": "Cette adresse mail est dÃ©jÃ  utilisÃ©e.",

  "choose-usage.bad-args": "Le choix Ã  Ã©chouÃ© veuillez rÃ©essayer.",

  "google-auth.aborted": "L'authentification Google a Ã©tÃ© interrompue.",
  "google-auth.failed": "L'authentification Google a Ã©chouÃ©.",

  "apple-auth.aborted": "L'authentification Apple a Ã©tÃ© interrompue.",
  "apple-auth.failed": "L'authentification Apple a Ã©chouÃ©."
}


================================================
File: /apps/authentification/src/translation/fr/index.ts
================================================
import common from './common.json';
import error from './error.json';
import routes from './routes.json';

export default {
  common,
  error,
  routes,
};


================================================
File: /apps/authentification/src/translation/fr/routes.json
================================================
{
  "sign-in": "Connexion",
  "sign-up": "CrÃ©er un compte",
  "choose-usage": "Utilisation"
}


================================================
File: /apps/authentification/src/utils/FromContext.ts
================================================
import { create } from 'zustand';

type FromState = {
  from: string;
  setFrom: (from: string) => void;
};

export const useFromStore = create<FromState>()((set) => ({
  from: '',
  setFrom: (from: string) => set({ from }),
}));


================================================
File: /apps/authentification/src/utils/index.ts
================================================
import { GLOBAL_CONFIG } from 'shared-config';
import { userSession } from '@peckishai/user-management';
import { useFromStore } from './FromContext';

export const handleAuthentification = (
  accessToken: string,
  app: 'supplier' | 'restaurant'
) => {
  userSession.save(accessToken, true);

  const from = useFromStore.getState().from ?? '';

  if (app === 'restaurant')
    window.location.href =
      GLOBAL_CONFIG.restaurantUrl + from + '?token=' + accessToken;
  else
    window.location.href =
      GLOBAL_CONFIG.supplierUrl + from + '?token=' + accessToken;
};


================================================
File: /packages/shared-config/index.ts
================================================
const devConfig = {
  authentificationUrl: 'http://localhost:5123',
  restaurantUrl: 'http://localhost:5124',
  supplierUrl: 'http://localhost:5125',

  cookieDomain: 'localhost',

  apiUrl: 'https://api-gateway-zqjpx7oxsq-ew.a.run.app',
  apiUrlIntegration: 'https://integrations-api-k2w3p2ptza-ew.a.run.app',

  GOOGLE_CLIENT_ID:
    '167544806451-lhqrqpn83tje89en5n73af3tiu3sm11o.apps.googleusercontent.com',
  APPLE_CLIENT_ID: 'com.peckish.web.dev',
};

const stagingConfig = {
  authentificationUrl: 'https://auth-frontend-k2w3p2ptza-ew.a.run.app',
  restaurantUrl: 'https://restaurant-frontend-k2w3p2ptza-ew.a.run.app',
  supplierUrl: 'https://supplier.iampeckish.com',

  cookieDomain: 'run.app',

  apiUrl: 'https://api-gateway-k2w3p2ptza-ew.a.run.app',
  apiUrlIntegration: 'https://integrations-api-k2w3p2ptza-ew.a.run.app',

  GOOGLE_CLIENT_ID:
    '167544806451-lhqrqpn83tje89en5n73af3tiu3sm11o.apps.googleusercontent.com',
  APPLE_CLIENT_ID: 'com.peckish.web.dev',
};

const prodConfig = {
  authentificationUrl: 'https://platform.iampeckish.com',
  restaurantUrl: 'https://restaurant.iampeckish.com',
  supplierUrl: 'https://supplier.iampeckish.com',

  cookieDomain: 'iampeckish.com',

  apiUrl: 'https://api-gateway-zqjpx7oxsq-ew.a.run.app',
  apiUrlIntegration: 'https://integrations-api-zqjpx7oxsq-ew.a.run.app',
  GOOGLE_CLIENT_ID:
    '902125317537-r9ck7q1bi9m01f1ilopjlvi2itrupdut.apps.googleusercontent.com',
  APPLE_CLIENT_ID: 'com.peckish.web',
};

export const GLOBAL_CONFIG =
  import.meta.env.MODE === 'development'
    ? devConfig
    : import.meta.env.VITE_CONFIG_MODE === 'staging'
      ? stagingConfig
      : prodConfig;


================================================
File: /packages/shared-config/package.json
================================================
{
  "name": "shared-config",
  "version": "0.0.0",
  "private": true,
  "license": "MIT",
  "files": [
    "index.ts"
  ],
  "main": "index.ts",
  "dependencies": {}
}


================================================
File: /packages/shared-translation/index.ts
================================================
import i18next, { Resource } from 'i18next';
import LanguageDetector from 'i18next-browser-languagedetector';
import { initReactI18next } from 'react-i18next';

import dayjs from 'dayjs';
import 'dayjs/locale/fr';
import localeData from 'dayjs/plugin/localeData';
import updateLocale from 'dayjs/plugin/updateLocale';

import en from './translations/en';
import fr from './translations/fr';

type Languages = 'fr' | 'en';

export const defaultNS = 'common';
export const resources = {
  fr,
  en,
} as const;

// Configure dayjs
dayjs.extend(localeData);
dayjs.extend(updateLocale);

// Lazy loading of dayjs locales
const dayjsLocales = {
  fr: () => import('dayjs/locale/fr'),
  en: () => import('dayjs/locale/en'),
};

dayjs.updateLocale('fr', {
  calendar: {
    sameDay: "[Aujourd'hui Ã ] H:mm",
    nextDay: '[Demain Ã ] H:mm',
    nextWeek: 'dddd [prochain]',
    lastDay: '[Hier Ã ] H:mm',
    lastWeek: 'dddd [dernier]',
    sameElse: 'DD/MM/YYYY',
  },
});

i18next.on('languageChanged', function (lng: Languages) {
  // Update dayjs locale when i18next language change
  if (!dayjsLocales[lng]) return;

  dayjsLocales[lng]().then(() => {
    dayjs.locale(lng);
  });
});

// Detect language using navigator. First from localStorage, then from querystring, otherwise from navigator
// Convert the detected language to the first part of the language (e.g. 'fr-FR' => 'fr')
// Local storage is used to store the language if the user has changed it (not yet implemented)
// You can use the querystring to force the language (e.g. ?lng=fr) for testing purposes
const languageDetector = new LanguageDetector(null, {
  order: ['localStorage', 'querystring', 'navigator'],
  lookupQuerystring: 'lng',
  caches: [], // don't cache auto
  convertDetectedLanguage: (lng) => lng.split('-')[0],
});

i18next
  .use(initReactI18next)
  .use(languageDetector)
  .init({
    debug: process.env.NODE_ENV !== 'production',
    // lng: 'fr',
    fallbackLng: 'en',
    ns: ['common', 'language'],
    defaultNS,
    resources,
    interpolation: {
      escapeValue: false,
    },
    keySeparator: '.',
  });

export default i18next;

/**
 * This function is used to add resources to i18next. It add the new namespaces for each language provided.
 * The namespaces are merged if they already exist.
 * @param resources The resources to add. It must be an object that contains the languages as keys of the first level, and the namespaces as keys of the second level (like the resources object in i18next)
 */
export const addRessources = (resources: Resource) => {
  Object.keys(resources).forEach((language) => {
    // For each namespace in resources[language]
    const lng = language as Languages;
    Object.keys(resources[lng]).forEach((namespace) => {
      // Add the resource bundle for the current lng and namespace
      i18next.addResourceBundle(lng, namespace, resources[lng][namespace]);
    });
  });
};

/**
 * This type is used to add shared resources to i18next module declaration.
 *
 * Here is an example of how to declare the module overloading (it allow the the type completion of the translations key):
 * @example
 *  declare module 'i18next' {
 *    interface CustomTypeOptions extends TranslationTyping {
 *      resources: TranslationTyping['resources'] & (typeof resources)['en'];
 *    }
 *  }
 *
 * @description with "resources" variable that is the resources object of the app
 */
export interface TranslationTyping {
  defaultNS: typeof defaultNS;
  resources: (typeof resources)['en'];
}


================================================
File: /packages/shared-translation/package.json
================================================
{
  "name": "shared-translation",
  "version": "1.0.0",
  "main": "./index.ts",
  "license": "MIT",
  "devDependencies": {
    "eslint": "^8.46.0",
    "i18next": "^23.4.4",
    "react-i18next": "^13.1.2",
    "tsconfig": "*",
    "typescript": "^5.0.2"
  }
}


================================================
File: /packages/shared-translation/translations/language.ts
================================================
export default {
  french: 'FranÃ§ais',
  english: 'English',
};


================================================
File: /packages/shared-translation/translations/en/common.json
================================================
{
  "name": "Name",
  "password": "Password",
  "confirm-password": "Confirm password",
  "or": "or",

  "quantity": "Quantity",
  "conversion_factor": "Conversion Factor",
  "receivedQty": "Received Qty",
  "price": "Price",
  "cost": "Cost",
  "totalCost": "Total cost",
  "unitCost": "Unit cost",
  "margin": "Margin",
  "category": "Category",
  "portion_count": "Portion Count",
  "actions": "Actions",
  "availability": "Availability",
  "unit": "Unit",
  "selectUnit": "Unit",
  "status": "Status",
  "detail": "Detail",
  "customer": "Customer",
  "predicted": "Predicted",
  "onGoing": "On going",
  "preparing": "Preparing",
  "shipped": "Shipped",
  "viewDetail": "View detail",
  "services": "Services",
  "waste": "Waste",

  "edit": "Edit",
  "delete": "Delete",
  "validate": "Validate",
  "ok": "Ok",
  "confirm": "Confirm",
  "save": "Save",
  "apply": "Apply",
  "cancel": "Cancel",
  "add": "Add",
  "select": "Select",
  "selectAll": "Select all",
  "search": "Search",
  "filter": "Filter",
  "filterBy": "Filter by",
  "upload": "Upload",
  "download": "Download",
  "import": "Import",
  "export": "Export",
  "refresh": "Refresh",
  "transfer": "Transfer",
  "notifications": "Notifications",
  "logout": "Log out",
  "preview": "Preview",
  "next": "Next",
  "finish": "Finish",
  "unknown": "unknown",
  "date": "Date",
  "remove": "Remove",
  "reset": "Reset",
  "email": "Email",
  "phone": "Phone",

  "warning.delete": "Are you sure you want to delete it ?",
  "warning.deleteSelection.msg": "Are you sure you want to remove all {{count}} ingredients ?",
  "warning.deleteSelection.subMsg": "Selected ingredients present in recipes will also be deleted.",
  "warning.edit": "Are you sure you want to edit it ?",
  "error.trigger": "An error has occurred",
  "error.tryLater": "Please try later",

  "orders.supplier": "Supplier",
  "orders.orderDate": "Order date",
  "orders.orderNumber": "Order Number",
  "orders.deliveryDate": "Delivery date",
  "orders.receivedQtys": "Received Quantity",
  "orders.addIngredient": "Add Ingredient",
  "orders.status": "Status",
  "orders.statusStates": {
    "pending": "Pending",
    "delivered": "Delivered",
    "cancelled": "Cancelled"
  }
}


================================================
File: /packages/shared-translation/translations/en/error.json
================================================
{
  "required": "This field is required",
  "positive-number": "This field must be a positive number"
}


================================================
File: /packages/shared-translation/translations/en/index.ts
================================================
import common from './common.json';
import error from './error.json';
import language from '../language';
import validation from './validation.json';
import onboarding from './onboarding.json';
import placeOrder from './placeOrder.json';

export default {
  common,
  error,
  language,
  validation,
  onboarding,
  placeOrder,
};


================================================
File: /packages/shared-translation/translations/en/onboarding.json
================================================
{
  "onboarding.msg": "Select a software that you want to integrate to Peckish !",
  "onboarding.userNotOnboarded.msg": "Onboard your restaurant in Integrations menu to use this feature.",
  "onboarding.modal.title": "New integration",
  "restaurant.modal.title":"Connect Your Restaurant",
  "restaurant.modal.description":"Map with existing or Create New by Add to Peckish",
  "onboarding.modal.description.oauth": "Integrate with {{name}}",
  "onboarding.modal.description.oauth.message": "Click on the button below to connect Peckish with {{name}}",
  "onboarding.modal.description.login": "Please input your credentials for {{name}}",
  "onboarding.searchPlaceholder": "Search software",
  "onboarding.recoverData": "Data recovery in progress...",
  "onboarding.wait": "This may take some time.",
  "onboarding.success": "Successful data recovery !",
  "onboarding.error": "Data recovery failed."
}


================================================
File: /packages/shared-translation/translations/en/placeOrder.json
================================================
{
  "placeOrder": {
    "title": "Place order",
    "message": "Add ingredients with a quantity to the basket and place an order."
  },
  "draftOrder": {
    "title": "Draft order",
    "message": "Add ingredients with a quantity to the basket and draft an order."
  },
  "unit": "Unit",
  "quantity": "Quantity",
  "price": "Price",
  "orderGeneration": "Order generation",
  "orderGeneration.message": "This will pre-fill for you, based on your saved invoices, ingredients you probably need.",

  "filterBySupplier": "Filter by supplier",
  "filterByIngredient": "Filter by ingredient",
  "ingredientName": "Ingredient Name",
  "basket": "Basket",
  "email": "Do you want to send email to the suppliers?",
  "emailText": "Check this box to send email",
  "addToBasket": "Add to basket",
  "shoppingBasket": "Shopping basket",
  "basketIsEmpty": "Basket is empty.",
  "total": "Total",
  "orderProcessing": "Order processing...",
  "orderSubmited": "Order successfully submitted.",

  "basket.removeItem.message": "Do you want to remove this ingredient ?",

  "addedNote": "Additional note",
  "addIngredient": "Add Ingredient"
}


================================================
File: /packages/shared-translation/translations/en/validation.json
================================================
{
  "field.error.required": "This field is required.",
  "field.error.name": "Name field is required.",
  "field.error.userName": "User name field is required.",
  "field.error.password": "Password field is required.",
  "field.error.doesntExist": "Select existing ingredient.",
  "field.error.quantity": "Quantity field is required.",
  "field.error.quantityNegative": "Quantity must be greater than or equal to 0."
}


================================================
File: /packages/shared-translation/translations/fr/common.json
================================================
{
  "name": "Nom",
  "password": "Mot de passe",
  "confirm-password": "Confirmation",
  "or": "ou",

  "quantity": "QuantitÃ©",
  "conversion_factor": "Facteur de conversion",
  "receivedQty": "QuantitÃ© reÃ§ue",
  "price": "Prix",
  "cost": "CoÃ»t",
  "totalCost": "CoÃ»t total",
  "unitCost": "CoÃ»t unitaire",
  "margin": "Marge",
  "category": "CatÃ©gorie",
  "actions": "Actions",
  "availability": "DisponibilitÃ©",
  "unit": "UnitÃ©",
  "unitPrice": "prix unitaire",
  "status": "Statut",
  "detail": "DÃ©tail",
  "customer": "Client",
  "predicted": "PrÃ©vue",
  "onGoing": "CommandÃ©",
  "preparing": "En prÃ©paration",
  "shipped": "ExpÃ©diÃ©e",
  "viewDetail": "Voir dÃ©tail",
  "services": "Services",

  "edit": "Modifier",
  "delete": "Supprimer",
  "validate": "Valider",
  "save": "Sauvegarder",
  "ok": "Ok",
  "confirm": "Confirmer",
  "apply": "Appliquer",
  "cancel": "Annuler",
  "add": "Ajouter",
  "select": "SÃ©lectionner",
  "selectAll": "Tout sÃ©lectionner",
  "search": "Rechercher",
  "filter": "Filtrer",
  "filterBy": "Filter par",
  "upload": "Charger",
  "download": "TÃ©lÃ©charger",
  "import": "Importer",
  "export": "Exporter",
  "refresh": "Recharger",
  "notifications": "Notifications",
  "logout": "DÃ©connexion",
  "preview": "PrÃ©visualiser",
  "next": "Suivant",
  "finish": "TerminÃ©",
  "unknown": "inconnu",
  "date": "Date",
  "remove": "Supprimer",
  "reset": "RÃ©initialiser",
  "email": "Email",
  "phone": "TÃ©lÃ©phone",

  "warning.delete": "Ãtes-vous sure de vouloir supprimer cela ?",
  "warning.deleteSelection.msg": "Ãtes-vous sure de vouloir supprimer les {{count}} ingrÃ©dients sÃ©lectionnÃ©s ?",
  "warning.deleteSelection.subMsg": "Les ingrÃ©dients sÃ©lectionnÃ©s prÃ©sents dans les recettes seront Ã©galement supprimÃ©s.",
  "warning.edit": "Ãtes-vous sure de vouloir modifier cela ?",
  "error.trigger": "Une erreur est survenue",
  "error.tryLater": "Veuillez essayer plus tard",

  "orders.supplier": "Fournisseur",
  "orders.orderDate": "Date de commande",
  "orders.orderNumber": "NumÃ©ro de commande",
  "orders.deliveryDate": "Date de livraison",
  "orders.receivedQtys": "QuantitÃ© reÃ§ue",
  "orders.status": "Statut",
  "orders.statusStates": {
    "pending": "En attente",
    "delivered": "LivrÃ©e",
    "cancelled": "AnnulÃ©e"
  }
}


================================================
File: /packages/shared-translation/translations/fr/error.json
================================================
{
  "required": "Ce champ est obligatoire",
  "positive-number": "Ce champ doit Ãªtre un nombre positif"
}


================================================
File: /packages/shared-translation/translations/fr/index.ts
================================================
import common from './common.json';
import error from './error.json';
import language from '../language';
import validation from './validation.json';
import onboarding from './onboarding.json';
import placeOrder from './placeOrder.json';

export default {
  common,
  language,
  error,
  validation,
  onboarding,
  placeOrder,
};


================================================
File: /packages/shared-translation/translations/fr/onboarding.json
================================================
{
  "onboarding.msg": "SÃ©lÃ©ctionnez un systÃ¨me que vous souhaitez intÃ©grer Ã  Peckish !",
  "onboarding.userNotOnboarded.msg": "IntÃ©grez votre restaurant dans le menu IntÃ©grations pour utiliser cette fonctionnalitÃ©.",
  "onboarding.modal.title": "Nouvelle intÃ©gration",
  "onboarding.modal.description.oauth": "IntÃ©grer {{name}}",
  "restaurant.modal.title":"Connectez votre restaurant",
  "restaurant.modal.description":"Cartographier avec l'existant ou crÃ©er un nouveau en ajoutant Ã  Peckish",
  "onboarding.modal.description.oauth.message": "Cliquez sur le bouton ci-dessous pour vous connecter Ã  votre compte {{name}}",
  "onboarding.modal.description.login": "Veuillez fournir vos identifiants {{name}}",
  "onboarding.searchPlaceholder": "Rechercher un systÃ¨me",
  "onboarding.recoverData": "RÃ©cupÃ©ration des donnÃ©es en cours...",
  "onboarding.wait": "Cette action peut prendre du temps.",
  "onboarding.success": "RÃ©cupÃ©ration des donnÃ©es avec succÃ¨s !",
  "onboarding.error": "Echec de la rÃ©cupÃ©ration des donnÃ©es."
}


================================================
File: /packages/shared-translation/translations/fr/placeOrder.json
================================================
{
  "placeOrder": {
    "title": "Commander",
    "message": "Ajoutez des ingrÃ©dients avec une quantitÃ© dans le panier et passez une commande."
  },
  "orderGeneration": "GÃ©nÃ©rer une commande",
  "orderGeneration.message": "Cela permettra de prÃ©-remplir pour vous, sur la base de vos factures sauvegardÃ©es, les ingrÃ©dients dont vous avez probablement besoin.",

  "filterBySupplier": "Filtrer par fournisseur",
  "filterByIngredient": "Filter par ingrÃ©dient",

  "basket": "Panier",
  "email":"Voulez-vous envoyer un e-mail aux fournisseursÂ ?",
  "email-text":"Cochez cette case pour envoyer un email",
  "addToBasket": "Ajouter au panier",
  "shoppingBasket": "Panier d'achats",
  "basketIsEmpty": "Le panier est vide.",
  "total": "Total",
  "orderProcessing": "Traitement de la commande...",
  "orderSubmited": "La commande a Ã©tÃ© soumise avec succÃ¨s.",

  "basket.removeItem.message": "Voulez-vous retirer cet ingrÃ©dient ?",

  "addedNote": "Note ajoutÃ©e"
}


================================================
File: /packages/shared-translation/translations/fr/validation.json
================================================
{
  "field.error.required": "Le champ est requis.",
  "field.error.name": "Le champ nom est requis.",
  "field.error.userName": "Le champ nom d'utilisateur est requis.",
  "field.error.password": "Le champ mot de passe est requis.",
  "field.error.doesntExist": "SÃ©lectionner un ingrÃ©dient existant.",
  "field.error.quantity": "Le champ quantitÃ© est requis.",
  "field.error.quantityNegative": "La quantitÃ© doit Ãªtre suppÃ©rieure ou Ã©gale Ã  0."
}


================================================
File: /packages/shared-ui/index.ts
================================================
// components
import Sidebar from './components/layout/Sidebar/Sidebar';
import SidebarItem from './components/layout/Sidebar/SidebarItem';
import SidebarSeparator from './components/layout/Sidebar/SidebarSeparator';
import Navbar from './components/layout/Navbar/Navbar';
import Table from './components/Table/Table';
import Tabs from './components/Tabs/Tabs';
import Dropdown from './components/Dropdown/Dropdown';
import Lottie from './components/Lottie/Lottie';
import DialogBox from './components/layout/DialogBox/DialogBox';
import Input from './components/form/Input/Input';
import Button from './components/Button/Button';
import IconButton from './components/IconButton/IconButton';
import UploadValidation from './components/layout/UploadValidation/UploadValidation';
import RestaurantCard from './components/RestaurantCard/RestaurantCard';
import ProfilePicture from './components/ProfilePicture/ProfilePicture';
import EmptyPage from './components/layout/EmptyPage/EmptyPage';
import Popup from './components/layout/Popup/Popup';
import Select from './components/form/Select/Select';
import { LabeledInput } from './components/form/LabeledInput';
import { Checkbox } from './components/form/Checkbox';
import PhoneNumberInput from './components/form/PhoneNumberInput/PhoneNumberInput';
import { Loading, LoadingAbsolute } from './components/Loading/Loading';
import SidePanel from './components/SidePanel/SidePanel';
import { CollapsibleMenu } from './components/CollapsibleMenu/CollapsibleMenu';
import { OrderDetail } from './components/OrderDetail/OrderDetail';
import Switch from './components/Switch/Switch';
import BurgerMenu from './components/layout/BurgerMenu/BurgerMenu';
import DatePicker from './components/form/DatePicker/DatePicker';
import './styles/common.css';

export * from './hooks/index';
export {
  Sidebar,
  SidebarItem,
  SidebarSeparator,
  Navbar,
  Table,
  Tabs,
  Dropdown,
  Lottie,
  DialogBox,
  Input,
  Button,
  IconButton,
  UploadValidation,
  RestaurantCard,
  ProfilePicture,
  EmptyPage,
  Popup,
  Select,
  LabeledInput,
  Checkbox,
  PhoneNumberInput,
  Loading,
  LoadingAbsolute,
  SidePanel,
  CollapsibleMenu,
  OrderDetail,
  Switch,
  BurgerMenu,
  DatePicker,
};


================================================
File: /packages/shared-ui/package.json
================================================
{
  "name": "shared-ui",
  "version": "0.0.0",
  "main": "./index.ts",
  "types": "./index.ts",
  "license": "MIT",
  "scripts": {
    "lint": "eslint \"**/*.ts\"",
    "depcheck": "depcheck"
  },
  "devDependencies": {
    "eslint": "^8.46.0",
    "tsconfig": "*",
    "typescript": "^5.0.2"
  },
  "dependencies": {
    "classnames": "^2.3.2",
    "i18next": "^23.4.4",
    "react": "^18.2.0",
    "react-datepicker": "^7.4.0",
    "react-i18next": "^13.1.2",
    "react-lottie": "^1.2.3",
    "react-phone-number-input": "^3.3.6",
    "react-router-dom": "^6.15.0",
    "react-select": "^5.7.4",
    "react-tooltip": "^5.21.1"
  }
}


================================================
File: /packages/shared-ui/tsconfig.json
================================================
{
  "extends": "tsconfig/vite.json"
}


================================================
File: /packages/shared-ui/vite-env.d.ts
================================================
/// <reference types="vite/client" />


================================================
File: /packages/shared-ui/asset/lotties/burger.json
================================================
{"nm":"Menu_1","ddd":0,"h":400,"w":400,"meta":{"g":"@lottiefiles/toolkit-js 0.26.1"},"layers":[{"ty":4,"nm":"#burger_1","sr":1,"st":0,"op":75,"ip":0,"hd":false,"ln":"burger_1","ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[200,199.875,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"cl":"barre_1","hd":false,"mn":"ADBE Vector Group","nm":".barre_1","ix":1,"cix":2,"np":2,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"TracÃ© rectangulaire 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":140,"ix":4},"s":{"a":0,"k":[220,20],"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fond 1","c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":1,"k":[{"o":{"x":0.463,"y":0},"i":{"x":0.076,"y":1},"s":[0,-75],"t":5,"ti":[0,-8.527],"to":[0,1.306]},{"h":1,"s":[0,0],"t":30},{"o":{"x":0.924,"y":0},"i":{"x":0.537,"y":1},"s":[0,0],"t":45,"ti":[0,1.306],"to":[0,-8.527]},{"s":[0,-75],"t":70}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.463,"y":0},"i":{"x":0.076,"y":1},"s":[0],"t":5},{"h":1,"s":[45],"t":30},{"o":{"x":0.924,"y":0},"i":{"x":0.537,"y":1},"s":[45],"t":45},{"s":[0],"t":70}],"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1},{"ty":4,"nm":"#burger_2","sr":1,"st":0,"op":75,"ip":0,"hd":false,"ln":"burger_2","ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[200,199.875,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"cl":"barre_2","hd":false,"mn":"ADBE Vector Group","nm":".barre_2","ix":1,"cix":2,"np":2,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"TracÃ© rectangulaire 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":84,"ix":4},"s":{"a":0,"k":[220,20],"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fond 1","c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":0.699,"y":0},"i":{"x":0.183,"y":1},"s":[100,100],"t":5},{"h":1,"s":[0,100],"t":30},{"o":{"x":0.817,"y":0},"i":{"x":0.301,"y":1},"s":[0,100],"t":45},{"s":[100,100],"t":70}],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":1,"k":[{"o":{"x":0.699,"y":0.699},"i":{"x":0.183,"y":0.183},"s":[0,0],"t":5,"ti":[0,0],"to":[0,0]},{"h":1,"s":[0,0],"t":30},{"o":{"x":0.817,"y":0.817},"i":{"x":0.301,"y":0.301},"s":[0,0],"t":45,"ti":[0,0],"to":[0,0]},{"s":[0,0],"t":70}],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2},{"ty":4,"nm":"#burger_3","sr":1,"st":0,"op":75,"ip":0,"hd":false,"ln":"burger_3","ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[200,199.875,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"cl":"barre_3","hd":false,"mn":"ADBE Vector Group","nm":".barre_3","ix":1,"cix":2,"np":2,"it":[{"ty":"rc","bm":0,"hd":false,"mn":"ADBE Vector Shape - Rect","nm":"TracÃ© rectangulaire 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":27,"ix":4},"s":{"a":0,"k":[220,20],"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Fond 1","c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":1,"k":[{"o":{"x":0.463,"y":0},"i":{"x":0.076,"y":1},"s":[0,75],"t":5,"ti":[0,8.527],"to":[0,-1.306]},{"h":1,"s":[0,0],"t":30},{"o":{"x":0.924,"y":0},"i":{"x":0.537,"y":1},"s":[0,0],"t":45,"ti":[0,-1.306],"to":[0,8.527]},{"s":[0,75],"t":70}],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.463,"y":0},"i":{"x":0.076,"y":1},"s":[0],"t":5},{"h":1,"s":[-45],"t":30},{"o":{"x":0.924,"y":0},"i":{"x":0.537,"y":1},"s":[-45],"t":45},{"s":[0],"t":70}],"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":3}],"v":"5.5.2","fr":25,"op":75,"ip":0,"assets":[]}

================================================
File: /packages/shared-ui/asset/lotties/empty.json
================================================
{"v":"5.5.9","fr":60,"ip":0,"op":295,"w":426,"h":290,"nm":"search_empty","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"mouth","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":44,"s":[211,145,0],"to":[0,0.667,0],"ti":[0,-0.667,0]},{"t":69,"s":[211,149,0]}],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":44,"s":[100,100,100]},{"t":68,"s":[105,105,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.5,0.25],[-1.715,0.372]],"o":[[-13.025,-6.512],[7.5,-1.625]],"v":[[-10,12.25],[-31.75,12.625]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.454901960784,0.513725490196,0.580392156863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"æ±","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":51,"s":[0]},{"t":95,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":51,"s":[248,95.252,0],"to":[0,1.5,0],"ti":[0,-1.5,0]},{"t":94,"s":[248,104.252,0]}],"ix":2},"a":{"a":0,"k":[0,-19.333,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":51,"s":[40,40,100]},{"t":95,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-9.94,0],[0,7.27],[0,0],[0,-7.27]],"o":[[9.94,0],[0,-7.27],[0,0],[0,7.27]],"v":[[0,19],[18,5.84],[0,-19],[-18,5.84]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"gf","o":{"a":0,"k":100,"ix":10},"r":1,"bm":0,"g":{"p":3,"k":{"a":0,"k":[0,0.69,0.976,1,0.5,0.714,0.954,0.997,1,0.738,0.932,0.994],"ix":9}},"s":{"a":0,"k":[0.019,-9.236],"ix":5},"e":{"a":0,"k":[10.208,19],"ix":6},"t":1,"nm":"Gradient Fill 1","mn":"ADBE Vector Graphic - G-Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ±","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":569,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"eye","parent":1,"sr":1,"ks":{"o":{"a":0,"k":92,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-7.064,-11.347,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[100,20,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":6,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":9,"s":[100,20,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":12,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":50,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":53,"s":[100,20,100]},{"t":56,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[8.466,16.135],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.3411764705882353,0.3411764705882353,0.3411764705882353,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"eye","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":569,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"eye","parent":1,"sr":1,"ks":{"o":{"a":0,"k":92,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-33.767,-11.347,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[100,20,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":6,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":9,"s":[100,20,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":12,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":50,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":53,"s":[100,20,100]},{"t":56,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[8.466,16.135],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.3411764705882353,0.3411764705882353,0.3411764705882353,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"eye","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":569,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":0,"nm":"magnifier","refId":"comp_1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213,145,0],"ix":2},"a":{"a":0,"k":[213,145,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":426,"h":290,"ip":0,"op":569,"st":0,"bm":0}]},{"id":"comp_1","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213,145,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"st","c":{"a":0,"k":[0.435294117647,0.498039215686,0.564705882353,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"æ©¢åå½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":-5,"ix":10},"p":{"a":0,"k":[190.106,142.222,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[99.994,100.091],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":-40,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ©¢åå½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"æ©¢åå½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":-5,"ix":10},"p":{"a":0,"k":[192.013,142.223,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-26.81,22.62],[22.49,26.96],[26.8,-22.62],[-22.5,-26.95]],"o":[[26.81,-22.62],[-22.49,-26.96],[-26.81,22.62],[22.49,26.96]],"v":[[40.727,48.812],[48.537,-40.958],[-40.723,-48.808],[-48.533,40.952]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8588235294117647,0.8588235294117647,0.8588235294117647,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ©¢åå½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"ç©å½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":-5,"ix":10},"p":{"a":0,"k":[268.024,226.941,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[42.094,74.507],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":10,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"fl","c":{"a":0,"k":[0.5882352941176471,0.5882352941176471,0.5882352941176471,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":-40,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"ç©å½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"ç©å½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":-5,"ix":10},"p":{"a":0,"k":[238.933,197.25,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[24.446,44.702],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"fl","c":{"a":0,"k":[0.847000002861,0.847000002861,0.847000002861,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":-40,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"ç©å½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0}]},{"id":"comp_2","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"åä½µå½¢ç","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":60,"s":[0]},{"t":265,"s":[360]}],"ix":10},"p":{"a":0,"k":[208,27,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[16,2],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[2,18],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 2","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.796078026295,0.835294008255,0.843137025833,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"åä½µå½¢ç","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"åä½µå½¢ç","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":5,"s":[0]},{"t":358,"s":[360]}],"ix":10},"p":{"a":0,"k":[418,107,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[16,2],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[2,18],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 2","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.796078026295,0.835294008255,0.843137025833,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"åä½µå½¢ç","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"åä½µå½¢ç","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":5,"s":[0]},{"t":281,"s":[360]}],"ix":10},"p":{"a":0,"k":[31,196,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"rc","d":1,"s":{"a":0,"k":[16,2],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[2,18],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4},"nm":"Rectangle Path 2","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"mm","mm":2,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.796078026295,0.835294008255,0.843137025833,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"åä½µå½¢ç","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"æ©¢åå½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":281,"s":[360]}],"ix":10},"p":{"a":0,"k":[70,33,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[24,24],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.701960980892,0.756862998009,0.776471018791,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ©¢åå½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0}]},{"id":"comp_3","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"æ©¢åå½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[306,9,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[16,16],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[0.701960980892,0.756862998009,0.776471018791,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ©¢åå½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"æ©¢åå½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[376,179,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[16,16],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.701960980892,0.768626987934,0.776471018791,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ©¢åå½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"æ©¢åå½¢","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[8,115,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[16,16],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.701960980892,0.768626987934,0.776471018791,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"æ©¢åå½¢","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":3600,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"shadow","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[191,145,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[70,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":30,"s":[50,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":60,"s":[70,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":90,"s":[50,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":120,"s":[70,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":150,"s":[50,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":180,"s":[70,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":210,"s":[50,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":240,"s":[70,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":270,"s":[50,100,100]},{"t":295,"s":[70,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[56.697,6.631],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.848757874732,0.861812935623,0.876608455882,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-9.651,124.815],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":300,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":0,"nm":"main","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[213,145,0],"to":[0,0.833,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[213,150,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":60,"s":[213,145,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":90,"s":[213,150,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":120,"s":[213,145,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":150,"s":[213,150,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":180,"s":[213,145,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":210,"s":[213,150,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":240,"s":[213,145,0],"to":[0,0,0],"ti":[0,-0.833,0]},{"t":270,"s":[213,150,0]}],"ix":2},"a":{"a":0,"k":[213,145,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":426,"h":290,"ip":0,"op":3600,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":0,"nm":"decoration1","refId":"comp_2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.981],"y":[1.128]},"o":{"x":[0.39],"y":[0.019]},"t":8,"s":[0]},{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0]},"t":40,"s":[100]},{"i":{"x":[0.833],"y":[1]},"o":{"x":[0.167],"y":[0]},"t":72,"s":[80]},{"t":73,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[213,289,0],"ix":2},"a":{"a":0,"k":[213,289,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.667],"y":[0.866,0.866,1]},"o":{"x":[0.37,0.37,0.333],"y":[-0.029,-0.029,0]},"t":0,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":40,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0,0,0]},"t":72,"s":[80,80,100]},{"t":133,"s":[90,90,100]}],"ix":6}},"ao":0,"w":426,"h":290,"ip":0,"op":569,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":0,"nm":"decoratio2","refId":"comp_3","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":41,"s":[100]},{"t":72,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[211,291,0],"ix":2},"a":{"a":0,"k":[211,291,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":43,"s":[99.442,99.442,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":72,"s":[84.442,84.442,100]},{"t":133,"s":[90,90,100]}],"ix":6}},"ao":0,"w":426,"h":290,"ip":0,"op":569,"st":0,"bm":0}],"markers":[{"tm":180,"cm":"1","dr":0},{"tm":3600,"cm":"2","dr":0}]}

================================================
File: /packages/shared-ui/asset/lotties/error.json
================================================
{"v":"5.7.11","fr":30,"ip":0,"op":60,"w":512,"h":512,"nm":"Bouncy Fail","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"X line 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":90,"ix":10},"p":{"a":0,"k":[256,256,0],"ix":2,"l":2},"a":{"a":0,"k":[41,-3,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[112,-74],[-30,68]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":40,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8862745098039215,0.3568627450980392,0.3568627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":26,"s":[100]},{"t":40,"s":[0]}],"ix":1},"e":{"a":0,"k":100,"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":26,"op":60,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"X line 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[256,256,0],"ix":2,"l":2},"a":{"a":0,"k":[41,-3,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0]],"o":[[0,0],[0,0]],"v":[[112,-74],[-30,68]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":40,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8862745098039215,0.3568627450980392,0.3568627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1},"e":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":26,"s":[0]},{"t":40,"s":[100]}],"ix":2},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":26,"op":60,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Circle 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11,"x":"var $bm_rt;\nvar opacityInertialBounce, opacityBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\nopacityInertialBounce = effect('Bounce & Drop - ukramedia.com')(44);\nopacityBounceBack = effect('Bounce & Drop - ukramedia.com')(45);\ntry {\n    if (opacityInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(47);\n                freq = effect('Bounce & Drop - ukramedia.com')(48);\n                decay = effect('Bounce & Drop - ukramedia.com')(49);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (opacityBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(52);\n            g = effect('Bounce & Drop - ukramedia.com')(53);\n            nMax = effect('Bounce & Drop - ukramedia.com')(54);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar rotationInertialBounce, rotationBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\nrotationInertialBounce = effect('Bounce & Drop - ukramedia.com')(30);\nrotationBounceBack = effect('Bounce & Drop - ukramedia.com')(31);\ntry {\n    if (rotationInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(33);\n                freq = effect('Bounce & Drop - ukramedia.com')(34);\n                decay = effect('Bounce & Drop - ukramedia.com')(35);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (rotationBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(38);\n            g = effect('Bounce & Drop - ukramedia.com')(39);\n            nMax = effect('Bounce & Drop - ukramedia.com')(40);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"},"p":{"a":0,"k":[256,256,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar positionInertialBounce, positionBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\npositionInertialBounce = effect('Bounce & Drop - ukramedia.com')(2);\npositionBounceBack = effect('Bounce & Drop - ukramedia.com')(3);\ntry {\n    if (positionInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(5);\n                freq = effect('Bounce & Drop - ukramedia.com')(6);\n                decay = effect('Bounce & Drop - ukramedia.com')(7);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (positionBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(10);\n            g = effect('Bounce & Drop - ukramedia.com')(11);\n            nMax = effect('Bounce & Drop - ukramedia.com')(12);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"},"a":{"a":0,"k":[140.061,140.061,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,1.01]},"t":10,"s":[0,0,100]},{"t":20,"s":[140,140,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar scaleInertialBounce, scaleBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\nscaleInertialBounce = effect('Bounce & Drop - ukramedia.com')(16);\nscaleBounceBack = effect('Bounce & Drop - ukramedia.com')(17);\ntry {\n    if (scaleInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(19);\n                freq = effect('Bounce & Drop - ukramedia.com')(20);\n                decay = effect('Bounce & Drop - ukramedia.com')(21);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (scaleBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(24);\n            g = effect('Bounce & Drop - ukramedia.com')(25);\n            nMax = effect('Bounce & Drop - ukramedia.com')(26);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"}},"ao":0,"ef":[{"ty":5,"nm":"Bounce & Drop - ukramedia.com","np":70,"mn":"Pseudo/animationControl","ix":1,"en":1,"ef":[{"ty":6,"nm":"Position","mn":"Pseudo/animationControl-0001","ix":1,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0003","ix":3,"v":{"a":0,"k":0,"ix":3}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0004","ix":4,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0005","ix":5,"v":{"a":0,"k":0.05,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0006","ix":6,"v":{"a":0,"k":4,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0007","ix":7,"v":{"a":0,"k":8,"ix":7}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0008","ix":8,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0009","ix":9,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0010","ix":10,"v":{"a":0,"k":0.7,"ix":10}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0011","ix":11,"v":{"a":0,"k":5000,"ix":11}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0012","ix":12,"v":{"a":0,"k":9,"ix":12}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0013","ix":13,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0014","ix":14,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/animationControl-0015","ix":15,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0016","ix":16,"v":{"a":0,"k":1,"ix":16}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0018","ix":18,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0019","ix":19,"v":{"a":0,"k":0.8,"ix":19}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0020","ix":20,"v":{"a":0,"k":4,"ix":20}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0021","ix":21,"v":{"a":0,"k":8,"ix":21}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0022","ix":22,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0023","ix":23,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0024","ix":24,"v":{"a":0,"k":0.7,"ix":24}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0025","ix":25,"v":{"a":0,"k":5000,"ix":25}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0026","ix":26,"v":{"a":0,"k":9,"ix":26}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0027","ix":27,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0028","ix":28,"v":0},{"ty":6,"nm":"Rotation","mn":"Pseudo/animationControl-0029","ix":29,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0030","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0032","ix":32,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0033","ix":33,"v":{"a":0,"k":0.05,"ix":33}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0034","ix":34,"v":{"a":0,"k":4,"ix":34}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0035","ix":35,"v":{"a":0,"k":8,"ix":35}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0036","ix":36,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0037","ix":37,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0038","ix":38,"v":{"a":0,"k":0.7,"ix":38}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0039","ix":39,"v":{"a":0,"k":5000,"ix":39}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0040","ix":40,"v":{"a":0,"k":9,"ix":40}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0041","ix":41,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0042","ix":42,"v":0},{"ty":6,"nm":"Opacity","mn":"Pseudo/animationControl-0043","ix":43,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0044","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0045","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0046","ix":46,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0047","ix":47,"v":{"a":0,"k":0.05,"ix":47}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0048","ix":48,"v":{"a":0,"k":4,"ix":48}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0049","ix":49,"v":{"a":0,"k":8,"ix":49}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0050","ix":50,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0051","ix":51,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0052","ix":52,"v":{"a":0,"k":0.7,"ix":52}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0053","ix":53,"v":{"a":0,"k":5000,"ix":53}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0054","ix":54,"v":{"a":0,"k":9,"ix":54}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0055","ix":55,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0056","ix":56,"v":0},{"ty":6,"nm":"Global Inertial Bounce Options","mn":"Pseudo/animationControl-0057","ix":57,"v":0},{"ty":7,"nm":"Enable Global Inertial Bounce","mn":"Pseudo/animationControl-0058","ix":58,"v":{"a":0,"k":0,"ix":58}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0059","ix":59,"v":{"a":0,"k":0.05,"ix":59}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0060","ix":60,"v":{"a":0,"k":4,"ix":60}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0061","ix":61,"v":{"a":0,"k":8,"ix":61}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0062","ix":62,"v":0},{"ty":6,"nm":"Global Bounce Back Options","mn":"Pseudo/animationControl-0063","ix":63,"v":0},{"ty":7,"nm":"Enable Global Bounce Back","mn":"Pseudo/animationControl-0064","ix":64,"v":{"a":0,"k":0,"ix":64}},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0065","ix":65,"v":{"a":0,"k":0.7,"ix":65}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0066","ix":66,"v":{"a":0,"k":5000,"ix":66}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0067","ix":67,"v":{"a":0,"k":9,"ix":67}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0068","ix":68,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-77.215],[77.216,0],[0,77.215],[-77.215,0]],"o":[[0,77.215],[-77.215,0],[0,-77.215],[77.216,0]],"v":[[139.811,0],[0,139.811],[-139.811,0],[0,-139.811]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8862745098039215,0.3568627450980392,0.3568627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[140.061,140.061],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":10,"op":360,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Circle 1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.167],"y":[0.167]},"t":41.25,"s":[50]},{"t":55,"s":[0]}],"ix":11,"x":"var $bm_rt;\nvar opacityInertialBounce, opacityBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\nopacityInertialBounce = effect('Bounce & Drop - ukramedia.com')(44);\nopacityBounceBack = effect('Bounce & Drop - ukramedia.com')(45);\ntry {\n    if (opacityInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(47);\n                freq = effect('Bounce & Drop - ukramedia.com')(48);\n                decay = effect('Bounce & Drop - ukramedia.com')(49);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (opacityBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(52);\n            g = effect('Bounce & Drop - ukramedia.com')(53);\n            nMax = effect('Bounce & Drop - ukramedia.com')(54);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\nvar rotationInertialBounce, rotationBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\nrotationInertialBounce = effect('Bounce & Drop - ukramedia.com')(30);\nrotationBounceBack = effect('Bounce & Drop - ukramedia.com')(31);\ntry {\n    if (rotationInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(33);\n                freq = effect('Bounce & Drop - ukramedia.com')(34);\n                decay = effect('Bounce & Drop - ukramedia.com')(35);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (rotationBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(38);\n            g = effect('Bounce & Drop - ukramedia.com')(39);\n            nMax = effect('Bounce & Drop - ukramedia.com')(40);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"},"p":{"a":0,"k":[256,256,0],"ix":2,"l":2,"x":"var $bm_rt;\nvar positionInertialBounce, positionBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\npositionInertialBounce = effect('Bounce & Drop - ukramedia.com')(2);\npositionBounceBack = effect('Bounce & Drop - ukramedia.com')(3);\ntry {\n    if (positionInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(5);\n                freq = effect('Bounce & Drop - ukramedia.com')(6);\n                decay = effect('Bounce & Drop - ukramedia.com')(7);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (positionBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(10);\n            g = effect('Bounce & Drop - ukramedia.com')(11);\n            nMax = effect('Bounce & Drop - ukramedia.com')(12);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"},"a":{"a":0,"k":[140.061,140.061,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,16.794]},"t":0,"s":[0,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,-0.38]},"t":10,"s":[132,132,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,-0.21]},"t":35,"s":[130,130,100]},{"t":55,"s":[175,175,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar scaleInertialBounce, scaleBounceBack, n, n, t, t, v, amp, freq, decay, v, amp, freq, decay, e, g, nMax, e, g, nMax, n, n, t, v, vl, vu, vu, tCur, segDur, tNext, nb, delta;\nscaleInertialBounce = effect('Bounce & Drop - ukramedia.com')(16);\nscaleBounceBack = effect('Bounce & Drop - ukramedia.com')(17);\ntry {\n    if (scaleInertialBounce == 1) {\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time) {\n                n--;\n            }\n        }\n        if (n == 0) {\n            $bm_rt = t = 0;\n        } else {\n            $bm_rt = t = $bm_sub(time, key(n).time);\n        }\n        if (effect('Bounce & Drop - ukramedia.com')(58) == 1) {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(59);\n                freq = effect('Bounce & Drop - ukramedia.com')(60);\n                decay = effect('Bounce & Drop - ukramedia.com')(61);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        } else {\n            if (n > 0 && t < 1) {\n                v = velocityAtTime($bm_sub(key(n).time, $bm_div(thisComp.frameDuration, 10)));\n                amp = effect('Bounce & Drop - ukramedia.com')(19);\n                freq = effect('Bounce & Drop - ukramedia.com')(20);\n                decay = effect('Bounce & Drop - ukramedia.com')(21);\n                $bm_rt = $bm_sum(value, $bm_div($bm_mul($bm_mul(v, amp), Math.sin($bm_mul($bm_mul($bm_mul(freq, t), 2), Math.PI))), Math.exp($bm_mul(decay, t))));\n            } else {\n                $bm_rt = value;\n            }\n        }\n    } else if (scaleBounceBack == 1) {\n        if (effect('Bounce & Drop - ukramedia.com')(64) == 1) {\n            e = effect('Bounce & Drop - ukramedia.com')(65);\n            g = effect('Bounce & Drop - ukramedia.com')(66);\n            nMax = effect('Bounce & Drop - ukramedia.com')(67);\n        } else {\n            e = effect('Bounce & Drop - ukramedia.com')(24);\n            g = effect('Bounce & Drop - ukramedia.com')(25);\n            nMax = effect('Bounce & Drop - ukramedia.com')(26);\n        }\n        $bm_rt = n = 0;\n        if (numKeys > 0) {\n            $bm_rt = n = nearestKey(time).index;\n            if (key(n).time > time)\n                n--;\n        }\n        if (n > 0) {\n            t = $bm_sub(time, key(n).time);\n            v = $bm_mul($bm_neg(velocityAtTime($bm_sub(key(n).time, 0.001))), e);\n            vl = length(v);\n            if ($bm_isInstanceOfArray(value)) {\n                vu = vl > 0 ? normalize(v) : [\n                    0,\n                    0,\n                    0\n                ];\n            } else {\n                vu = v < 0 ? -1 : 1;\n            }\n            tCur = 0;\n            segDur = $bm_div($bm_mul(2, vl), g);\n            tNext = segDur;\n            nb = 1;\n            while (tNext < t && nb <= nMax) {\n                vl *= e;\n                segDur *= e;\n                tCur = tNext;\n                tNext = $bm_sum(tNext, segDur);\n                nb++;\n            }\n            if (nb <= nMax) {\n                delta = $bm_sub(t, tCur);\n                $bm_rt = $bm_sum(value, $bm_mul($bm_mul(vu, delta), $bm_sub(vl, $bm_div($bm_mul(g, delta), 2))));\n            } else {\n                $bm_rt = value;\n            }\n        } else\n            $bm_rt = value;\n    } else {\n        $bm_rt = value;\n    }\n} catch (err) {\n    $bm_rt = value;\n}"}},"ao":0,"ef":[{"ty":5,"nm":"Bounce & Drop - ukramedia.com","np":70,"mn":"Pseudo/animationControl","ix":1,"en":1,"ef":[{"ty":6,"nm":"Position","mn":"Pseudo/animationControl-0001","ix":1,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0003","ix":3,"v":{"a":0,"k":0,"ix":3}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0004","ix":4,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0005","ix":5,"v":{"a":0,"k":0.05,"ix":5}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0006","ix":6,"v":{"a":0,"k":4,"ix":6}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0007","ix":7,"v":{"a":0,"k":8,"ix":7}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0008","ix":8,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0009","ix":9,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0010","ix":10,"v":{"a":0,"k":0.7,"ix":10}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0011","ix":11,"v":{"a":0,"k":5000,"ix":11}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0012","ix":12,"v":{"a":0,"k":9,"ix":12}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0013","ix":13,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0014","ix":14,"v":0},{"ty":6,"nm":"Scale","mn":"Pseudo/animationControl-0015","ix":15,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0016","ix":16,"v":{"a":0,"k":1,"ix":16}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0018","ix":18,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0019","ix":19,"v":{"a":0,"k":0.8,"ix":19}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0020","ix":20,"v":{"a":0,"k":4,"ix":20}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0021","ix":21,"v":{"a":0,"k":8,"ix":21}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0022","ix":22,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0023","ix":23,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0024","ix":24,"v":{"a":0,"k":0.7,"ix":24}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0025","ix":25,"v":{"a":0,"k":5000,"ix":25}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0026","ix":26,"v":{"a":0,"k":9,"ix":26}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0027","ix":27,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0028","ix":28,"v":0},{"ty":6,"nm":"Rotation","mn":"Pseudo/animationControl-0029","ix":29,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0030","ix":30,"v":{"a":0,"k":0,"ix":30}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0031","ix":31,"v":{"a":0,"k":0,"ix":31}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0032","ix":32,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0033","ix":33,"v":{"a":0,"k":0.05,"ix":33}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0034","ix":34,"v":{"a":0,"k":4,"ix":34}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0035","ix":35,"v":{"a":0,"k":8,"ix":35}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0036","ix":36,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0037","ix":37,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0038","ix":38,"v":{"a":0,"k":0.7,"ix":38}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0039","ix":39,"v":{"a":0,"k":5000,"ix":39}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0040","ix":40,"v":{"a":0,"k":9,"ix":40}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0041","ix":41,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0042","ix":42,"v":0},{"ty":6,"nm":"Opacity","mn":"Pseudo/animationControl-0043","ix":43,"v":0},{"ty":7,"nm":"Enable Inertial Bounce","mn":"Pseudo/animationControl-0044","ix":44,"v":{"a":0,"k":0,"ix":44}},{"ty":7,"nm":"Enable Bounce Back","mn":"Pseudo/animationControl-0045","ix":45,"v":{"a":0,"k":0,"ix":45}},{"ty":6,"nm":"Inertial Bounce Options","mn":"Pseudo/animationControl-0046","ix":46,"v":0},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0047","ix":47,"v":{"a":0,"k":0.05,"ix":47}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0048","ix":48,"v":{"a":0,"k":4,"ix":48}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0049","ix":49,"v":{"a":0,"k":8,"ix":49}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0050","ix":50,"v":0},{"ty":6,"nm":"Bounce Back Options","mn":"Pseudo/animationControl-0051","ix":51,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0052","ix":52,"v":{"a":0,"k":0.7,"ix":52}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0053","ix":53,"v":{"a":0,"k":5000,"ix":53}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0054","ix":54,"v":{"a":0,"k":9,"ix":54}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0055","ix":55,"v":0},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0056","ix":56,"v":0},{"ty":6,"nm":"Global Inertial Bounce Options","mn":"Pseudo/animationControl-0057","ix":57,"v":0},{"ty":7,"nm":"Enable Global Inertial Bounce","mn":"Pseudo/animationControl-0058","ix":58,"v":{"a":0,"k":0,"ix":58}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/animationControl-0059","ix":59,"v":{"a":0,"k":0.05,"ix":59}},{"ty":0,"nm":"Frequency","mn":"Pseudo/animationControl-0060","ix":60,"v":{"a":0,"k":4,"ix":60}},{"ty":0,"nm":"Decay","mn":"Pseudo/animationControl-0061","ix":61,"v":{"a":0,"k":8,"ix":61}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0062","ix":62,"v":0},{"ty":6,"nm":"Global Bounce Back Options","mn":"Pseudo/animationControl-0063","ix":63,"v":0},{"ty":7,"nm":"Enable Global Bounce Back","mn":"Pseudo/animationControl-0064","ix":64,"v":{"a":0,"k":0,"ix":64}},{"ty":0,"nm":"Elasticity","mn":"Pseudo/animationControl-0065","ix":65,"v":{"a":0,"k":0.7,"ix":65}},{"ty":0,"nm":"Gravity","mn":"Pseudo/animationControl-0066","ix":66,"v":{"a":0,"k":5000,"ix":66}},{"ty":0,"nm":"nMax","mn":"Pseudo/animationControl-0067","ix":67,"v":{"a":0,"k":9,"ix":67}},{"ty":6,"nm":"","mn":"Pseudo/animationControl-0068","ix":68,"v":0}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-77.215],[77.216,0],[0,77.215],[-77.215,0]],"o":[[0,77.215],[-77.215,0],[0,-77.215],[77.216,0]],"v":[[139.811,0],[0,139.811],[-139.811,0],[0,-139.811]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.8862745098039215,0.3568627450980392,0.3568627450980392,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[140.061,140.061],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":360,"st":0,"bm":0}],"markers":[]}

================================================
File: /packages/shared-ui/asset/lotties/info.json
================================================
{"v":"5.5.9","fr":29.9700012207031,"ip":0,"op":38.0000015477717,"w":114,"h":114,"nm":"Warning","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Layer 5 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":26,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":32,"s":[100]},{"t":38.0000015477717,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[56.853,56.618,0],"ix":2},"a":{"a":0,"k":[56.897,56.897,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":26,"s":[83,83,100]},{"t":38.0000015477717,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[28.397,0],[0,-28.397],[-28.397,0],[0,28.397]],"o":[[-28.397,0],[0,28.397],[28.397,0],[0,-28.397]],"v":[[0.001,-51.497],[-51.498,0.001],[0.001,51.497],[51.498,0.001]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[31.234,0],[0,31.233],[-31.236,0],[0,-31.237]],"o":[[-31.236,0],[0,-31.237],[31.234,0],[0,31.233]],"v":[[0.001,56.647],[-56.647,0.001],[0.001,-56.647],[56.647,0.001]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.5804,0.851,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[56.897,56.898],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":4.00000016292334,"op":320.000013033867,"st":4.00000016292334,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Layer 2 Outlines","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":26,"s":[100]},{"t":32.0000013033867,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[56.853,56.618,0],"ix":2},"a":{"a":0,"k":[56.897,56.897,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":20,"s":[83,83,100]},{"t":32.0000013033867,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[28.397,0],[0,-28.397],[-28.397,0],[0,28.397]],"o":[[-28.397,0],[0,28.397],[28.397,0],[0,-28.397]],"v":[[0.001,-51.497],[-51.498,0.001],[0.001,51.497],[51.498,0.001]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[31.234,0],[0,31.233],[-31.236,0],[0,-31.237]],"o":[[-31.236,0],[0,-31.237],[31.234,0],[0,31.233]],"v":[[0.001,56.647],[-56.647,0.001],[0.001,-56.647],[56.647,0.001]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.5804,0.851,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[56.897,56.898],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":316.000012870944,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Layer 4 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[57.387,65.377,0],"to":[0,-0.35,0],"ti":[0,0.835,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":4,"s":[57.387,65.46,0],"to":[0,-1.455,0],"ti":[0,0.609,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":11,"s":[57.387,56.377,0],"to":[0,-0.958,0],"ti":[0,0.609,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":13,"s":[57.387,50.877,0],"to":[0,-0.958,0],"ti":[0,0.609,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":15,"s":[57.387,56.377,0],"to":[0,-0.958,0],"ti":[0,-0.417,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":19,"s":[57.387,65.627,0],"to":[0,0.417,0],"ti":[0,0.958,0]},{"t":22.0000008960784,"s":[57.387,65.377,0]}],"ix":2},"a":{"a":0,"k":[5.434,31.682,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":4,"s":[115,90,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":8,"s":[100,112,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":11,"s":[100,112,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":13,"s":[113.333,94.333,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":15,"s":[100,112,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":20,"s":[113,95,100]},{"t":22.0000008960784,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.878,0],[0,-2.487],[0,0],[-2.951,0],[0,2.426],[0,0]],"o":[[-2.951,0],[0,0],[0,2.49],[2.878,0],[0,0],[0,-2.428]],"v":[[0.001,-15.433],[-5.184,-11.406],[-5.184,11.409],[0.001,15.433],[5.184,11.409],[5.184,-11.406]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[5.433,15.682],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":316.000012870944,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Layer 3 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[57.011,80.341,0],"ix":2},"a":{"a":0,"k":[5.516,11.142,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":20,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":22,"s":[100,79,100]},{"t":24.00000097754,"s":[100,100,100]}],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.834,0],[0,-2.837],[-2.835,0],[0,2.833]],"o":[[-2.835,0],[0,2.833],[2.834,0],[0,-2.837]],"v":[[0.002,-5.142],[-5.141,0.003],[0.002,5.142],[5.141,0.003]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[5.391,5.392],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":316.000012870944,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Layer 1 Outlines","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[56.854,56.618,0],"ix":2},"a":{"a":0,"k":[41.449,41.449,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-22.753,0],[0,-22.753],[22.754,0],[0,22.754]],"o":[[22.754,0],[0,22.754],[-22.753,0],[0,-22.753]],"v":[[0,-41.199],[41.199,0],[0,41.199],[-41.199,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.5804,0.851,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[41.449,41.449],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":316.000012870944,"st":0,"bm":0}],"markers":[]}

================================================
File: /packages/shared-ui/asset/lotties/loading.json
================================================
{"nm":"loading_6","ddd":0,"h":300,"w":300,"meta":{"g":"@lottiefiles/toolkit-js 0.26.1"},"layers":[{"ty":4,"nm":"Shape Layer 2","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[30.000000000000004,30.000000000000004,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[150.00000000000003,150.00000000000003,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"s":[360],"t":60}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[300,300],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[1],"t":0},{"s":[100],"t":50}],"ix":2},"o":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"s":[3],"t":60}],"ix":3},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":10},{"s":[99],"t":60}],"ix":1},"m":1}],"ind":1},{"ty":4,"nm":"Shape Layer 1","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[30.000000000000004,30.000000000000004,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[150.00000000000003,150.00000000000003,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":30,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[300,300],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2}],"v":"5.8.1","fr":30,"op":60,"ip":0,"assets":[]}

================================================
File: /packages/shared-ui/asset/lotties/loading_white.json
================================================
{"nm":"loading_6","ddd":0,"h":300,"w":300,"meta":{"g":"@lottiefiles/toolkit-js 0.26.1"},"layers":[{"ty":4,"nm":"Shape Layer 2","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[30.000000000000004,30.000000000000004,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[150.00000000000003,150.00000000000003,0],"ix":2},"r":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"s":[360],"t":60}],"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[300,300],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[1],"t":0},{"s":[100],"t":50}],"ix":2},"o":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[0],"t":0},{"s":[3],"t":60}],"ix":3},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":10},{"s":[99],"t":60}],"ix":1},"m":1}],"ind":1},{"ty":4,"nm":"Shape Layer 1","sr":1,"st":0,"op":300,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[30.000000000000004,30.000000000000004,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[150.00000000000003,150.00000000000003,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":30,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":3,"it":[{"ty":"el","bm":0,"hd":false,"mn":"ADBE Vector Shape - Ellipse","nm":"Ellipse Path 1","d":1,"p":{"a":0,"k":[0,0],"ix":3},"s":{"a":0,"k":[300,300],"ix":2}},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":1,"lj":1,"ml":4,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":50,"ix":5},"c":{"a":0,"k":[1,1,1],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2}],"v":"5.8.1","fr":30,"op":60,"ip":0,"assets":[]}

================================================
File: /packages/shared-ui/asset/lotties/validate.json
================================================
{"nm":"Main_Comp ","ddd":0,"h":608,"w":608,"meta":{"g":"LottieFiles AE 0.1.20","tc":"#ffffff"},"layers":[{"ty":4,"nm":"check","sr":1,"st":0,"op":60,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[51.5,-66.125,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[359.5,241.875,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Shape 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":false,"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-97,-33.5],[-16,44.75],[200,-177]]},"ix":2}},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[0],"t":14},{"s":[100],"t":25}],"ix":2},"o":{"a":0,"k":0,"ix":3},"s":{"a":0,"k":0,"ix":1},"m":1},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":2,"ml":1,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":35,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[0,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1},{"ty":4,"nm":"stock 4","sr":1,"st":9,"op":69,"ip":9,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-38,0,0],"ix":1},"s":{"a":0,"k":[95.975,95.975,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[304,304,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[100.516,0],[0,-100.516],[-100.516,0],[0,100.516]],"o":[[-100.516,0],[0,100.516],[100.516,0],[0,-100.516]],"v":[[0,-182],[-182,0],[0,182],[182,0]]},"ix":2}},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":0,"k":84,"ix":2},"o":{"a":0,"k":-24,"ix":3},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[84],"t":9},{"s":[0],"t":24}],"ix":1},"m":1},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":2,"ml":1,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":35,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-38,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2},{"ty":4,"nm":"stock 3","sr":1,"st":6,"op":66,"ip":6,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-38,0,0],"ix":1},"s":{"a":0,"k":[95.975,95.975,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[304,304,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[100.516,0],[0,-100.516],[-100.516,0],[0,100.516]],"o":[[-100.516,0],[0,100.516],[100.516,0],[0,-100.516]],"v":[[0,-182],[-182,0],[0,182],[182,0]]},"ix":2}},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":0,"k":84,"ix":2},"o":{"a":0,"k":-24,"ix":3},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[84],"t":6},{"s":[0],"t":21}],"ix":1},"m":1},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":2,"ml":1,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":35,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-38,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":3},{"ty":4,"nm":"stock","sr":1,"st":3,"op":63,"ip":3,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-38,0,0],"ix":1},"s":{"a":0,"k":[95.975,95.975,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[304,304,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[100.516,0],[0,-100.516],[-100.516,0],[0,100.516]],"o":[[-100.516,0],[0,100.516],[100.516,0],[0,-100.516]],"v":[[0,-182],[-182,0],[0,182],[182,0]]},"ix":2}},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":0,"k":84,"ix":2},"o":{"a":0,"k":-24,"ix":3},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[84],"t":3},{"s":[0],"t":18}],"ix":1},"m":1},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":2,"ml":1,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":35,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-38,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":4},{"ty":4,"nm":"stock 2","sr":1,"st":0,"op":60,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[-38,0,0],"ix":1},"s":{"a":0,"k":[95.975,95.975,100],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[304,304,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Ellipse 1","ix":1,"cix":2,"np":4,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Path 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[100.516,0],[0,-100.516],[-100.516,0],[0,100.516]],"o":[[-100.516,0],[0,100.516],[100.516,0],[0,-100.516]],"v":[[0,-182],[-182,0],[0,182],[182,0]]},"ix":2}},{"ty":"tm","bm":0,"hd":false,"mn":"ADBE Vector Filter - Trim","nm":"Trim Paths 1","ix":2,"e":{"a":0,"k":84,"ix":2},"o":{"a":0,"k":-24,"ix":3},"s":{"a":1,"k":[{"o":{"x":0.333,"y":0},"i":{"x":0.667,"y":1},"s":[84],"t":0},{"s":[0],"t":15}],"ix":1},"m":1},{"ty":"st","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Stroke","nm":"Stroke 1","lc":2,"lj":2,"ml":1,"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":35,"ix":5},"c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":3}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[-38,0],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":5}],"v":"5.5.7","fr":30,"op":31,"ip":0,"assets":[]}

================================================
File: /packages/shared-ui/asset/lotties/warning.json
================================================
{"nm":"System-states-Sin conexiÃ³n","ddd":0,"h":32,"w":32,"meta":{"g":"@lottiefiles/toolkit-js 0.26.1"},"layers":[{"ty":4,"nm":"! contornos","sr":1,"st":0,"op":3597.00014650881,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[8.25,8.25,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":1,"y":0},"i":{"x":0.847,"y":1},"s":[100,100,100],"t":0},{"o":{"x":0.127,"y":0},"i":{"x":0,"y":1},"s":[130,130,100],"t":21},{"s":[100,100,100],"t":42.0000017106951}],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[16,16,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":0,"k":100,"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Grupo 1","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Trazado 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0.442,0],[0,-0.443],[-0.442,0],[0,0.441]],"o":[[-0.442,0],[0,0.441],[0.442,0],[0,-0.443]],"v":[[0,-0.8],[-0.8,0],[0,0.8],[0.8,0]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Relleno 1","c":{"a":0,"k":[1,1,1],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[8.25,12.25],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Grupo 2","ix":2,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Trazado 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[-0.221,0],[0,0.221],[0,0],[0.221,0],[0,-0.221],[0,0]],"o":[[0.221,0],[0,0],[0,-0.221],[-0.221,0],[0,0],[0,0.221]],"v":[[0,2.544],[0.4,2.144],[0.4,-2.144],[0,-2.544],[-0.4,-2.144],[-0.4,2.144]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Relleno 1","c":{"a":0,"k":[1,1,1],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[8.25,7.194],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]},{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Grupo 3","ix":3,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Trazado 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,-4.416],[-4.416,0],[0,4.416],[4.416,0]],"o":[[0,4.416],[4.416,0],[0,-4.416],[-4.416,0]],"v":[[-8,0],[0,8],[8,0],[0,-8]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Relleno 1","c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[8.25,8.25],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":1},{"ty":4,"nm":"Sombra contornos","sr":1,"st":0,"op":3597.00014650881,"ip":0,"hd":false,"ddd":0,"bm":0,"hasMask":false,"ao":0,"ks":{"a":{"a":0,"k":[8.25,8.25,0],"ix":1},"s":{"a":1,"k":[{"o":{"x":1,"y":0},"i":{"x":0.847,"y":1},"s":[100,100,100],"t":0},{"o":{"x":0.127,"y":0},"i":{"x":0,"y":1},"s":[180,180,100],"t":21},{"s":[100,100,100],"t":42.0000017106951}],"ix":6},"sk":{"a":0,"k":0},"p":{"a":0,"k":[16,16,0],"ix":2},"r":{"a":0,"k":0,"ix":10},"sa":{"a":0,"k":0},"o":{"a":1,"k":[{"o":{"x":0.167,"y":0.167},"i":{"x":0.833,"y":0.833},"s":[100],"t":8.4},{"s":[0],"t":23.8000009693939}],"ix":11}},"ef":[],"shapes":[{"ty":"gr","bm":0,"hd":false,"mn":"ADBE Vector Group","nm":"Grupo 3","ix":1,"cix":2,"np":2,"it":[{"ty":"sh","bm":0,"hd":false,"mn":"ADBE Vector Shape - Group","nm":"Trazado 1","ix":1,"d":1,"ks":{"a":0,"k":{"c":true,"i":[[0,-4.416],[-4.416,0],[0,4.416],[4.416,0]],"o":[[0,4.416],[4.416,0],[0,-4.416],[-4.416,0]],"v":[[-8,0],[0,8],[8,0],[0,-8]]},"ix":2}},{"ty":"fl","bm":0,"hd":false,"mn":"ADBE Vector Graphic - Fill","nm":"Relleno 1","c":{"a":0,"k":[0.3686,0.4471,0.8941],"ix":4},"r":1,"o":{"a":0,"k":100,"ix":5}},{"ty":"tr","a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"sk":{"a":0,"k":0,"ix":4},"p":{"a":0,"k":[8.25,8.25],"ix":2},"r":{"a":0,"k":0,"ix":6},"sa":{"a":0,"k":0,"ix":5},"o":{"a":0,"k":100,"ix":7}}]}],"ind":2}],"v":"5.1.5","fr":30,"op":30,"ip":0,"assets":[]}

================================================
File: /packages/shared-ui/components/BarChart/BarChart.module.scss
================================================
.chart {
  width: 100%;
  position: relative;
  padding: 16px 0;
}

.barsContainer {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  height: 100%;
  gap: 24px;
  padding: 0 16px;
}

.barContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  height: 100%;
  min-width: 40px;
}

.barWrapper {
  display: flex;
  align-items: flex-end;
  height: calc(100% - 24px); // Leave space for label
  width: 100%;
}

.bar {
  width: 100%;
  background-color: var(--primaryColor);
  border-radius: 4px 4px 0 0;
  transition: height 0.3s ease;
  position: relative;
  min-height: 4px;

  .value {
    position: absolute;
    top: -24px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 14px;
    color: var(--textPrimaryColor);
    white-space: nowrap;
  }
}

.labelContainer {
  margin-top: 8px;
  text-align: center;
}

.label {
  font-size: 14px;
  color: var(--textSecondaryColor);
  white-space: nowrap;
}


================================================
File: /packages/shared-ui/components/BarChart/BarChart.tsx
================================================
import React from 'react';
import styles from './BarChart.module.scss';
import classNames from 'classnames';

export type BarChartData = {
  label: string;
  value: number;
};

type BarChartProps = {
  data: BarChartData[];
  className?: string;
  height?: number; // Allow customizable height
};

export const BarChart = ({ data, className, height = 300 }: BarChartProps) => {
  const maxValue = Math.max(...data.map((item) => item.value));

  return (
    <div className={classNames(styles.chart, className)} style={{ height }}>
      <div className={styles.barsContainer}>
        {data.map((item, index) => (
          <div key={index} className={styles.barContainer}>
            <div className={styles.barWrapper}>
              <div
                className={styles.bar}
                style={{
                  height: `${(item.value / maxValue) * 100}%`,
                }}>
                <span className={styles.value}>{item.value}</span>
              </div>
            </div>
            <div className={styles.labelContainer}>
              <span className={styles.label}>{item.label}</span>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};


================================================
File: /packages/shared-ui/components/Button/Button.stories.tsx
================================================
import React from 'react';
import type { Meta, StoryObj } from '@storybook/react';

import Button from './Button';

// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
  title: 'SharedUI/Button',
  component: Button,
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
    layout: 'centered',
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    className: {
      defaultValue: '',
      description: 'Additional class name to pass to the component',
    },
    onClick: {
      action: 'clicked',

      // type: 'function',
    },
    icon: {
      description: 'Icon to display on the button',
    },
    loading: {
      type: 'boolean',
      description: 'Whether the button is in loading state',
    },
    type: {
      options: ['primary', 'secondary'],
      control: {
        type: 'radio',
      },
      // control: {
      //   type: 'select',
      //   options: ['primary', 'secondary'],
      // },
    },
    value: {
      description: 'Text of the button',
    },
  },
} satisfies Meta<typeof Button>;

export default meta;
type Story = StoryObj<typeof meta>;

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const Primary: Story = {
  args: {
    value: 'Click me',
    onClick: () => undefined,
    type: 'primary',
    loading: false,
  },
};

export const Secondary: Story = {
  args: {
    value: 'Click me',
    type: 'secondary',
    loading: false,
  },
};

export const WithIcon: Story = {
  name: 'Button with icon',
  args: {
    value: 'Click me',
    type: 'secondary',
    loading: false,
    icon: <span>ð</span>,
  },
};


================================================
File: /packages/shared-ui/components/Button/Button.tsx
================================================
import './style.scss';
import Lottie from '../Lottie/Lottie';
import classNames from 'classnames';

type Props = {
  value: string;
  type: 'primary' | 'secondary';
  actionType?: 'submit' | 'button';
  className?: string;
  loading?: boolean;
  onClick?: () => void;
  icon?: React.ReactNode;
  disabled?: boolean;
};

const Button = (props: Props) => {
  return (
    <button
      type={props.actionType ?? 'button'}
      className={classNames('button', props.type, props.className)}
      onClick={!props.loading ? props.onClick : undefined}
      disabled={props.disabled}>
      <p style={props.loading ? { opacity: 0 } : undefined}>{props.value}</p>
      {props.icon && <div className="icon">{props.icon}</div>}
      {props.loading && (
        <Lottie
          type={props.type === 'primary' ? 'loading_white' : 'loading'}
          width="45px"
        />
      )}
    </button>
  );
};

export default Button;


================================================
File: /packages/shared-ui/components/Button/style.scss
================================================
.button {
  padding: 6px 10px;
  border: 1px solid transparent;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.2s;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  min-width: fit-content;

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  span {
    white-space: nowrap;
  }

  .icon {
    margin-left: 10px;
    display: flex;
    align-items: center;
  }

  .lottie-container {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
    margin-top: 2px;
  }
}
.primary {
  background-color: var(--primaryColor);
  color: var(--backgroundColor);
  box-shadow: 0 0 9px 1px rgb(124 123 123 / 19%);
}
.secondary {
  background-color: var(--secondaryColor);
}
.primary:hover {
  background-color: var(--primaryColorAccentued);
}
.secondary:hover {
  background-color: var(--secondaryColorAccentued);
}


================================================
File: /packages/shared-ui/components/CollapsibleMenu/CollapsibleMenu.module.scss
================================================
.collapsibleMenu {
  .header {
    background-color: var(--secondaryColor);
    height: 50px;
    border-radius: 5px;
    box-shadow: var(--default-shadow);
    border: 1px solid rgba(167, 167, 167, 0.2);
    padding: 10px 15px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 15px;

    .chevron {
      transition: 0.2s ease-in-out;
    }
  }

  .content {
    transition: 0.2s ease-in-out;
    overflow: hidden;
    position: relative;
    top: 10px;
  }

  &.open {
    .header {
      .chevron {
        transform: rotate(-180deg);
      }
    }
  }
}


================================================
File: /packages/shared-ui/components/CollapsibleMenu/CollapsibleMenu.tsx
================================================
import { ReactNode, useEffect, useRef, useState } from 'react';
import styles from './CollapsibleMenu.module.scss';
import classNames from 'classnames';
import { FaChevronDown } from 'react-icons/fa';

type Props = {
  children: ReactNode;
  header: ReactNode | string;
  className?: string;
  defaultState?: boolean;
};

export const CollapsibleMenu = (props: Props) => {
  const [isMenuOpen, setMenuOpen] = useState(props.defaultState ?? false);
  const contentRef = useRef<HTMLDivElement>(null);

  const toggleMenu = () => {
    setMenuOpen(!isMenuOpen);
  };

  useEffect(() => {
    if (!contentRef.current) return;

    contentRef.current.style.maxHeight = isMenuOpen
      ? `${contentRef.current.scrollHeight}px`
      : '0';
  }, [isMenuOpen, props.children]);

  return (
    <div
      className={classNames(styles.collapsibleMenu, props.className, {
        [styles.open]: isMenuOpen,
      })}>
      <div className={styles.header} onClick={toggleMenu}>
        <FaChevronDown className={styles.chevron} />
        {typeof props.header === 'string' ? (
          <p>{props.header}</p>
        ) : (
          props.header
        )}
      </div>
      <div ref={contentRef} className={styles.content}>
        {props.children}
      </div>
    </div>
  );
};


================================================
File: /packages/shared-ui/components/Dropdown/Dropdown.stories.tsx
================================================
import type { Meta, StoryObj } from '@storybook/react';

import Dropdown from './Dropdown';

// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
  title: 'SharedUI/Dropdown',
  component: Dropdown,
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
    layout: 'centered',
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    className: {
      description: 'Additional class name to pass to the component',
      control: {
        type: 'text',
      },
    },
    disableOption: {
      description: 'Option to show disabled',
      control: {
        type: 'text',
      },
    },
    options: {
      description: 'Options to show in the dropdown',
    },
  },
} satisfies Meta<typeof Dropdown>;

export default meta;

type Story = StoryObj<typeof meta>;

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
export const DefaultDropdown: Story = {
  args: {
    options: [
      {
        label: 'Option 1',
        value: 'option1',
      },
      {
        label: 'Option 2',
        value: 'option2',
      },
    ],
  },
};

export const DropdownWithOneDisabled: Story = {
  name: 'Dropdown with one default option disabled',
  args: {
    disableOption: 'Disabled',
    options: [
      {
        label: 'Option 1',
        value: 'option1',
      },
      {
        label: 'Option 2',
        value: 'option2',
      },
    ],
  },
};

export const DropdownWithSomeDisabled: Story = {
  name: 'Dropdown with some options disabled',
  args: {
    options: [
      {
        label: 'Option 1',
        value: 'option1',
      },
      {
        label: 'Option 2',
        value: 'option2',
        disabled: true,
      },
      {
        label: 'Option 3',
        value: 'option3',
      },
    ],
  },
};


================================================
File: /packages/shared-ui/components/Dropdown/Dropdown.tsx
================================================
import classNames from 'classnames';
import './style.scss';

export type DropdownOptionsDefinitionType = {
  label: string;
  value: string;
  color?: string;
  disabled?: boolean;
};

type Props = {
  options: Array<DropdownOptionsDefinitionType>;
  selectedOption?: string;
  onOptionChange: (value: DropdownOptionsDefinitionType['value']) => void;
  className?: string;
  placeholder?: string;
};

const Dropdown = (props: Props) => {
  const selectedOption =
    props.options.filter(
      (option) => option.value === props.selectedOption
    )[0] ?? props.options[0];

  return (
    <div className={classNames('dropdown', props.className)}>
      <select
        value={props.selectedOption}
        onChange={(event) => {
          props.onOptionChange(event.target.value);
        }}
        style={{ backgroundColor: selectedOption?.color }}>
        {props.placeholder && (
          <option selected disabled>
            {props.placeholder}
          </option>
        )}
        {props.options.map((option) => (
          <option
            key={option.value}
            value={option.value}
            disabled={option.disabled}>
            {option.label}
          </option>
        ))}
      </select>
    </div>
  );
};

export default Dropdown;


================================================
File: /packages/shared-ui/components/Dropdown/style.scss
================================================
.dropdown {
  select {
    width: 100%;
    padding: 5px 8px;
    border-radius: 10px;
    color: var(--onBackgroundColor);
    background-color: var(--backgroundColor);
    border: 1px solid var(--secondaryColorAccentued);
    font-weight: var(--light);
    cursor: pointer;
    outline: none;
    transition: all 0.3s;
  }
  select:focus {
    border: 1px solid var(--primaryColor);
  }
}


================================================
File: /packages/shared-ui/components/IconButton/IconButton.tsx
================================================
import { forwardRef, useId } from 'react';
import './style.scss';
import React from 'react';
import { Tooltip } from 'react-tooltip';
import Lottie from '../Lottie/Lottie';

type Props = Omit<React.HTMLProps<HTMLDivElement>, 'onClick' | 'className'> & {
  icon: React.ReactNode;
  tooltipMsg: string;
  tooltipId?: string;
  onClick?: () => void;
  loading?: boolean;
  className?: string;
  tooltipClassName?: string;
};

const IconButton = forwardRef<HTMLDivElement, Props>((props, forwardedRef) => {
  const {
    onClick,
    loading,
    tooltipId,
    tooltipMsg,
    tooltipClassName,
    icon,
    ...restProps
  } = props;
  const tooltipIdGenerated = useId();

  return (
    <div
      ref={forwardedRef}
      {...restProps}
      className={`IconButton ${props.className ?? ''}`}
      data-tooltip-id={tooltipId ?? tooltipIdGenerated}
      data-tooltip-content={tooltipMsg}
      onClick={!loading ? onClick : undefined}>
      {
        <div
          style={{
            ...(loading ? { opacity: 0 } : undefined),
          }}
          className="icon-wrapper">
          {icon}
        </div>
      }
      {loading && <Lottie type="loading" width="150%" />}
      {!tooltipId && (
        <Tooltip
          className={`tooltip ${tooltipClassName ?? ''}`}
          id={tooltipId ?? tooltipIdGenerated}
        />
      )}
    </div>
  );
});
IconButton.displayName = 'IconButton';

export default IconButton;


================================================
File: /packages/shared-ui/components/IconButton/style.scss
================================================
.IconButton {
  width: 35px;
  height: 35px;
  padding: 8px;
  border-radius: 5px;
  font-size: 1rem;
  color: var(--primaryColor);
  cursor: pointer;
  position: relative;

  &:hover {
    background-color: var(--secondaryColor);
  }

  i {
    font-size: 1.1rem;
  }

  .lottie-container {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translateX(-50%) translateY(-50%);
    margin-top: 2px;
  }

  .icon-wrapper {
    pointer-events: none;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
.IconButton:hover {
  background-color: var(--secondaryColor);
}


================================================
File: /packages/shared-ui/components/Loading/Loading.tsx
================================================
import './style.scss';
import Lottie from '../Lottie/Lottie';

type Props = {
  size?: 'small' | 'medium' | 'large';
};

export const Loading = (props: Props) => {
  return (
    <div
      style={{
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
      }}>
      <Lottie
        type="loading"
        width={
          props.size === 'small'
            ? '50px'
            : props.size === 'medium'
            ? '100px'
            : '150px'
        }
      />
    </div>
  );
};

export const LoadingAbsolute = () => {
  return (
    <div className="loading-container">
      <Lottie type="loading" width="150px" />
    </div>
  );
};


================================================
File: /packages/shared-ui/components/Loading/style.scss
================================================
.loading-container {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 100000;
  background-color: var(--secondaryColor);
  opacity: 0.8;
  display: flex;
  align-items: center;
  justify-content: center;
}


================================================
File: /packages/shared-ui/components/Lottie/Lottie.tsx
================================================
import Lottie from 'react-lottie';
import validate from '../../asset/lotties/validate.json';
import error from '../../asset/lotties/error.json';
import empty from '../../asset/lotties/empty.json';
import info from '../../asset/lotties/info.json';
import loading from '../../asset/lotties/loading.json';
import loading_white from '../../asset/lotties/loading_white.json';
import warning from '../../asset/lotties/warning.json';

type Props = {
  type:
    | 'empty'
    | 'error'
    | 'info'
    | 'loading'
    | 'loading_white'
    | 'validate'
    | 'warning';
  width: string;
  height?: string;
};

const LottieFile = (props: Props) => {
  return (
    <div
      style={{ width: props.width, height: props.height }}
      className="lottie-container">
      {props.type === 'error' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: error, autoplay: true, loop: true }}
        />
      )}{' '}
      {props.type === 'empty' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: empty, autoplay: true, loop: true }}
        />
      )}
      {props.type === 'info' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: info, autoplay: true, loop: true }}
        />
      )}
      {props.type === 'loading' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: loading, autoplay: true, loop: true }}
        />
      )}
      {props.type === 'loading_white' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: loading_white, autoplay: true, loop: true }}
        />
      )}
      {props.type === 'validate' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: validate, autoplay: true, loop: false }}
        />
      )}
      {props.type === 'warning' && (
        <Lottie
          isClickToPauseDisabled
          options={{ animationData: warning, autoplay: true, loop: true }}
        />
      )}
    </div>
  );
};

export default LottieFile;


================================================
File: /packages/shared-ui/components/OnboardingCard/OnboardingCard.tsx
================================================
import Button from '../Button/Button';
import './style.scss';

type Props = {
  name: string;
  image: string;
  button_display: string;
  onClick: () => void;
};

const OnboardingCard = (props: Props) => {
  return (
    <div className="onboarding-card">
      <div className="name-login">
        <h2>{props.name}</h2>
        <Button
          type="primary"
          value={props.button_display}
          onClick={props.onClick}
        />
      </div>
      <div className="logo-container">
        <img className="logo-integrations" src={props.image}></img>
      </div>
    </div>
  );
};

export default OnboardingCard;


================================================
File: /packages/shared-ui/components/OnboardingCard/style.scss
================================================
.onboarding-card {
  display: flex;
  background-color: var(--backgroundColor);
  border-radius: 10px;
  padding: 15px;
  width: 350px;
  height: 120px;
  box-shadow: 0px 0px 10px -2px rgba(0, 0, 0, 0.2);
  transition: all 0.3s;

  &:hover {
    box-shadow: 0px 0px 15px -2px #5e72e48c;
    transform: scale(1.01);
  }
  .name-login {
    flex: 2;
    display: flex;
    flex-direction: column;
    align-items: baseline;
    justify-content: space-between;
  }
  h2 {
    font-size: 1.4rem;
    font-weight: var(--semiBold);
  }
  .logo-container {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    .logo-integrations {
      max-width: 100%;
      max-height: 100%;
    }
  }
}


================================================
File: /packages/shared-ui/components/OrderDetail/OrderDetail.module.scss
================================================
.sidePanel {
  display: flex;
  flex-direction: column;

  .infosContainer {
    display: flex;
    justify-content: space-around;
    margin: 30px 0;

    .info {
      display: flex;
      flex-direction: column;
      max-width: 150px;

      .infoTitle {
        font-size: 0.8rem;
        font-weight: var(--bold);
        text-transform: uppercase;
        color: var(--textSecondaryColor);
      }

      .infoValue {
        font-size: 0.8rem;
        font-weight: var(--medium);
        margin: 5px 0;
        line-height: 1.2rem;
        color: var(--primaryColor);
        word-break: break-all;
      }
    }
  }
  .note {
    margin: 10px 0;
    font-size: 0.8rem;
    font-style: italic;
    font-weight: 300;
    color: var(--textPrimaryColor);
    line-height: 1.2rem;
    .label {
      font-weight: 600;
      color: var(--textSecondaryColor);
      margin-right: 2px;
    }
  }
}

.buttonContainer {
  position: absolute; /* Allows positioning relative to the nearest positioned ancestor */
  bottom: 10px; /* Aligns the div to the bottom */
  right: 10px; /* Aligns the div to the left */
  display: flex;
  margin-top: 5px;
  gap: 5px;
}

.inputÂ  {
  width: 20px;
}


================================================
File: /packages/shared-ui/components/OrderDetail/OrderDetail.tsx
================================================
import React, { useState, useEffect } from 'react';
import { SidePanel, Table, Button, Input, DatePicker } from 'shared-ui';
import styles from './OrderDetail.module.scss';
import { ColumnDefinitionType } from 'shared-ui/components/Table/Table';
import { useTranslation } from 'react-i18next';
import Select from 'react-select';
import { useRestaurantStore } from '../../../../apps/restaurant/src/store/useRestaurantStore';
import supplierService, {
  SupplierIngredient,
} from '../../../../apps/restaurant/src/services/supplier.service';
import { inventoryService } from '../../../../apps/restaurant/src/services/inventory.service';
import { Unit } from '../../../../apps/restaurant/src/services/index';

type OrderItem = {
  uuid?: string;
  ingredientUUID: string;
  ingredientName: string;
  quantity: number;
  unitUUID?: string;
  unitName: string;
  price: number;
  receivedQuantity?: number;
  supplierUUID: string;
};

type Props = {
  isVisible: boolean;
  onRequestClose: () => void;
  upperBanner: {
    title: string;
    value: string | number;
  }[];
  tableData: OrderItem[];
  note?: string;
  footerContent?: React.ReactNode;
  orderStatus: string;
  onSave: (data: {
    tableData: OrderItem[];
    deliveryDate: Date;
    status: string;
  }) => void;
  isLoading: boolean;
};

export const OrderDetail = (props: Props) => {
  const { t } = useTranslation(['placeOrder']);
  const [isEditMode, setIsEditMode] = useState(false);
  const [isReceiveMode, setIsReceiveMode] = useState(false);
  const [supplierIngredients, setSupplierIngredients] = useState<
    SupplierIngredient[]
  >([]);
  const [editableTableData, setEditableTableData] = useState<OrderItem[]>(
    props.tableData || []
  );
  const [allUnits, setAllUnits] = useState<Unit[]>([]);
  const [ingredientUnits, setIngredientUnits] = useState<Unit[]>([]);
  const [otherUnits, setOtherUnits] = useState<Unit[]>([]);
  const [rowUnits, setRowUnits] = useState<
    Record<number, { ingredientUnits: Unit[]; otherUnits: Unit[] }>
  >({});
  const [calculatedPrices, setCalculatedPrices] = useState<number[]>([]);
  const [deliveryDate, setDeliveryDate] = useState<Date | null>(null);

  const selectedRestaurantUUID = useRestaurantStore(
    (state) => state.selectedRestaurantUUID
  );

  useEffect(() => {
    const fetchUnits = async () => {
      if (selectedRestaurantUUID) {
        const units = await inventoryService.getUnits(selectedRestaurantUUID);
        setAllUnits(units);
      }
    };
    fetchUnits();
  }, [selectedRestaurantUUID]);

  useEffect(() => {
    const fetchSupplierIngredients = async (supplierUUID: string) => {
      if (selectedRestaurantUUID && supplierUUID) {
        const data = await supplierService.getSupplierIngredient(
          selectedRestaurantUUID,
          supplierUUID
        );
        if (data) {
          setSupplierIngredients(data);

          // Initialize unit options for each row based on the current ingredient
          const newRowUnits: Record<
            number,
            { ingredientUnits: Unit[]; otherUnits: Unit[] }
          > = {};
          editableTableData.forEach((row, index) => {
            const currentIngredient = data.find(
              (ingredient) => ingredient.name === row.ingredientName
            );
            const currentIngredientUnits = currentIngredient?.units || [];
            const newOtherUnits = allUnits.filter(
              (unit) =>
                !currentIngredientUnits.some(
                  (ingUnit) => ingUnit.unit_name === unit.unit_name
                )
            );
            newRowUnits[index] = {
              ingredientUnits: currentIngredientUnits,
              otherUnits: newOtherUnits,
            };
          });
          setRowUnits(newRowUnits);
        }
      }
    };

    if (isEditMode && editableTableData.length > 0) {
      fetchSupplierIngredients(editableTableData[0].supplierUUID);
    }
  }, [isEditMode, selectedRestaurantUUID, editableTableData, allUnits]);

  useEffect(() => {
    if (editableTableData.length > 0) {
      const currentIngredientName = editableTableData[0].ingredientName;
      const currentIngredient = supplierIngredients.find(
        (ingredient) => ingredient.name === currentIngredientName
      );
      const currentIngredientUnits = currentIngredient?.units || [];
      setIngredientUnits(currentIngredientUnits);
      setOtherUnits(
        allUnits.filter(
          (unit) =>
            !currentIngredientUnits.some(
              (ingUnit) => ingUnit.unit_name === unit.unit_name
            )
        )
      );
    }
  }, [editableTableData, supplierIngredients, allUnits]);

  useEffect(() => {
    recalculatePrices();
  }, [editableTableData, supplierIngredients]);

  const recalculatePrices = () => {
    const newCalculatedPrices = editableTableData.map((row) => {
      const ingredient = supplierIngredients.find(
        (ingredient) => ingredient.name === row.ingredientName
      );
      const unit = ingredient?.units.find(
        (unit) => unit.unit_uuid === row.unitUUID
      );
      const unitCost = unit?.unit_cost || 0;
      return unitCost * row.quantity;
    });
    setCalculatedPrices(newCalculatedPrices);
  };

  const addNewRow = () => {
    const newRow: OrderItem = {
      ingredientUUID: '',
      ingredientName: '',
      quantity: 0,
      unitName: '',
      price: 0,
      supplierUUID: '', // Use a default or selected supplier UUID
    };
    setEditableTableData((prev) => [...prev, newRow]);
  };

  const columns: ColumnDefinitionType<OrderItem>[] = [
    {
      key: 'ingredientName',
      header: t('ingredientName'),
      renderItem: ({ row, index }) =>
        isEditMode ? (
          <Select
            options={supplierIngredients.map((ingredient) => ({
              value: ingredient.name,
              label: ingredient.name,
            }))}
            defaultValue={{
              value: row.ingredientName,
              label: row.ingredientName,
            }}
            onChange={(selectedOption) => {
              const newData = [...editableTableData];
              const selectedIngredient = supplierIngredients.find(
                (ingredient) => ingredient.name === selectedOption?.value
              );
              if (selectedIngredient) {
                newData[index].ingredientName = selectedIngredient.name;
                newData[index].ingredientUUID =
                  selectedIngredient.ingredient_uuid;
              }
              setEditableTableData(newData);
              const newIngredientUnits = selectedIngredient?.units || [];
              const newOtherUnits = allUnits.filter(
                (unit) =>
                  !newIngredientUnits.some(
                    (ingUnit) => ingUnit.unit_name === unit.unit_name
                  )
              );
              setRowUnits((prev) => ({
                ...prev,
                [index]: {
                  ingredientUnits: newIngredientUnits,
                  otherUnits: newOtherUnits,
                },
              }));
            }}
          />
        ) : (
          row.ingredientName
        ),
    },
    {
      key: 'quantity',
      header: isReceiveMode ? t('Ordered QTY') : t('quantity'),
      renderItem: ({ row, index }) =>
        isEditMode ? (
          <Input
            type="number"
            value={row.quantity}
            onChange={(value) => {
              const newValue = Number(value);
              if (!isNaN(newValue)) {
                const newData = [...editableTableData];
                const currentRow = { ...newData[index] };
                currentRow.quantity = newValue;
                newData[index] = currentRow;
                setEditableTableData(newData);
                recalculatePrices(); // Trigger recalculation
              }
            }}
          />
        ) : (
          row.quantity
        ),
    },
    ...(isReceiveMode
      ? [
          {
            key: 'receivedQuantity' as keyof OrderItem,
            header: t('Received QTY'),
            renderItem: ({ row, index }) => {
              return (
                <Input
                  type="number"
                  width="20px"
                  value={
                    row.receivedQuantity !== null
                      ? row.receivedQuantity
                      : row.quantity
                  }
                  onChange={(value) => {
                    const newValue = Number(value);
                    if (!isNaN(newValue)) {
                      const newData = [...editableTableData];
                      newData[index].receivedQuantity = newValue;
                      setEditableTableData(newData);
                      console.log(editableTableData);
                    }
                  }}
                />
              );
            },
          },
        ]
      : []),
    {
      key: 'unitName',
      header: t('unit'),
      renderItem: ({ row, index }) => {
        const currentRowUnits = rowUnits[index] || {
          ingredientUnits: [],
          otherUnits: [],
        };
        const unitSelectOptions = [
          {
            label: 'Existing Units',
            options: currentRowUnits.ingredientUnits.map((unit) => ({
              label: unit.unit_name,
              value: unit.unit_uuid,
            })),
          },
          {
            label: 'Other Units',
            options: currentRowUnits.otherUnits.map((unit) => ({
              label: unit.unit_name,
              value: unit.unit_uuid,
            })),
          },
        ].filter((group) => group.options.length > 0);

        return isEditMode ? (
          <Select
            options={unitSelectOptions}
            defaultValue={{
              value: row.unitUUID,
              label: row.unitName,
            }}
            onChange={(selectedOption) => {
              const newData = [...editableTableData];
              const currentRow = { ...newData[index] };
              currentRow.unitUUID = selectedOption?.value || '';
              const selectedUnit = currentRowUnits.ingredientUnits.find(
                (unit) => unit.unit_uuid === selectedOption?.value
              );
              const newUnitCost = selectedUnit?.unit_cost || 0;
              currentRow.price = newUnitCost;
              newData[index] = currentRow;
              setEditableTableData(newData);
            }}
          />
        ) : (
          row.unitName
        );
      },
    },
    {
      key: 'price',
      header: t('price'),
      renderItem: ({ row, index }) => {
        const isExistingUnit = ingredientUnits.some(
          (unit) => unit.unit_uuid === row.unitUUID
        );
        if (isEditMode && !isExistingUnit) {
          return (
            <Input
              type="number"
              value={row.price}
              onChange={(value) => {
                const newValue = Number(value);
                if (!isNaN(newValue)) {
                  const newData = [...editableTableData];
                  newData[index] = { ...newData[index], price: newValue };
                  setEditableTableData(newData);
                }
              }}
            />
          );
        } else {
          return <span>{row.price * row.quantity}</span>;
        }
      },
    },
  ];

  if (props.orderStatus !== 'draft' && props.orderStatus !== 'pending') {
    columns.push({ key: 'receivedQuantity', header: t('receivedQuantity') });
  }

  return (
    <SidePanel
      loading={props.isLoading}
      isOpen={props.isVisible}
      onRequestClose={props.onRequestClose}
      className={styles.sidePanel}>
      <div className={styles.infosContainer}>
        {props.upperBanner.map((info) => (
          <div key={info.value} className={styles.info}>
            <p className={styles.infoTitle}>{info.title}</p>
            <p className={styles.infoValue}>
              {info.title === 'Delivery Date' && isEditMode ? (
                <DatePicker
                  size="small"
                  selected={deliveryDate}
                  dateFormat="yyyy-MM-dd"
                  onChange={(date) => setDeliveryDate(date)}
                  placeholderText={'Select Delivery Date'}
                  minDate={new Date()}
                />
              ) : (
                info.value
              )}
            </p>
          </div>
        ))}
        <div className={styles.buttonContainer}>
          {props.orderStatus === 'pending' && (
            <Button
              type="primary"
              value={!isReceiveMode ? 'Receive Stock' : 'Validate'}
              onClick={() => {
                if (!isReceiveMode) {
                  setIsReceiveMode(true);
                } else {
                  props.onSave({
                    tableData: editableTableData,
                    deliveryDate,
                    status: 'received',
                  });
                }
              }}
            />
          )}
          {props.orderStatus !== 'draft' && props.orderStatus !== 'pending' && (
            <span>{t('received')}</span>
          )}
        </div>
      </div>
      {props.note && (
        <p className={styles.note}>
          <span className={styles.label}>{t('addedNote')}: </span>
          {props.note}
        </p>
      )}
      <Table
        columns={columns}
        data={isEditMode ? editableTableData : props.tableData}
      />
      {isEditMode && (
        <Button
          value={t('addIngredient')}
          type="secondary"
          onClick={addNewRow}
        />
      )}
      {props.footerContent}
      <div className={styles.buttonContainer}>
        {props.orderStatus === 'draft' && (
          <>
            <Button
              value={isEditMode ? 'Save' : 'Edit'}
              type={isEditMode ? 'primary' : 'secondary'}
              onClick={() => {
                if (isEditMode) {
                  props.onSave({
                    tableData: editableTableData,
                    deliveryDate,
                    status: 'draft',
                  });
                }
                setIsEditMode(!isEditMode);
              }}
            />
            {!isEditMode && (
              <Button
                value="Approve"
                type="primary"
                onClick={() => {
                  props.onSave({
                    tableData: editableTableData,
                    deliveryDate,
                    status: 'pending',
                  });
                }}
              />
            )}
          </>
        )}
      </div>
    </SidePanel>
  );
};


================================================
File: /packages/shared-ui/components/ProfilePicture/ProfilePicture.module.scss
================================================
.userPicture {
  width: 30px;
  height: 30px;
  border-radius: 15px;
  border: var(--primaryColor) 2px solid;

  .tooltip {
    position: absolute;
    bottom: 100%;
    /* top: -30px; */
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.8);
    padding: 4px 8px;
    border-radius: 4px;
    opacity: 0;
    // visibility: hidden;
    transition:
      opacity 0.3s,
      visibility 0.3s,
      transform 0.3s;

    .tooltipText {
      font-size: 14px;
      margin: 0;
      color: white;
    }
  }

  &:hover {
    .tooltip {
      opacity: 1;
      // visibility: visible;
      transform: translateX(-50%) translateY(-5px);
    }
  }

  img {
    width: 100%;
    height: 100%;
    border-radius: 15px;
  }
}


================================================
File: /packages/shared-ui/components/ProfilePicture/ProfilePicture.tsx
================================================
import BlankPicture from '../../asset/images/blank-profile.png';
import styles from './ProfilePicture.module.scss';

type Props = {
  picture?: string;
  alt?: string;
  tooltip?: string;
};

const ProfilePicture = (props: Props) => {
  return (
    <div className={styles.userPicture}>
      <img
        src={props.picture ?? BlankPicture}
        alt={props.alt ?? 'Profile Picture'}
      />
      {props.tooltip && (
        <div className={styles.tooltip}>
          <p className={styles.tooltipText}>{props.alt}</p>
        </div>
      )}
    </div>
  );
};
export default ProfilePicture;


================================================
File: /packages/shared-ui/components/RestaurantCard/RestaurantCard.tsx
================================================
import { useTranslation } from 'react-i18next';
import { Restaurant } from '../../../../apps/restaurant/src/store/useRestaurantStore';
import Button from '../Button/Button';
import ProfilePicture from '../ProfilePicture/ProfilePicture';
import './style.scss';
import Slider from 'react-slick';

type Props = {
  restaurant: Restaurant;
  onClick: () => void;
};

const sliderSettings = {
  dots: false,
  infinite: false,
  speed: 500,
  slidesToShow: 3,
  slidesToScroll: 3,
};

const RestaurantCard = (props: Props) => {
  const { t } = useTranslation(['common']);
  return (
    <div className="RestaurantCard">
      <h2>{props.restaurant.name}</h2>
      <p className="info">
        {props.restaurant.address}, {props.restaurant.city},{' '}
        {props.restaurant.country}
      </p>
      <div className="employees-container">
        <Slider {...sliderSettings}>
          {props.restaurant.users.map((user) => (
            <div key={user.user_uuid} className="employee">
              {/* <div className="avatar">
                <img src={`../src/images/${user.picture}`} alt={user.name} />
                <div className="employee-popup">
                  <div className="employee-popup-content">{user.name}</div>
                </div>
              </div> */}
              <ProfilePicture
                picture={user.picture}
                alt={user.name}
                tooltip={user.name}
              />
            </div>
          ))}
        </Slider>
      </div>
      <Button
        type="primary"
        onClick={props.onClick}
        className="cardBtn"
        value={t('pages.overview.overview')}
      />
    </div>
  );
};

export default RestaurantCard;


================================================
File: /packages/shared-ui/components/RestaurantCard/style.scss
================================================
.RestaurantCard {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: var(--backgroundColor);
  box-shadow: 0px 0px 15px 2px rgba(75, 75, 75, 0.1);
  border: 1px solid rgb(167, 167, 167, 0.2);
  border-radius: 10px;
  padding: 16px;
  margin: 16px;
  // width: 300px;
  min-width: 300px;
  min-height: 100px;
  transition: all 0.3s ease-out;
  &:hover {
    box-shadow: 0px 0px 15px 2px rgba(65, 65, 65, 0.141);
    transform: scale(1.02);
  }

  h2 {
    margin: 0;
    margin-bottom: 8px;
    font-size: 1.1rem;
    font-weight: var(--semiBold);
    text-transform: uppercase;
  }

  .info {
    margin-bottom: 16px;
    color: #555555;
    font-size: 0.8rem;
    font-weight: var(--light);
  }

  .cardBtn {
    margin: 15px auto 0;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  li {
    display: flex;
    align-items: center;
    margin-bottom: 8px;
    font-size: 14px;
  }

  li img {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    margin-right: 8px;
  }

  .restaurant-picture {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: auto;
    width: 100px;
    height: 100px;
    overflow: hidden;
  }

  .restaurant-image {
    max-width: 100%;
    max-height: 100%;
    object-fit: cover;
  }

  /* .avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    border: 2px solid #007bff;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
  }
  
  .avatar img {
    width: 100%;
    height: 100%;
  } */

  .employees-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center; /* Center the employees horizontally */
  }

  .employee {
    display: flex !important;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    // margin-bottom: 16px;
    width: 100px;
    text-align: center; /* Add this to center the text horizontally */
  }

  .employee-name {
    font-size: 14px;
    margin-top: 8px;
    white-space: nowrap;
    overflow: hidden;
  }

  .employee-popup {
    position: absolute;

    bottom: 100%;
    /* top: -30px; */
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.3s,
      visibility 0.3s,
      transform 0.3s;
  }

  .employee:hover .employee-popup {
    opacity: 1;
    visibility: visible;
    transform: translateX(-45%) translateY(100%);
  }

  /* Slider styles */
  .slick-slider {
    width: 100%;
    position: relative;
    display: flex;
    justify-content: center;
  }

  .slick-slide {
    display: flex;
    justify-content: center;
  }

  .slick-slide .employee {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    // margin: 10px 0;
    width: 100px;
    text-align: center;
    position: relative;
  }

  .slick-slide .avatar {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    border: 2px solid #007bff;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .slick-slide .avatar img {
    width: 100%;
    height: 100%;
  }

  .slick-slide .employee-name {
    font-size: 14px;
    margin-top: 8px;
  }

  /* Slider arrows styles */
  .slick-prev,
  .slick-next {
    font-size: 24px; /* Increase the font size to make the arrow symbols visible */
    line-height: 1;
    width: 24px;
    height: 24px;
    border: none;
    border-radius: 50%;
    /* color: #007bff !important; */ /* Set the color to blue */
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 1;
    padding: 0;
    /* background-color: #007bff;  */
  }

  .slick-prev:before,
  .slick-next:before {
    content: ''; /* Remove the default content */
  }

  .slick-prev:before {
    content: '\2039'; /* Unicode code for "â¹" symbol */
    color: #007bff;
  }

  .slick-next:before {
    content: '\203A'; /* Unicode code for "âº" symbol */
    color: #007bff;
  }

  .slick-prev:hover,
  .slick-next:hover {
    /* color: #0056b3 !important; */ /* Darker blue on hover */
    /* transform: scale(1.1); */ /* Increase the size on hover */
    margin: 0 8px; /* Add some margin to avoid overlapping with the card */
    /* background-color: #007bff; */
  }

  /* Position the arrows inside the card */
  .slick-next {
    right: -12px;
  }

  .slick-prev {
    left: -12px;
  }

  /* Button styles */
  .buttons-container {
    display: flex;
    justify-content: center;
    margin-top: 1rem;
  }
}


================================================
File: /packages/shared-ui/components/Restaurants/Restaurants.tsx
================================================
import React, { useState, useEffect } from 'react';
import Card from '../Card/Card';

interface Employee {
  employee_uuid: string;
  employee_name: string;
  employee_picture: string;
}

interface Restaurant {
  restaurant_uuid: string;
  restaurant_name: string;
  restaurant_address: string;
  restaurant_city: string;
  restaurant_state: string;
  restaurant_picture: string;
  employees: Employee[];
}

const Restaurants = () => {
  const [restaurants, setRestaurants] = useState<Restaurant[]>([]);

  useEffect(() => {
    fetch('http://localhost:8080/restaurants')
      .then((response) => response.json())
      .then((data: Restaurant[]) => {
        setRestaurants(data);
      })
      .catch((error) => console.error('Error when receiving data:', error));
  }, []);

  return (
    <div className="app">
      {restaurants.map((restaurant) => (
        <Card key={restaurant.restaurant_uuid} restaurant={restaurant} />
      ))}
    </div>
  );
};

export default App;


================================================
File: /packages/shared-ui/components/SidePanel/SidePanel.tsx
================================================
import './style.scss';
import { Lottie } from '../../index';
import classNames from 'classnames';
import { useEffect } from 'react';

type Props = {
  isOpen: boolean;
  loading?: boolean;
  children: React.ReactNode;
  onRequestClose: () => void;
  className?: string;
  scrollable?: boolean;
  width?: string;
};

const SidePanel = (props: Props) => {
  // Block scrolling when side panel is open
  useEffect(() => {
    if (props.isOpen && !props.scrollable) {
      document.body.style.overflow = 'hidden';
    }
    return () => {
      if (!props.scrollable) {
        document.body.style.overflow = 'unset';
      }
    };
  }, [props.isOpen, props.scrollable]);

  return (
    <>
      {props.isOpen && (
        <div
          className="sidePanel-overlay"
          onClick={() => props.onRequestClose()}></div>
      )}
      <div
        className={classNames('sidePanel', props.className, {
          visible: props.isOpen,
          'sidePanel-scrollable': props.scrollable,
        })}
        style={{ width: props?.width }}>
        <i
          className="fa-solid fa-angles-right close-icon"
          data-tooltip-id="customer-tooltip"
          data-tooltip-content={'Close'}
          onClick={() => props.onRequestClose()}></i>

        {props.loading ? (
          <div className="loading-panel">
            <Lottie type="loading" width="200px" />
          </div>
        ) : (
          props.children
        )}
      </div>
    </>
  );
};

export default SidePanel;


================================================
File: /packages/shared-ui/components/SidePanel/style.scss
================================================
sidePanel-scrollable {
  overflow-y: auto; // Enables scrolling inside the side panel
}

.sidePanel-overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: #0000000f;
  animation-name: overlayFadeIn;
  animation-duration: 0.2s;
  z-index: 998;

  @keyframes overlayFadeIn {
    from {
      background-color: #00000000;
    }
    to {
      background-color: #0000000f;
    }
  }
}
.sidePanel {
  position: fixed;
  right: 0;
  top: 0;
  bottom: 0;
  width: 700px;
  padding: 40px 30px;
  display: none;
  transform: translateX(700px);
  background-color: var(--backgroundColor);
  box-shadow: 0 0 10px 0 rgb(203, 203, 203);
  border-radius: 5px;
  z-index: 999;
  transition: all 0.2s ease-in-out;

  .loading-panel {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .close-icon {
    color: var(--primaryColor);
    font-size: 1.2rem;
    position: absolute;
    top: 5px;
    left: 5px;
    padding: 10px;
    border-radius: 5px;
    cursor: pointer;
  }
  &.visible {
    transform: translateX(0);
    display: block;
  }
}


================================================
File: /packages/shared-ui/components/Switch/Switch.tsx
================================================
import classNames from 'classnames';
import './style.scss';

type Props = {
  isActive: boolean;
  toggle: () => void;
  width?: number;
};

const Switch = (props: Props) => {
  return (
    <div
      className={classNames('switch', props.isActive && 'active')}
      onClick={props.toggle}
      style={props.width ? { width: props.width } : undefined}>
      <div className="btn"></div>
    </div>
  );
};

export default Switch;


================================================
File: /packages/shared-ui/components/Switch/style.scss
================================================
.switch {
  display: block;
  width: 40px;
  height: 20px;
  border-radius: 100px;
  background-color: var(--secondaryColor);
  padding: 4px;
  cursor: pointer;
  transition: all 0.3s;

  .btn {
    aspect-ratio: 1;
    height: 100%;
    border-radius: 10px;
    background-color: var(--backgroundColor);
    position: relative;
    left: 0;
    transition: all 0.3s;
  }

  &.active {
    background-color: var(--primaryColor);
    justify-content: flex-end;
    .btn {
      left: 100%;
      transform: translateX(-100%);
    }
  }
}


================================================
File: /packages/shared-ui/components/Table/Table.stories.tsx
================================================
// Table.stories.tsx
import React from 'react';
import type { Meta, StoryObj } from '@storybook/react';

import Table, { ColumnDefinitionType } from './Table';

// Define sample data type matching the generic constraints
interface SampleData {
  id: number;
  name: string;
  status: string;
  amount: number;
}

const meta = {
  title: 'SharedUI/Table',
  component: Table,
  parameters: {
    layout: 'padded',
  },
  tags: ['autodocs'],
} satisfies Meta<typeof Table>;

export default meta;
type Story = StoryObj<typeof meta>;

// Sample data
const sampleData: SampleData[] = [
  { id: 1, name: 'John Doe', status: 'Active', amount: 1000 },
  { id: 2, name: 'Jane Smith', status: 'Inactive', amount: 2000 },
  { id: 3, name: 'Bob Johnson', status: 'Active', amount: 3000 },
  { id: 4, name: 'Alice Brown', status: 'Pending', amount: 4000 },
];

// Column definitions
const columns: ColumnDefinitionType<SampleData>[] = [
  { key: 'id', header: 'ID' },
  { key: 'name', header: 'Name' },
  {
    key: 'status',
    header: 'Status',
    renderItem: ({ value }) => {
      const status = value as string;
      return (
        <span
          style={{
            padding: '4px 8px',
            borderRadius: '4px',
            backgroundColor:
              status === 'Active'
                ? '#e6ffe6'
                : status === 'Inactive'
                ? '#ffe6e6'
                : '#fff9e6',
            color:
              status === 'Active'
                ? '#006600'
                : status === 'Inactive'
                ? '#660000'
                : '#666600',
          }}>
          {status}
        </span>
      );
    },
  },
  {
    key: 'amount',
    header: 'Amount',
    renderItem: ({ value }) => `$${(value as number).toLocaleString()}`,
  },
];

// Basic usage
export const Basic: Story = {
  args: {
    data: sampleData,
    columns,
  },
};

// With custom rendering
export const WithCustomRendering: Story = {
  args: {
    data: sampleData,
    columns,
  },
};

// Scrollable table
export const Scrollable: Story = {
  args: {
    data: [...sampleData, ...sampleData, ...sampleData],
    columns,
    scrollable: true,
    maxHeight: '300px',
  },
};

// With row click handler
export const WithRowClick: Story = {
  args: {
    data: sampleData,
    columns,
    onRowClick: (row: SampleData) => alert(`Clicked row with ID: ${row.id}`),
  },
};


================================================
File: /packages/shared-ui/components/Table/Table.tsx
================================================
// Table.tsx
import React from 'react';
import './style.scss';
import TableHeader from './TableHeader';
import TableRows from './TableRows';
import classNames from 'classnames';

export type ColumnDefinitionType<T, K extends keyof T = keyof T> = {
  key: K;
  header: string | (() => React.ReactNode);
  renderItem?: (params: {
    row: T;
    value: T[K];
    index: number;
  }) => React.ReactNode | string;
  classname?: string;
  width?: string;
  minWidth?: string;
  onRowClick?: (row: T, index: number) => void;
};

type Props<T, K extends keyof T> = {
  data?: Array<T>;
  columns: Array<ColumnDefinitionType<T, K>>;
  className?: string;
  scrollable?: boolean;
  maxHeight?: string;
  onRowClick?: (row: T) => void;
};

const Table = <T, K extends keyof T>(props: Props<T, K>) => {
  return (
    <div
      className={classNames('table-container', props.className, {
        'table-scrollable': props.scrollable,
      })}
      style={
        props.scrollable ? { maxHeight: props.maxHeight || '100%' } : undefined
      }>
      <table>
        <TableHeader columns={props.columns} className="table-header" />
        <TableRows
          data={props.data}
          columns={props.columns}
          onRowClick={props.onRowClick}
        />
      </table>
    </div>
  );
};

export default Table;


================================================
File: /packages/shared-ui/components/Table/TableHeader.tsx
================================================
import { ColumnDefinitionType } from './Table';

type Props<T, K extends keyof T> = {
  columns: Array<ColumnDefinitionType<T, K>>;
  className: string;
};

const TableHeader = <T, K extends keyof T>(props: Props<T, K>) => {
  return (
    <thead>
      <tr>
        {props.columns.map((colums, index) => (
          <th key={`headCell-${index}`}>
            {typeof colums.header === 'function'
              ? colums.header()
              : colums.header}
          </th>
        ))}
      </tr>
    </thead>
  );
};

export default TableHeader;


================================================
File: /packages/shared-ui/components/Table/TableRows.tsx
================================================
import { ColumnDefinitionType } from './Table';

type Props<T, K extends keyof T> = {
  data?: Array<T>;
  columns: Array<ColumnDefinitionType<T, K>>;
  onRowClick?: (row: T, index: number) => void; // Add onRowClick as an optional prop
};

const TableRows = <T, K extends keyof T>(props: Props<T, K>) => {
  return (
    <tbody>
      {props.data &&
        props.data.map((row, index) => (
          <tr
            key={`row-${index}`}
            onClick={
              props.onRowClick
                ? () => props.onRowClick?.(row, index)
                : undefined
            } // Conditionally apply onClick
            style={{ cursor: props.onRowClick ? 'pointer' : 'auto' }} // Change cursor style only if onRowClick is defined
          >
            {props.columns.map((column, index2) => (
              <td
                key={`cell-${index2}`}
                className={column.classname}
                style={{ width: column.width, minWidth: column.minWidth }}>
                {column.renderItem === undefined ? (
                  <>{row[column.key]}</>
                ) : (
                  column.renderItem({ row, value: row[column.key], index })
                )}
              </td>
            ))}
          </tr>
        ))}
    </tbody>
  );
};

export default TableRows;


================================================
File: /packages/shared-ui/components/Table/style.scss
================================================
.table-container {
  width: 100%;

  table {
    width: 100%;
    border-collapse: collapse;

    thead tr:first-child {
      position: sticky;
      text-align: left;
      border-radius: 10px;
      background-color: var(--secondaryColor);
      z-index: 1;
      top: 0;
    }
    th,
    td {
      height: 60px;
      padding: 0 5px;
      border-bottom: 1px solid rgba(0, 0, 0, 0.1);
      text-align: center;
    }
    th {
      text-transform: uppercase;
      font-size: 0.8rem;
      font-weight: var(--bold);
    }
    td {
      font-size: 0.8rem;
      font-weight: var(--light);
    }
    th:first-child,
    td:first-child {
      padding-left: 10px;
    }

    th:last-child,
    td:last-child {
      padding-right: 10px;
    }
    tbody tr {
      transition: all 0.1s;
    }
    tbody tr:hover {
      background-color: var(--secondaryColor);
    }
  }
  .column-bold {
    font-weight: var(--semiBold);
  }
  &.table-scrollable {
    position: relative;
    overflow: auto;

    thead {
      position: sticky;
      top: 0;
      z-index: 1;
    }
  }
}


================================================
File: /packages/shared-ui/components/Tabs/Tabs.tsx
================================================
import './tabs.scss';

type Props = {
  tabs: Array<string>;
  onClick: (index: number) => void;
  selectedIndex: number;
  className?: string;
};

const Tabs = (props: Props) => {
  return (
    <div className={`tabs ${props.className ? props.className : ''}`}>
      {props.tabs.map((tab, index) => (
        <span
          key={index}
          className={index === props.selectedIndex ? 'active' : ''}
          onClick={() => props.onClick(index)}>
          {tab}
        </span>
      ))}
    </div>
  );
};

export default Tabs;


================================================
File: /packages/shared-ui/components/Tabs/tabs.scss
================================================
.tabs {
  display: flex;
  gap: 30px;
  align-items: center;

  span {
    font-size: 0.9rem;
    font-weight: var(--bold);
    opacity: 0.2;
    text-transform: uppercase;
    cursor: pointer;
    position: relative;
    transition: all 0.3s;
  }
  .active {
    opacity: 1;
  }
  .active::after {
    content: '';
    position: absolute;
    height: 2px;
    background-color: var(--primaryColor);
    border-radius: 5px;
    width: 100%;
    animation-name: widthTransition;
    animation-duration: 0.5s;
    bottom: -3px;
    left: 0;
  }
  @keyframes widthTransition {
    from {
      width: 0;
    }
    to {
      width: 100%;
    }
  }
}


================================================
File: /packages/shared-ui/components/form/common.module.scss
================================================
.errorMessage {
  margin-top: 5px;
  font-size: 0.85rem;
  color: var(--errorColor);
}


================================================
File: /packages/shared-ui/components/form/common.tsx
================================================
import styles from './common.module.scss';

type ErrorMessageProps = {
  text: string;
};

export const ErrorMessage = (props: ErrorMessageProps) => {
  return <p className={styles.errorMessage}>{props.text}</p>;
};

type FloatingLabelProps = {
  text: string;
};

// TODO: Create generic floating label (to use on LabeledInput, PhoneNumberInput, etc.)
// Use the existing from LabeledInput
export const FloatingLabel = (props: FloatingLabelProps) => {
  return <p className="error-message">{props.text}</p>;
};


================================================
File: /packages/shared-ui/components/form/Checkbox/index.tsx
================================================
import React from 'react';
import { FaCheck } from 'react-icons/fa';
import './style.scss';
import { useTranslation } from 'react-i18next';
import { ErrorMessage } from '../common';
import classNames from 'classnames';

type Props = Omit<
  React.HTMLProps<HTMLInputElement>,
  'checked' | 'onCheck' | 'label'
> & {
  checked?: boolean;
  label?: string | React.ReactNode;
  error?: string;
  onCheck?: (value: boolean) => void;
};

export const Checkbox = React.forwardRef<HTMLInputElement, Props>(
  (
    { label, checked, onCheck, error, className, style, ...props }: Props,
    ref
  ) => {
    const { t } = useTranslation('error');
    return (
      <div
        className={classNames('Checkbox', className)}
        style={style}
        onClick={(e) => e.stopPropagation()}>
        <label>
          <input
            {...props}
            ref={ref}
            type="checkbox"
            checked={checked}
            onChange={() => onCheck && onCheck(!checked)}
          />
          <FaCheck className="icon" />
          {label && <span>{label}</span>}
        </label>
        {error && (
          <ErrorMessage text={t(error as unknown as TemplateStringsArray)} />
        )}
      </div>
    );
  }
);
Checkbox.displayName = 'Checkbox';


================================================
File: /packages/shared-ui/components/form/Checkbox/style.scss
================================================
.Checkbox {
  --checkbox-size: 18px;

  position: relative;

  .error-message {
    margin-top: 5px;
    font-size: 0.85rem;
    color: var(--errorColor);
  }

  label {
    cursor: pointer;
    display: flex;
    align-items: center;
    font-size: 0.9rem;
  }

  input[type='checkbox'] {
    /* removing default appearance */
    -webkit-appearance: none;
    appearance: none;
    /* creating a custom design */
    width: var(--checkbox-size);
    height: var(--checkbox-size);
    border-radius: 5px;
    margin-right: 10px;
    display: block;
    border: 2px solid #b6b6b6;
    outline: none;
    cursor: pointer;

    transition: 200ms ease-in-out;

    &:disabled {
      border-color: #c0c0c0;
      background-color: #c0c0c0;
    }

    &:disabled + span {
      color: #c0c0c0;
    }

    &:checked {
      background-color: var(--primaryColor);
      position: relative;
      border-color: transparent;
    }
  }

  input[type='checkbox']:checked + .icon {
    opacity: 1;
  }

  .icon {
    opacity: 0;
    position: absolute;
    width: 10px;
    height: 10px;
    top: 4px;
    left: 4px;
    color: white;
    pointer-events: none;
  }
}


================================================
File: /packages/shared-ui/components/form/DatePicker/DatePicker.scss
================================================
.DatePicker {
  height: var(--input-large-height);
  outline: none;
  border: 1px solid var(--borderColor);
  border-radius: 5px;
  background-color: var(--backgroundColor);
  overflow: hidden;
  transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;

  font-size: 0.8rem;
  padding: 6px 15px;
  width: 100%;

  &:focus {
    box-shadow: 0 0 0 2px var(--primaryColor);
  }

  &.small {
    height: var(--input-small-height);
    border-radius: 10px;
  }
}

.DatePicker__clear-button::after {
  background-color: var(--primaryColor);
}

.DatePicker__calendar {
  border-color: var(--borderColor);

  .react-datepicker__header {
    background-color: var(--secondaryColor);
    border-bottom-color: var(--borderColor);
  }

  .react-datepicker__day--selected {
    background-color: var(--primaryColor);
  }

  .react-datepicker__day--keyboard-selected {
    background-color: var(--primaryColorLighten);

    &:hover {
      background-color: var(--primaryColorAccentued);
    }
  }
}

.react-datepicker-popper {
  z-index: 999 !important;
}


================================================
File: /packages/shared-ui/components/form/DatePicker/DatePicker.tsx
================================================
import classNames from 'classnames';
import { forwardRef } from 'react';
import ReactDatePicker, { type DatePickerProps } from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import './DatePicker.scss';

type Props = DatePickerProps & {
  size?: 'small' | 'large';
};

const CustomDatePicker: React.ForwardRefExoticComponent<
  Props & React.RefAttributes<ReactDatePicker>
> = forwardRef<ReactDatePicker, Props>(({ size, ...props }, ref) => {
  return (
    <ReactDatePicker
      ref={ref}
      placeholderText="Select a Date"
      dateFormat="yyyy-MM-dd"
      {...props}
      className={classNames(
        'DatePicker',
        { small: size === 'small' },
        props.className
      )}
      calendarClassName="DatePicker__calendar"
      clearButtonClassName="DatePicker__clear-button"
    />
  );
});

CustomDatePicker.displayName = 'DatePicker';

export default CustomDatePicker;


================================================
File: /packages/shared-ui/components/form/Input/Input.tsx
================================================
import React, { useImperativeHandle, useRef } from 'react';
import styles from './style.module.scss';
import classNames from 'classnames';

type Props = {
  width?: string;
  onChange: (value: string) => void;
  suffix?: string;
} & Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>;

const Input = React.forwardRef<HTMLInputElement, Props>((props, ref) => {
  const { width, suffix, className, ...rest } = props;

  // Internal ref to manage the input element
  const internalRef = useRef<HTMLInputElement>(null);

  // Expose internalRef to parent components when they provide a ref
  useImperativeHandle(ref, () => internalRef.current as HTMLInputElement);

  // Function to focus the input when the suffix is clicked
  const handleSuffixClick = () => {
    if (internalRef.current) {
      internalRef.current.focus();
    }
  };

  return (
    <div
      className={classNames(styles.inputWrapper, suffix && styles.withSuffix)}>
      <input
        ref={internalRef}
        {...rest}
        className={classNames(styles.input, className)}
        onChange={(e) => props.onChange(e.target.value)}
        style={
          width
            ? { width }
            : props.type === 'number'
              ? { minWidth: '50px' }
              : {}
        }
      />
      {suffix && (
        <div className={styles.suffix} onClick={handleSuffixClick}>
          {suffix}
        </div>
      )}
    </div>
  );
});

Input.displayName = 'Input';

export default Input;


================================================
File: /packages/shared-ui/components/form/Input/style.module.scss
================================================
.inputWrapper {
  height: var(--input-small-height);
  border-radius: 10px;
  border: 1px solid var(--borderColor);
  background-color: var(--backgroundColor);
  overflow: hidden;
  transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;

  display: flex;
  align-items: center;

  &:focus-within {
    box-shadow: 0 0 0 2px var(--primaryColor);
  }

  input {
    flex: 1;
    width: 100%;
    height: 100%;
    font-size: 0.8rem;
    line-height: 1;
    background-color: transparent;
    border: none;
    outline: none;
    box-shadow: none;
    padding: 7px 15px;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    &[type='number'] {
      -moz-appearance: textfield;
      appearance: textfield;
    }

    &::placeholder {
      opacity: 0.4;
    }
  }

  &.withSuffix {
    input {
      padding-right: 4px;
    }
  }

  .suffix {
    font-size: 0.8rem;
    margin-right: 15px;
    color: var(--textSecondaryColor);
    white-space: nowrap;
  }
}


================================================
File: /packages/shared-ui/components/form/LabeledInput/index.tsx
================================================
import React from 'react';
import './style.scss';
import { useTranslation } from 'react-i18next';
import classNames from 'classnames';
import { ErrorMessage } from '../common';

type Props = React.DetailedHTMLProps<
  React.InputHTMLAttributes<HTMLInputElement>,
  HTMLInputElement
> & {
  value?: string | number;
  placeholder: string;
  icon?: React.ReactNode;
  error?: string;
  lighter?: boolean;
  suffix?: string;
};

export const LabeledInput = React.forwardRef<HTMLInputElement, Props>(
  (
    { icon, placeholder, value, error, lighter, suffix, className, ...props },
    ref
  ) => {
    const { t } = useTranslation('error');
    return (
      <div className={classNames('LabeledInput', className)}>
        <div
          className={classNames('input-container', {
            error: error,
            lighter: lighter,
          })}>
          {icon && <div className="icon">{icon}</div>}

          <div className="content-wrapper">
            <div className="input-wrapper" style={{ minWidth: props.minWidth }}>
              <input
                ref={ref}
                {...props}
                value={value}
                placeholder=" " // To use css property :placeholder-shown
              />
              <label className={classNames(value && 'filled')}>
                {placeholder}
              </label>
            </div>

            {suffix && <div className="suffix">{suffix}</div>}
          </div>
        </div>

        {error && (
          <ErrorMessage text={t(error as unknown as TemplateStringsArray)} />
        )}
      </div>
    );
  }
);
LabeledInput.displayName = 'LabeledInput';


================================================
File: /packages/shared-ui/components/form/LabeledInput/style.scss
================================================
.LabeledInput {
  --input-color: var(--primaryColor);
  --horizontal-padding: 16px;

  .input-container {
    position: relative;
    width: 100%;
    height: var(--input-large-height);
    border-radius: 5px;
    transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
    background-color: var(--backgroundColor);
    overflow: hidden;

    &:focus-within {
      box-shadow: 0 0 0 2px var(--input-color);
    }

    .icon {
      position: absolute;
      width: 16px;
      left: 10px;
      top: 50%;
      transform: translateY(-50%);
      z-index: 10;

      * {
        display: block;
        color: var(--input-color);
      }
    }

    .icon + div input {
      padding-left: 35px !important;
      & ~ label {
        left: 35px !important;
      }
    }

    .content-wrapper {
      display: flex;
      align-items: center;
      height: 100%;

      .input-wrapper {
        position: relative;
        height: 100%;
        flex: 1;

        input {
          width: 100%;
          height: 100%;
          padding: 15px var(--horizontal-padding) 4px var(--horizontal-padding);
          font-size: var(--input-text-size);
          line-height: 1;
          background-color: transparent;
          border: none;
          outline: none;
          box-shadow: none;

          &::-webkit-outer-spin-button,
          &::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
          }

          &[type='number'] {
            -moz-appearance: textfield;
            appearance: textfield;
          }
        }

        label {
          position: absolute;
          pointer-events: none;
          transform: translate(0, 13px) scale(1);
          transform-origin: top left;
          transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
          color: var(--textSecondaryColor);
          font-size: var(--input-text-size);
          line-height: 1;
          white-space: nowrap;
          top: 0;
          left: var(--horizontal-padding);
        }

        &:focus-within label {
          transform: translate(0, 5px) scale(0.75);
          color: var(--input-color);
        }

        input:not(:placeholder-shown) + label {
          transform: translate(0, 5px) scale(0.75);
        }
      }

      .suffix {
        margin-right: var(--horizontal-padding);
        color: var(--textSecondaryColor);
      }
    }

    &.lighter {
      border: 1px solid var(--borderColor);
    }

    &.error {
      --input-color: var(--errorColor);
    }
  }
}


================================================
File: /packages/shared-ui/components/form/PhoneNumberInput/PhoneNumberInput.scss
================================================
.PhoneInput {
  // background-color: red;
  height: var(--input-large-height);
  border-radius: 5px;
  border: 1px solid var(--borderColor);
  overflow: visible;
  box-shadow: none;
  transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;

  // Shadow flag color
  --PhoneInputCountryFlag-borderColor: #5f5f5f6c;
  --PhoneInputCountryFlag-borderColor--focus: var(--primaryColor);

  --PhoneInputCountrySelectArrow-color--focus: var(--primaryColor);

  &--focus {
    box-shadow: 0 0 0 2px var(--primaryColor);
  }

  &Country {
    padding-left: 10px;

    &Icon {
      border-radius: 2px;

      // &--border {
      //   box-shadow: 0 0 0 2px #727272;
      // }
    }
  }

  &Input {
    height: 100%;
    width: 100%;
    border: none;
    outline: none;
    background-color: transparent;

    color: var(--textPrimaryColor);
    font-size: var(--input-text-size);
    font-weight: 400;
    // padding: 0 5px;

    &::placeholder {
      color: var(--textSecondaryColor);
    }
  }
}


================================================
File: /packages/shared-ui/components/form/PhoneNumberInput/PhoneNumberInput.tsx
================================================
import PhoneInputForm, {
  Props as FormProps,
} from 'react-phone-number-input/react-hook-form';
import PhoneInput, { Props } from 'react-phone-number-input';
import './PhoneNumberInput.scss';
import 'react-phone-number-input/style.css';
import { FieldValues } from 'react-hook-form';
import { ErrorMessage } from '../common';

// To fix unknown extend
type Extend = NonNullable<unknown>;

type PhoneNumberInputProps<FV extends FieldValues> = {
  mode?: 'input' | 'form';
  error?: string;
  placeholder?: string;
} & (FV extends undefined ? Props<Extend> : FormProps<Extend, FV>);

const PhoneNumberInput = <FV extends FieldValues>(
  props: PhoneNumberInputProps<FV>
) => {
  const { mode, error, ...rest } = props;

  let phoneInput;
  if (mode === 'form') {
    phoneInput = (
      <PhoneInputForm {...(rest as unknown as FormProps<Extend, FV>)} />
    );
  } else {
    phoneInput = <PhoneInput {...(rest as unknown as Props<Extend>)} />;
  }

  return (
    <div>
      {phoneInput}
      {error && <ErrorMessage text={error} />}
    </div>
  );
};
export default PhoneNumberInput;


================================================
File: /packages/shared-ui/components/form/Select/Select.module.scss
================================================
.selectContainer {
  // font-family: 'Montserrat', sans-serif;

  .control {
    border-color: var(--borderColor);
    box-shadow: none;
    transition: 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;

    &.controlFocused {
      border-color: var(--borderColor);
      box-shadow: 0 0 0 2px var(--primaryColor);
    }

    &:hover {
      border-color: var(--borderColor);
    }

    .controlValueContainer {
      font-size: var(--input-text-size);

      .valueText {
        color: var(--textSecondaryColor);
        font-size: var(--input-text-size);
        font-weight: 400;

        &.valueTextFilled {
          color: var(--textPrimaryColor);
        }
      }
    }
  }

  .option {
    background-color: var(--backgroundColor);
    color: var(--textPrimaryColor);
    cursor: pointer;
    font-size: var(--input-text-size);

    &.optionSelected {
      background-color: var(--primaryColor);
      color: var(--onPrimaryColor);
    }

    &:hover:not(.optionSelected) {
      background-color: var(--primaryColorLighten);
      color: var(--textPrimaryColor);
    }
  }
}


================================================
File: /packages/shared-ui/components/form/Select/Select.tsx
================================================
import SelectInput, { GroupBase, Props } from 'react-select';
import CreatableSelect, { CreatableProps } from 'react-select/creatable';
import SelectType from 'react-select/dist/declarations/src/Select';

import styles from './Select.module.scss';
import classNames from 'classnames';
import { Ref } from 'react';
import { ErrorMessage } from '../common';
import { useTranslation } from 'react-i18next';

type CustomProps<
  Option,
  IsMulti extends boolean = false,
  Group extends GroupBase<Option> = GroupBase<Option>,
  CreatableT extends boolean = false,
> = {
  size?: 'small' | 'large';
  isCreatable?: CreatableT;
  innerRef?: Ref<SelectType<Option, IsMulti, Group>>;
  error?: string;
};

type ConditionalProps<
  Option,
  IsMulti extends boolean = false,
  Group extends GroupBase<Option> = GroupBase<Option>,
  CreatableT extends boolean = false,
> = CreatableT extends true
  ? CreatableProps<Option, IsMulti, Group>
  : Props<Option, IsMulti, Group>;

const Select = <
  Option,
  IsMulti extends boolean = false,
  Group extends GroupBase<Option> = GroupBase<Option>,
  CreatableT extends boolean = false,
>(
  props: CustomProps<Option, IsMulti, Group, CreatableT> &
    ConditionalProps<Option, IsMulti, Group, CreatableT>
) => {
  const { t } = useTranslation('error');
  const isSmall = !props.size || props.size === 'small';
  const selectHeight = isSmall
    ? 'var(--input-small-height)'
    : 'var(--input-large-height)';

  const Component = props.isCreatable ? CreatableSelect : SelectInput;

  return (
    <div>
      <Component
        {...props}
        ref={props.innerRef}
        className={classNames(styles.selectContainer, props.className)}
        classNames={{
          control: (state) =>
            classNames(styles.control, {
              [styles.controlFocused]: state.isFocused,
            }),
          valueContainer: () => styles.controlValueContainer,
          placeholder: () => styles.valueText,
          singleValue: (state) =>
            classNames(styles.valueText, {
              [styles.valueTextFilled]: state.hasValue,
            }),
          option: (state) =>
            classNames(styles.option, {
              [styles.optionSelected]: state.isSelected,
            }),
        }}
        styles={{
          control: (baseStyle) => ({
            ...baseStyle,
            height: selectHeight,
            minHeight: selectHeight,
            borderRadius: isSmall ? '5px' : '5px',
            cursor: props.isSearchable ? 'text' : 'pointer',
          }),
          singleValue: (baseStyle) => ({
            ...baseStyle,
            color: 'red',
          }),
          valueContainer: (baseStyle) => ({
            ...baseStyle,
            height: selectHeight,
            padding: isSmall ? '2px 8px' : '2px 13px',
          }),
          indicatorsContainer: (baseStyle) => ({
            ...baseStyle,
            height: selectHeight,
          }),
          dropdownIndicator: (baseStyle) => ({
            ...baseStyle,
            padding: isSmall ? '0 4px' : '0 8px',
            width: isSmall ? '24px' : '36px',
          }),
          menu: (baseStyle) => ({
            ...baseStyle,
            borderRadius: isSmall ? '5px' : '5px',
            overflow: 'hidden',
            zIndex: 100,
          }),
          option: (baseStyle) => ({
            ...baseStyle,
            padding: isSmall ? '8px 12px' : '8px 16px',
          }),
        }}
      />
      {props.error && (
        <ErrorMessage
          text={t(props.error as unknown as TemplateStringsArray)}
        />
      )}
    </div>
  );
};

export default Select;


================================================
File: /packages/shared-ui/components/layout/BurgerMenu/BurgerMenu.tsx
================================================
import './style.scss';
import classNames from 'classnames';

type Props = {
  isOpen: boolean;
  toggle: () => void;
  className?: string;
};

const BurgerMenu = (props: Props) => {
  return (
    <div
      className={classNames('burger', props.isOpen && 'open', props.className)}
      onClick={props.toggle}>
      <div className="bar leftBar"></div>
      <div className="bar"></div>
      <div className="bar rightBar"></div>
    </div>
  );
};

export default BurgerMenu;


================================================
File: /packages/shared-ui/components/layout/BurgerMenu/style.scss
================================================
.burger {
  cursor: pointer;
  border-radius: 5px;
  padding: 3px;

  .bar {
    height: 3px;
    width: 20px;
    margin: 5px;
    background-color: var(--primaryColor);
    border-radius: 2px;
    transition: all 0.2s;
  }

  &.open {
    .bar {
      opacity: 0;
    }
    .leftBar {
      opacity: 1;
      transform: translateY(9px) rotate(45deg);
    }
    .rightBar {
      opacity: 1;
      transform: translateY(-7px) rotate(-45deg);
    }
  }
}


================================================
File: /packages/shared-ui/components/layout/DialogBox/DialogBox.tsx
================================================
import { useTranslation } from 'react-i18next';
import LottieFile from '../../Lottie/Lottie';
import './style.scss';
import { useState } from 'react';
import Button from '../../Button/Button';

type Props = {
  type: 'warning' | 'info' | 'error';
  msg: string;
  subMsg?: string;
  list?: string[];
  isOpen: boolean;
  onRequestClose: () => void;
  disabledConfirm?: boolean;
  onConfirm?: () => void | Promise<void>;
  children?: React.ReactNode; // Add children prop
};

const DialogBox = (props: Props) => {
  const { t } = useTranslation('common');

  const [isSubmitLoading, setSubmitLoading] = useState(false);

  if (!props.isOpen) {
    return null;
  }
  return (
    <div className="popup-container">
      <div className="overlay" onClick={props.onRequestClose}></div>
      <div className="popup">
        {props.type === 'info' && <LottieFile width="80px" type="info" />}
        {props.type === 'warning' && <LottieFile width="80px" type="warning" />}
        {props.type === 'error' && <LottieFile width="80px" type="error" />}
        <span className="msg1">{props.msg}</span>
        {props.subMsg && <span className="msg2">{props.subMsg}</span>}
        {props.list && (
          <ul className="list">
            {props.list.map((item, i) => (
              <li key={i}>{item}</li>
            ))}
          </ul>
        )}
        <div className="button-container">{props.children}</div>
        <div className="button-container">
          {['error', 'info'].includes(props.type) && (
            <Button
              type="primary"
              value={t('ok')}
              onClick={props.onRequestClose}
            />
          )}
          {props.type === 'warning' && (
            <>
              <Button
                type="secondary"
                value={t('cancel')}
                onClick={props.onRequestClose}
              />
              <Button
                value={t('confirm')}
                type="primary"
                loading={isSubmitLoading}
                onClick={() => {
                  const result = props.onConfirm && props.onConfirm();
                  if (result && result instanceof Promise) {
                    setSubmitLoading(true);
                    result.finally(() => {
                      setSubmitLoading(false);
                    });
                  }
                }}
                disabled={props.disabledConfirm}
              />
            </>
          )}
        </div>
      </div>
    </div>
  );
};

export default DialogBox;


================================================
File: /packages/shared-ui/components/layout/DialogBox/style.scss
================================================
.popup-container {
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;

  .overlay {
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    backdrop-filter: blur(3px);
    background-color: rgba(164, 164, 164, 0.5);
  }

  .popup {
    background: var(--backgroundColor);
    padding: 20px 30px;
    position: fixed;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 15px;
    min-width: 300px;
    max-width: 500px;
    box-shadow: 0px 0px 10px -2px rgba(0, 0, 0, 0.2);
  }

  span {
    color: var(--onBackgroundColor);
    font-size: 1rem;
    font-weight: var(--light);
    text-align: center;
  }
  .msg1 {
    font-weight: var(--bold);
  }
  .list {
    border: 1px solid var(--primaryColor);
    border-radius: 5px;
    padding: 5px 25px;
    overflow-y: scroll;
    max-height: 80px;
    width: 100%;
    list-style-type: disc;
  }
  // .list:after {
  //   content: ' ';
  //   position: absolute;
  //   left: 0;
  //   right: 17px;
  //   height: 1em;
  //   top: 6.3em;
  //   background: linear-gradient(
  //     to bottom,
  //     rgba(0, 0, 0, 0),
  //     rgba(0, 0, 0, 0.95) 50%
  //   );
  //   z-index: 1;
  // }
  .button-container {
    display: flex;
    width: 100%;
    justify-content: center;
    gap: 20px;
    margin-top: 30px;
  }
}


================================================
File: /packages/shared-ui/components/layout/EmptyPage/EmptyPage.module.scss
================================================
.layout {
  margin-top: -25px;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  .title {
    margin-top: 25px;
    color: var(--primaryColor);
    font-size: 1.5rem;
  }

  .description {
    margin-top: 10px;
    text-align: center;
  }
}


================================================
File: /packages/shared-ui/components/layout/EmptyPage/EmptyPage.tsx
================================================
import classNames from 'classnames';
import LottieFile from '../../Lottie/Lottie';
import styles from './EmptyPage.module.scss';

type Props = {
  title: string;
  description: string;
  className?: string;
};

const EmptyPage = (props: Props) => {
  return (
    <div className={classNames(styles.layout, props.className)}>
      <LottieFile type="empty" width="30%" />
      <h1 className={styles.title}>{props.title}</h1>
      <p className={styles.description}>{props.description}</p>
    </div>
  );
};

export default EmptyPage;


================================================
File: /packages/shared-ui/components/layout/Navbar/Navbar.tsx
================================================
import './navbar.scss';
import React from 'react';

type Props = {
  title: string;
  isRefreshing?: boolean;
  onRefresh?: () => void;
  onLogout: () => void;
  options?: React.ReactNode;
};

const Navbar = (props: Props) => {
  return (
    <div className="navbar">
      <h2 className="page-title">{props.title}</h2>
      <div className="nav-actions">{props.options}</div>
    </div>
  );
};

export default Navbar;


================================================
File: /packages/shared-ui/components/layout/Navbar/navbar.scss
================================================
.navbar {
  width: 100%;
  height: var(--navbarHeight);
  // background-color: var(--navbarColor);
  // box-shadow: 4px 1px 5px 0px #00000024;
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
  padding: 0 30px;

  .page-title {
    color: var(--primaryColor);
    letter-spacing: 1px;
  }
  .nav-actions {
    display: flex;
    align-items: center;
    gap: 10px;
  }
}

@media screen and (max-width: 800px) {
  .page-title {
    margin-left: 30px;
  }
}


================================================
File: /packages/shared-ui/components/layout/Popup/Popup.module.scss
================================================
/* Modal background */
.modal {
  display: none;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  animation: 0.2s fadeBackground forwards;
  z-index: 1000;

  &.visible {
    display: block;
  }
}

@keyframes fadeBackground {
  from {
    background-color: rgba(0, 0, 0, 0);
  }
  to {
    background-color: rgba(0, 0, 0, 0.4);
  }
}

.centeringContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
}

.modalContent {
  background-color: var(--backgroundColor);
  box-shadow: 0 0 10px 0 #00000033;
  padding: 25px 30px;
  border-radius: 10px;

  // Add these lines:
  position: relative; // Make sure it doesnât restrict the dropdown
  overflow: visible; // Allow overflow

  transform-origin: 50% 100%;
  animation: 0.4s animateFromTop;

  .modalTitle {
    font-size: 1.3rem;
    color: var(--textPrimaryColor);
    margin-bottom: 5px;
  }

  .modalSubtitle {
    font-size: 0.85rem;
    color: var(--textSecondaryColor);
    margin-bottom: 20px;
  }
}

@keyframes animateFromTop {
  from {
    // top: -300px;
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    // top: 0;
    opacity: 1;
    transform: scale(1);
  }
}

// Popup.module.scss

.scrollableContent {
  overflow-y: auto; // Enable vertical scrolling
}


================================================
File: /packages/shared-ui/components/layout/Popup/Popup.tsx
================================================
import classnames from 'classnames';
import styles from './Popup.module.scss';

type Props = {
  isVisible: boolean;
  onRequestClose: () => void;
  children: React.ReactNode;
  title?: string;
  subtitle?: string;
  maxWidth?: number;
  scrollable?: boolean;
};

const Popup = (props: Props) => {
  return (
    <div
      className={classnames(styles.modal, {
        [styles.visible]: props.isVisible,
      })}
      onClick={props.onRequestClose}>
      <div className={styles.centeringContainer}>
        <div
          className={classnames(styles.modalContent, {
            [styles.scrollableContent]: props.scrollable, // Apply scrollable style conditionally
          })}
          style={{ maxWidth: props.maxWidth }}
          onClick={(e) => e.stopPropagation()}>
          {props.title && <h3 className={styles.modalTitle}>{props.title}</h3>}
          {props.subtitle && (
            <p className={styles.modalSubtitle}>{props.subtitle}</p>
          )}
          <div className={props.scrollable ? styles.scrollableContent : ''}>
            {props.children}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Popup;


================================================
File: /packages/shared-ui/components/layout/Sidebar/Sidebar.tsx
================================================
import BurgerMenu from '../BurgerMenu/BurgerMenu';
import './sidebar.scss';
import React, { useState } from 'react';

type Props = {
  children: React.ReactNode;
};

const Sidebar = (props: Props) => {
  const [burgerClicked, setBurgerClicked] = useState(false);

  return (
    <div className={`sidebar ${burgerClicked ? 'sidebar-floating' : ''}`}>
      {/* {burgerClicked ? (
        <i
          className="fa-solid fa-xmark burger"
          onClick={() => setBurgerClicked(!burgerClicked)}></i>
      ) : (
        <i
          className="fa-solid fa-bars burger"
          onClick={() => setBurgerClicked(!burgerClicked)}></i>
      )} */}

      <BurgerMenu
        isOpen={burgerClicked}
        toggle={() => setBurgerClicked(!burgerClicked)}
        className="sidebar-burger"
      />
      <h1 className="company-name">peckish</h1>
      <div className="sidebar-items-container">{props.children}</div>
    </div>
  );
};

export default Sidebar;


================================================
File: /packages/shared-ui/components/layout/Sidebar/SidebarItem.tsx
================================================
import classNames from 'classnames';
import './sidebarItem.scss';
import React from 'react';
import { NavLink } from 'react-router-dom';
import toast from 'react-hot-toast';
import { useTranslation } from 'react-i18next';

type Props = {
  name: string;
  icon: React.ReactNode;
  to: string;
  disable?: boolean;
};

const SidebarItem = (props: Props) => {
  const { t } = useTranslation(['onboarding']);

  const handleClick = (e: React.MouseEvent<HTMLElement>) => {
    if (props.disable) {
      toast(t('onboarding.userNotOnboarded.msg'), {
        icon: (
          <i
            className="fa-solid fa-circle-info"
            style={{ color: 'var(--primaryColor)' }}></i>
        ),
        style: { textAlign: 'center' },
        duration: 4000,
      });
      e.preventDefault();
    }
  };

  return (
    <NavLink
      className={({ isActive }) =>
        classNames('sidebar-item', {
          'sidebar-item-disable': props.disable,
          active: isActive,
        })
      }
      to={props.to}
      onClick={handleClick}>
      <div className="icon-container">{props.icon}</div>
      <span>{props.name}</span>
    </NavLink>
  );
};

export default SidebarItem;


================================================
File: /packages/shared-ui/components/layout/Sidebar/SidebarSeparator.tsx
================================================
import './sidebarSeparator.scss';

type Props = {
  sectionName: string;
};

const SidebarSeparator = (props: Props) => {
  return (
    <div className="sidebar-separator">
      <span>{props.sectionName}</span>
    </div>
  );
};

export default SidebarSeparator;


================================================
File: /packages/shared-ui/components/layout/Sidebar/sidebar.scss
================================================
.sidebar {
  background-color: var(--navbarColor);
  height: 100vh;
  width: var(--sidebarWidth);
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding: 0 10px;
  box-shadow: 1px 0px 5px 0px #00000024;
  transition: all 0.5s;
  z-index: 10;
  position: fixed;

  .sidebar-burger {
    position: fixed;
    top: 20px;
    left: 5px;
    font-size: 1.5rem;
    color: var(--primaryColor);
    margin-right: 20px;
    display: none;
    visibility: visible;
  }
  .company-name {
    height: calc(var(--navbarHeight) + 20px);
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .sidebar-items-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1;
    margin-bottom: 10px;
  }
}

.sidebar-floating {
  width: 250px !important;
  padding: 0 10px !important;
}

@media screen and (max-width: 800px) {
  .sidebar {
    position: absolute;
    z-index: 900;
    width: 0;
    padding: 0;
    overflow: hidden;
    .burger {
      display: inline-block;
    }
  }
}


================================================
File: /packages/shared-ui/components/layout/Sidebar/sidebarItem.scss
================================================
.sidebar-item {
  display: flex;
  align-items: center;
  padding: 15px 10px;
  border-radius: 5px;
  width: 100%;
  cursor: pointer;
  color: var(--onBackgroundColor);
  position: relative;
  transition: all var(--transitionDuration);
  font-size: 0.9rem;
  gap: 10px;

  &.sidebar-item-disable {
    opacity: 0.5;
    cursor: not-allowed;
  }
  &.active {
    background-color: var(--backgroundColor); 
    }


  span {
    white-space: nowrap;
  }

  &:hover {
    background-color: var(--backgroundColor);
  }
  .icon-container {
    width: 30px;
    display: flex;
    justify-content: center;
    i {
      font-size: 1.2rem;
      color: var(--primaryColor);
    }
  }
}


================================================
File: /packages/shared-ui/components/layout/Sidebar/sidebarSeparator.scss
================================================
.sidebar-separator {
  width: 100%;
  height: 65px;
  display: flex;
  align-items: flex-end;
  padding: 10px 10px;
  position: relative;

  span {
    width: 100%;
    opacity: 0.3;
    font-size: 0.8rem;
    text-transform: uppercase;
    font-weight: var(--semiBold);
    // position: relative;
  }
}
.sidebar-separator::after {
  content: '';
  position: absolute;
  height: 1px;
  opacity: 0.2;
  background-color: var(--onBackgroundColor);
  width: 90%;
  top: 15px;
  left: 50%;
  transform: translateX(-50%);
}


================================================
File: /packages/shared-ui/components/layout/UploadValidation/UploadValidation.tsx
================================================
import './style.scss';
import { useTranslation } from 'react-i18next';
import { Button, Loading, Popup, Select } from 'shared-ui';
import { useEffect, useState } from 'react';
import { ColumnsNameMapping } from '../../../../../apps/restaurant/src/services';
import { useRestaurantStore } from '../../../../../apps/restaurant/src/store/useRestaurantStore';
import { toast } from 'react-hot-toast';
import supplierService, { LinkedSupplier, Supplier } from '../../../../../apps/restaurant/src/services/supplier.service';
import AddSupplierPopup from '../../../../../apps/restaurant/src/views/Inventory/Suppliers/components/AddSupplierPopup';

interface SelectOption {
  value: string;
  label: string;
  suplier: string;
}

type Props<T> = {
  data: {
    fileColumns: string[];
    detectedColumns: T;
  };
  file: File;
  onCancelClick: () => void;
  onUpload: (mappedColumns: T, data: any) => Promise<any>;
  uploadSuccess: () => void;
  getPreview: (mappedColumns: T) => Promise<T[]>;
  headers: {
    name: string;
    selector: keyof T;
  }[];
};

const UploadValidation = <
  T extends {
    [key: string]: string;
  },
>(
  props: Props<T>
) => {
  const { t } = useTranslation('common');

  const [headerValues, setHeaderValues] = useState<T>(
    (Object.keys(props.data.detectedColumns) as (keyof T)[]).reduce(
      (acc, key) => {
        acc[key] = props.data.detectedColumns[key] ?? '-';
        return acc;
      },
      {} as T
    )
  );

  const [preview, setPreview] = useState(false);
  const [previewData, setPreviewData] = useState<T[]>([]);
  const [supplier, setSupplierData] = useState<T[]>([]);
  const [selectedValues, setSelectedValues] = useState<{ [key: number]: SelectOption | null }>({});
  const [suppliers, setSuppliers] = useState<Supplier[]>([]);

  const [showPopup, setShowPopup] = useState(false);
  const [editSupplier, setEditSupplier] = useState<LinkedSupplier | null>(
    null
  );
  const [popupMode, setPopupMode] = useState<'add' | 'edit'>('add');
  const [isLoading, setIsLoading] = useState(false);



  useEffect(() => {
    const uniqueSupplier = Array.from(new Map(previewData.map(item => [item.
      Supplier, item])).values());
    setSupplierData(uniqueSupplier)
  }, [previewData])

  const { restaurantUUID } = useRestaurantStore((state) => ({
    restaurantUUID: state.selectedRestaurantUUID,
    restaurants: state.restaurants,
  }));

  useEffect(() => {
    if (!restaurantUUID) return;

    fetchSuppliersAndSync();
  }, [restaurantUUID]);

  const fetchSuppliersAndSync = async () => {
    try {
      const data =
        await supplierService.getRestaurantSuppliers(restaurantUUID);
      setSuppliers(data);
      {
        connectedIntegrations && handleSync();
      }
    } catch (error) {
      console.error('Error fetching suppliers or syncing:', error);
    } finally {
      setTimeout(() => {
        setLoading(false);
      }, 1000);
    }
  };



  const [error, setErrror] = useState(false);
  const selectedRestaurantUUID = useRestaurantStore(
    (state) => state.selectedRestaurantUUID
  );

  const getColumnNames = (): T | null => {
    return (Object.keys(headerValues) as Array<keyof T>).reduce(
      (previousValue, key) => {
        return { ...previousValue, [key]: headerValues[key] || 'N/A' };
      },
      headerValues
    );
  };

  const handleChange = (value: SelectOption | null, index: number, sup: string) => {

    setSelectedValues((prevSelectedValues) => ({
      ...prevSelectedValues,
      [sup]: value
    }));
  };

  const handleValueChange = (field: keyof T, value: string) => {
    setHeaderValues((prevValues) => ({
      ...prevValues!,
      [field]: value,
    }));

    if (preview) setPreview(false);
  };

  const handlePreviewClick = () => {
    setPreview(!preview);
    if (preview || !selectedRestaurantUUID) return;

    const columnsNames = getColumnNames() as T;

    props
      .getPreview(columnsNames)
      .then((data) => {
        setPreviewData(data);
      })
      .catch((err) => {
        console.log('error : ', err);
      });
  };

  const handleValidClick = () => {
    if (headerValues !== null && selectedRestaurantUUID !== undefined) {
      const columnsNames = getColumnNames() as T;
      setIsLoading(true);
      props
        .onUpload(columnsNames, selectedValues)
        .then(() => {
          setErrror(false);
          toast.success(t('common:inventory.successBulkImport'));
          props.uploadSuccess();
          setIsLoading(true);
        })
        .catch((err) => {
          console.log('error : ', err);
          setErrror(true);
          toast.error(t('common:inventory.errorBulkImport'));
          setIsLoading(true);
        });
    }
  };

  useEffect(() => {
    if (!selectedRestaurantUUID) return;

    supplierService
      .getRestaurantSuppliers(selectedRestaurantUUID)
      .then((res) => {
        const suppliersList: Supplier[] = [];
        res.forEach((supplier) => {
          suppliersList.push(supplier);
        });
        setSuppliers(suppliersList);
      });
  }, [selectedRestaurantUUID]);

  const handleAddSupplierClick = () => {
    setPopupMode('add');
    setEditSupplier(null);
    setShowPopup(true);
  };

  return (
    <Popup
      isVisible={true}
      title={t('inventory.uploadCSV.popup.title')}
      subtitle={t('inventory.uploadCSV.popup.subtitle')}
      onRequestClose={props.onCancelClick}>
      <div className="upload-popup">
        {isLoading && (
          <div className='loader'>
            <Loading size="large" />
          </div>
        ) }
        <div className="headers">
          {props.headers.map((field) => (
            <div className="header" key={field.name}>
              <span>{field.name}</span>
              <Select
                isClearable
                placeholder={`Select ${field}`}
                options={props.data.fileColumns.map((option) => ({
                  value: option,
                  label: option,
                }))}
                value={{
                  value:
                    headerValues[field.selector as keyof ColumnsNameMapping],
                  label:
                    headerValues[field.selector as keyof ColumnsNameMapping],
                }}
                onChange={(value) =>
                  handleValueChange(field.selector, value?.value ?? '-')
                }
              />
            </div>
          ))}
        </div>
        <div className="preview-btn-container">
          <div className="preview-btn" onClick={handlePreviewClick}>
            <p>{t('preview')}</p>
            {preview ? (
              <i className="fa-solid fa-chevron-up"></i>
            ) : (
              <i className="fa-solid fa-magnifying-glass"></i>
            )}
          </div>
        </div>
        <div
          className="preview"
          style={preview ? { maxHeight: 'calc(100vh - 360px)', overflow: "auto" } : { maxHeight: 0 }}>
          <div className=''>
            {supplier && <div style={{ display: "flex", justifyContent: "space-between", marginBottom: "12px" }}><p style={{ marginBottom: "12px" }}>We have detected <strong>{supplier.length}</strong> new supllier</p>
              <Button
                type="primary"
                actionType="button"
                value={t('common:inventory.addSupplierBtn')}
                className="submit"
                onClick={() => handleAddSupplierClick()}
              /></div>
            }
            {
              supplier && supplier.map((item, index) => {
                return <div key={index} className='flex' style={{ marginBottom: "12px", }}>
                  <p style={{ minWidth: "120px" }}>{item?.Supplier}</p>
                  <div style={{width:"200px"}}>
                    <Select
                      isClearable
                      placeholder="Select an option"
                      options={suppliers.map((option) => ({
                        value: option.uuid,
                        label: option.name,
                      }))}
                      value={selectedValues[item?.Supplier] || null}
                      onChange={(value) => handleChange(value as SelectOption | null, index, item?.Supplier)}
                    />
                  </div>

                </div>
              })
            }
          </div>
          <div className="table">
            <div className="row first-row">
              <span>{t('ingredient')}</span>
              <span>{t('quantity')}</span>
              <span>{t('unit')}</span>
              <span>{t('supplier')}</span>
              <span>{t('cost')}</span>
            </div>
            {previewData &&
              previewData.map((data: Record<string, string>, index) => (
                <div className="row" key={`row-${index}`}>
                  <span key={`ingredient-${index}`}>
                    {data[headerValues.ingredient]}
                  </span>
                  <span key={`quantity-${index}`}>
                    {data[headerValues.quantity]}
                  </span>
                  <span key={`unit-${index}`}>{data[headerValues.unit]}</span>
                  <span key={`supplier-${index}`}>
                    {data[headerValues.supplier]}
                  </span>
                  <span key={`cost-${index}`}>{data[headerValues.cost]}</span>
                </div>
              ))}
          </div>
        </div>

        {error && (
          <span className="text-error">
            {t('error.trigger')}. {t('error.tryLater')}
          </span>
        )}

        <div className="button-container">
          <Button
            value={t('cancel')}
            type="secondary"
            onClick={props.onCancelClick}
          />
          <Button
            value={t('validate')}
            type="primary"
            onClick={handleValidClick}
          />
        </div>
      </div>
      <AddSupplierPopup
        isVisible={showPopup}
        fetchSuppliersAndSync={fetchSuppliersAndSync}
        onRequestClose={() => setShowPopup(false)}
        onSupplierAdded={(supplier) => {
          setSuppliers((suppliers) => [
            ...suppliers,
            {
              ...supplier,
              uuid: Math.random().toString(),
              linked: false,
              linkedAt: new Date(),
            },
          ]);
        }}
        onSupplierUpdated={(updatedSupplier) => {
          setSuppliers((prev) =>
            prev.map((supplier) =>
              supplier.uuid === updatedSupplier.uuid
                ? updatedSupplier
                : supplier
            )
          );
        }}
        editSupplier={editSupplier}
        mode={popupMode}
      />
    </Popup>
  );
};

export default UploadValidation;


================================================
File: /packages/shared-ui/components/layout/UploadValidation/style.scss
================================================
.upload-popup {
  display: flex;
  flex-direction: column;
  gap: 30px;

  .headers {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    row-gap: 15px;
    column-gap: 20px;
    margin-top: 10px;

    .header {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 5px;
      flex: 1;

      & > div {
        min-width: 100px;
        width: 100%;
      }

      span {
        font-size: 0.9rem;
        font-weight: var(--medium);
      }
    }
  }

  .preview-btn-container {
    display: flex;
    justify-content: center;

    .preview-btn {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 10px;
      color: var(--primaryColor);
      cursor: pointer;
    }
  }

  .preview {
    overflow: hidden;
    transition: all 0.3s;

    .flex{
      display: flex;
      gap: 10px;
    }

    .table {
      display: flex;
      flex-direction: column;
      border: 2px solid var(--secondaryColorAccentued);
      width: 100%;
      font-size: 0.8rem;

      .row {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
        border-bottom: 1px solid var(--secondaryColorAccentued);

        span {
          text-align: center;
          font-weight: var(--regular);
          padding: 10px 0;
        }
        span:nth-child(2n) {
          border-left: 1px solid var(--secondaryColorAccentued);
          border-right: 1px solid var(--secondaryColorAccentued);
        }
      }
      .first-row span {
        font-weight: var(--bold);
        background-color: var(--secondaryColorAccentued);
      }
    }
  }

  .button-container {
    display: flex;
    justify-content: flex-end;
    gap: 30px;
  }
}

.loader{
  position: fixed;
    z-index: 999;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #0000002b;

}

================================================
File: /packages/shared-ui/hooks/index.ts
================================================
export * from './use-debounce';
export * from './use-title';
export * from './use-lock-body-scroll';


================================================
File: /packages/shared-ui/hooks/use-debounce.ts
================================================
import { useEffect, useState } from 'react';

/**
 * Hook to debounce a value
 * @param value value 