import { FaInfoCircle } from 'react-icons/fa';
import styles from './ForecastCard.module.scss';
import { Dropdown, Table, Tabs } from 'shared-ui';
import { forecastMock } from '../mock';
import dayjs from 'dayjs';
import { Tooltip } from 'react-tooltip';
import { useState } from 'react';
import { ForecastChart } from './ForecastChart';

type Props = {};

//TODO: Vertical table (header = days)

const chartModes = [
  {
    label: 'Revenue',
    value: 'revenue',
  },
  {
    label: 'Profit',
    value: 'profit',
  },
];

export const ForecastCard = (props: Props) => {
  const [selectedMode, setSelectedMode] = useState(0);
  const [selectedChartMode, setSelectedChartMode] = useState<
    'revenue' | 'profit'
  >('revenue');

  return (
    <>
      <div className={styles.card}>
        <div className={styles.header}>
          <div>
            <h2 className={styles.title}>Forecast</h2>
            <Tabs
              tabs={['Table', 'Chart']}
              onClick={setSelectedMode}
              selectedIndex={selectedMode}
              className={styles.tabs}
            />
          </div>
          <div className={styles.rightHeader}>
            {selectedMode === 1 && (
              <Dropdown
                options={chartModes}
                selectedOption={selectedChartMode}
                onOptionChange={setSelectedChartMode}
              />
            )}
            <FaInfoCircle
              data-tooltip-id="forecast-tooltip"
              data-tooltip-content="These data generated by Peckish are forecasts of future performance"
            />
          </div>
        </div>
        <div className={styles.content}>
          {/* {Children} */}
          {selectedMode === 0 ? (
            <Table
              data={forecastMock.days}
              columns={[
                {
                  header: 'Date',
                  key: 'date',
                  renderItem: (row) => dayjs(row.date).format('ddd D'),
                },
                { header: 'Revenue', key: 'revenue' },
                { header: 'Profit', key: 'profit' },
                { header: 'Sales', key: 'sales' },
                { header: 'Savings', key: 'savings' },
              ]}
            />
          ) : (
            <ForecastChart data={forecastMock} visibleKey={selectedChartMode} />
          )}
        </div>
      </div>

      <Tooltip id="forecast-tooltip" />
    </>
  );
};
